{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        { "name": "initialOwner", "type": "address", "internalType": "address" }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "allowance",
      "inputs": [
        { "name": "owner", "type": "address", "internalType": "address" },
        { "name": "spender", "type": "address", "internalType": "address" },
        { "name": "id", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        { "name": "amount", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "approve",
      "inputs": [
        { "name": "spender", "type": "address", "internalType": "address" },
        { "name": "id", "type": "uint256", "internalType": "uint256" },
        { "name": "amount", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "balanceOf",
      "inputs": [
        { "name": "owner", "type": "address", "internalType": "address" },
        { "name": "id", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        { "name": "balance", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "burn",
      "inputs": [
        { "name": "from", "type": "address", "internalType": "address" },
        { "name": "id", "type": "uint256", "internalType": "uint256" },
        { "name": "amount", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "clear",
      "inputs": [
        { "name": "currency", "type": "address", "internalType": "Currency" },
        { "name": "amount", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "collectProtocolFees",
      "inputs": [
        { "name": "recipient", "type": "address", "internalType": "address" },
        { "name": "currency", "type": "address", "internalType": "Currency" },
        { "name": "amount", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        {
          "name": "amountCollected",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "donate",
      "inputs": [
        {
          "name": "key",
          "type": "tuple",
          "internalType": "struct PoolKey",
          "components": [
            {
              "name": "currency0",
              "type": "address",
              "internalType": "Currency"
            },
            {
              "name": "currency1",
              "type": "address",
              "internalType": "Currency"
            },
            { "name": "fee", "type": "uint24", "internalType": "uint24" },
            { "name": "tickSpacing", "type": "int24", "internalType": "int24" },
            {
              "name": "hooks",
              "type": "address",
              "internalType": "contract IHooks"
            }
          ]
        },
        { "name": "amount0", "type": "uint256", "internalType": "uint256" },
        { "name": "amount1", "type": "uint256", "internalType": "uint256" },
        { "name": "hookData", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [
        { "name": "delta", "type": "int256", "internalType": "BalanceDelta" }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "extsload",
      "inputs": [
        { "name": "slot", "type": "bytes32", "internalType": "bytes32" }
      ],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "extsload",
      "inputs": [
        { "name": "startSlot", "type": "bytes32", "internalType": "bytes32" },
        { "name": "nSlots", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        { "name": "", "type": "bytes32[]", "internalType": "bytes32[]" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "extsload",
      "inputs": [
        { "name": "slots", "type": "bytes32[]", "internalType": "bytes32[]" }
      ],
      "outputs": [
        { "name": "", "type": "bytes32[]", "internalType": "bytes32[]" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "exttload",
      "inputs": [
        { "name": "slots", "type": "bytes32[]", "internalType": "bytes32[]" }
      ],
      "outputs": [
        { "name": "", "type": "bytes32[]", "internalType": "bytes32[]" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "exttload",
      "inputs": [
        { "name": "slot", "type": "bytes32", "internalType": "bytes32" }
      ],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "initialize",
      "inputs": [
        {
          "name": "key",
          "type": "tuple",
          "internalType": "struct PoolKey",
          "components": [
            {
              "name": "currency0",
              "type": "address",
              "internalType": "Currency"
            },
            {
              "name": "currency1",
              "type": "address",
              "internalType": "Currency"
            },
            { "name": "fee", "type": "uint24", "internalType": "uint24" },
            { "name": "tickSpacing", "type": "int24", "internalType": "int24" },
            {
              "name": "hooks",
              "type": "address",
              "internalType": "contract IHooks"
            }
          ]
        },
        { "name": "sqrtPriceX96", "type": "uint160", "internalType": "uint160" }
      ],
      "outputs": [{ "name": "tick", "type": "int24", "internalType": "int24" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "isOperator",
      "inputs": [
        { "name": "owner", "type": "address", "internalType": "address" },
        { "name": "operator", "type": "address", "internalType": "address" }
      ],
      "outputs": [
        { "name": "isOperator", "type": "bool", "internalType": "bool" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "mint",
      "inputs": [
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "id", "type": "uint256", "internalType": "uint256" },
        { "name": "amount", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "modifyLiquidity",
      "inputs": [
        {
          "name": "key",
          "type": "tuple",
          "internalType": "struct PoolKey",
          "components": [
            {
              "name": "currency0",
              "type": "address",
              "internalType": "Currency"
            },
            {
              "name": "currency1",
              "type": "address",
              "internalType": "Currency"
            },
            { "name": "fee", "type": "uint24", "internalType": "uint24" },
            { "name": "tickSpacing", "type": "int24", "internalType": "int24" },
            {
              "name": "hooks",
              "type": "address",
              "internalType": "contract IHooks"
            }
          ]
        },
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct IPoolManager.ModifyLiquidityParams",
          "components": [
            { "name": "tickLower", "type": "int24", "internalType": "int24" },
            { "name": "tickUpper", "type": "int24", "internalType": "int24" },
            {
              "name": "liquidityDelta",
              "type": "int256",
              "internalType": "int256"
            },
            { "name": "salt", "type": "bytes32", "internalType": "bytes32" }
          ]
        },
        { "name": "hookData", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [
        {
          "name": "callerDelta",
          "type": "int256",
          "internalType": "BalanceDelta"
        },
        {
          "name": "feesAccrued",
          "type": "int256",
          "internalType": "BalanceDelta"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "owner",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "protocolFeeController",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "protocolFeesAccrued",
      "inputs": [
        { "name": "currency", "type": "address", "internalType": "Currency" }
      ],
      "outputs": [
        { "name": "amount", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "setOperator",
      "inputs": [
        { "name": "operator", "type": "address", "internalType": "address" },
        { "name": "approved", "type": "bool", "internalType": "bool" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setProtocolFee",
      "inputs": [
        {
          "name": "key",
          "type": "tuple",
          "internalType": "struct PoolKey",
          "components": [
            {
              "name": "currency0",
              "type": "address",
              "internalType": "Currency"
            },
            {
              "name": "currency1",
              "type": "address",
              "internalType": "Currency"
            },
            { "name": "fee", "type": "uint24", "internalType": "uint24" },
            { "name": "tickSpacing", "type": "int24", "internalType": "int24" },
            {
              "name": "hooks",
              "type": "address",
              "internalType": "contract IHooks"
            }
          ]
        },
        { "name": "newProtocolFee", "type": "uint24", "internalType": "uint24" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setProtocolFeeController",
      "inputs": [
        { "name": "controller", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "settle",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "settleFor",
      "inputs": [
        { "name": "recipient", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "supportsInterface",
      "inputs": [
        { "name": "interfaceId", "type": "bytes4", "internalType": "bytes4" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "swap",
      "inputs": [
        {
          "name": "key",
          "type": "tuple",
          "internalType": "struct PoolKey",
          "components": [
            {
              "name": "currency0",
              "type": "address",
              "internalType": "Currency"
            },
            {
              "name": "currency1",
              "type": "address",
              "internalType": "Currency"
            },
            { "name": "fee", "type": "uint24", "internalType": "uint24" },
            { "name": "tickSpacing", "type": "int24", "internalType": "int24" },
            {
              "name": "hooks",
              "type": "address",
              "internalType": "contract IHooks"
            }
          ]
        },
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct IPoolManager.SwapParams",
          "components": [
            { "name": "zeroForOne", "type": "bool", "internalType": "bool" },
            {
              "name": "amountSpecified",
              "type": "int256",
              "internalType": "int256"
            },
            {
              "name": "sqrtPriceLimitX96",
              "type": "uint160",
              "internalType": "uint160"
            }
          ]
        },
        { "name": "hookData", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [
        {
          "name": "swapDelta",
          "type": "int256",
          "internalType": "BalanceDelta"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "sync",
      "inputs": [
        { "name": "currency", "type": "address", "internalType": "Currency" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "take",
      "inputs": [
        { "name": "currency", "type": "address", "internalType": "Currency" },
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "amount", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "transfer",
      "inputs": [
        { "name": "receiver", "type": "address", "internalType": "address" },
        { "name": "id", "type": "uint256", "internalType": "uint256" },
        { "name": "amount", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "transferFrom",
      "inputs": [
        { "name": "sender", "type": "address", "internalType": "address" },
        { "name": "receiver", "type": "address", "internalType": "address" },
        { "name": "id", "type": "uint256", "internalType": "uint256" },
        { "name": "amount", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "transferOwnership",
      "inputs": [
        { "name": "newOwner", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "unlock",
      "inputs": [{ "name": "data", "type": "bytes", "internalType": "bytes" }],
      "outputs": [
        { "name": "result", "type": "bytes", "internalType": "bytes" }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "updateDynamicLPFee",
      "inputs": [
        {
          "name": "key",
          "type": "tuple",
          "internalType": "struct PoolKey",
          "components": [
            {
              "name": "currency0",
              "type": "address",
              "internalType": "Currency"
            },
            {
              "name": "currency1",
              "type": "address",
              "internalType": "Currency"
            },
            { "name": "fee", "type": "uint24", "internalType": "uint24" },
            { "name": "tickSpacing", "type": "int24", "internalType": "int24" },
            {
              "name": "hooks",
              "type": "address",
              "internalType": "contract IHooks"
            }
          ]
        },
        {
          "name": "newDynamicLPFee",
          "type": "uint24",
          "internalType": "uint24"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "event",
      "name": "Approval",
      "inputs": [
        {
          "name": "owner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "spender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "id",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Donate",
      "inputs": [
        {
          "name": "id",
          "type": "bytes32",
          "indexed": true,
          "internalType": "PoolId"
        },
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "amount0",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "amount1",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Initialize",
      "inputs": [
        {
          "name": "id",
          "type": "bytes32",
          "indexed": true,
          "internalType": "PoolId"
        },
        {
          "name": "currency0",
          "type": "address",
          "indexed": true,
          "internalType": "Currency"
        },
        {
          "name": "currency1",
          "type": "address",
          "indexed": true,
          "internalType": "Currency"
        },
        {
          "name": "fee",
          "type": "uint24",
          "indexed": false,
          "internalType": "uint24"
        },
        {
          "name": "tickSpacing",
          "type": "int24",
          "indexed": false,
          "internalType": "int24"
        },
        {
          "name": "hooks",
          "type": "address",
          "indexed": false,
          "internalType": "contract IHooks"
        },
        {
          "name": "sqrtPriceX96",
          "type": "uint160",
          "indexed": false,
          "internalType": "uint160"
        },
        {
          "name": "tick",
          "type": "int24",
          "indexed": false,
          "internalType": "int24"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ModifyLiquidity",
      "inputs": [
        {
          "name": "id",
          "type": "bytes32",
          "indexed": true,
          "internalType": "PoolId"
        },
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "tickLower",
          "type": "int24",
          "indexed": false,
          "internalType": "int24"
        },
        {
          "name": "tickUpper",
          "type": "int24",
          "indexed": false,
          "internalType": "int24"
        },
        {
          "name": "liquidityDelta",
          "type": "int256",
          "indexed": false,
          "internalType": "int256"
        },
        {
          "name": "salt",
          "type": "bytes32",
          "indexed": false,
          "internalType": "bytes32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OperatorSet",
      "inputs": [
        {
          "name": "owner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "operator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "approved",
          "type": "bool",
          "indexed": false,
          "internalType": "bool"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OwnershipTransferred",
      "inputs": [
        {
          "name": "user",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ProtocolFeeControllerUpdated",
      "inputs": [
        {
          "name": "protocolFeeController",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ProtocolFeeUpdated",
      "inputs": [
        {
          "name": "id",
          "type": "bytes32",
          "indexed": true,
          "internalType": "PoolId"
        },
        {
          "name": "protocolFee",
          "type": "uint24",
          "indexed": false,
          "internalType": "uint24"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Swap",
      "inputs": [
        {
          "name": "id",
          "type": "bytes32",
          "indexed": true,
          "internalType": "PoolId"
        },
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "amount0",
          "type": "int128",
          "indexed": false,
          "internalType": "int128"
        },
        {
          "name": "amount1",
          "type": "int128",
          "indexed": false,
          "internalType": "int128"
        },
        {
          "name": "sqrtPriceX96",
          "type": "uint160",
          "indexed": false,
          "internalType": "uint160"
        },
        {
          "name": "liquidity",
          "type": "uint128",
          "indexed": false,
          "internalType": "uint128"
        },
        {
          "name": "tick",
          "type": "int24",
          "indexed": false,
          "internalType": "int24"
        },
        {
          "name": "fee",
          "type": "uint24",
          "indexed": false,
          "internalType": "uint24"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Transfer",
      "inputs": [
        {
          "name": "caller",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "from",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "to",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "id",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    { "type": "error", "name": "AlreadyUnlocked", "inputs": [] },
    {
      "type": "error",
      "name": "CurrenciesOutOfOrderOrEqual",
      "inputs": [
        { "name": "currency0", "type": "address", "internalType": "address" },
        { "name": "currency1", "type": "address", "internalType": "address" }
      ]
    },
    { "type": "error", "name": "CurrencyNotSettled", "inputs": [] },
    { "type": "error", "name": "DelegateCallNotAllowed", "inputs": [] },
    { "type": "error", "name": "InvalidCaller", "inputs": [] },
    { "type": "error", "name": "ManagerLocked", "inputs": [] },
    { "type": "error", "name": "MustClearExactPositiveDelta", "inputs": [] },
    { "type": "error", "name": "NonzeroNativeValue", "inputs": [] },
    { "type": "error", "name": "PoolNotInitialized", "inputs": [] },
    { "type": "error", "name": "ProtocolFeeCurrencySynced", "inputs": [] },
    {
      "type": "error",
      "name": "ProtocolFeeTooLarge",
      "inputs": [{ "name": "fee", "type": "uint24", "internalType": "uint24" }]
    },
    { "type": "error", "name": "SwapAmountCannotBeZero", "inputs": [] },
    {
      "type": "error",
      "name": "TickSpacingTooLarge",
      "inputs": [
        { "name": "tickSpacing", "type": "int24", "internalType": "int24" }
      ]
    },
    {
      "type": "error",
      "name": "TickSpacingTooSmall",
      "inputs": [
        { "name": "tickSpacing", "type": "int24", "internalType": "int24" }
      ]
    },
    { "type": "error", "name": "UnauthorizedDynamicLPFeeUpdate", "inputs": [] }
  ],
  "bytecode": {
    "object": "0x60a0604052348015600e575f80fd5b50604051614df8380380614df8833981016040819052602b91607f565b5f80546001600160a01b0319166001600160a01b038316908117825560405183928392917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35050306080525060aa565b5f60208284031215608e575f80fd5b81516001600160a01b038116811460a3575f80fd5b9392505050565b608051614d366100c25f395f6118170152614d365ff3fe6080604052600436106101e5575f3560e01c80635a6bcfda11610108578063a58411941161009d578063f135baaa1161006d578063f135baaa14610602578063f2fde38b14610621578063f3cd914c14610640578063f5298aca1461065f578063fe99049a1461067e575f80fd5b8063a58411941461056c578063b6363cf21461058b578063dbd035ff146105c4578063f02de3b2146105e3575f80fd5b80638161b874116100d85780638161b874146104cd5780638da5cb5b146104ec57806397e8cd4e146105225780639bf6645f1461054d575f80fd5b80635a6bcfda146104295780636276cbbe1461045d5780637e87ce7d1461048f57806380f0b44c146104ae575f80fd5b80632d7713891161017e57806348c894911161014e57806348c894911461038357806352759651146103af578063558a7297146103ce578063598af9e7146103ed575f80fd5b80632d7713891461030657806335fd631a146103255780633dd45adb14610351578063426a849314610364575f80fd5b806311da60b4116101b957806311da60b4146102a1578063156e29f6146102a95780631e2eaeaf146102c8578063234266d7146102e7575f80fd5b8062fdd58e146101e957806301ffc9a714610232578063095bcdb6146102615780630b0d9c0914610280575b5f80fd5b3480156101f4575f80fd5b5061021f61020336600461417b565b600460209081525f928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b34801561023d575f80fd5b5061025161024c3660046141a5565b61069d565b6040519015158152602001610229565b34801561026c575f80fd5b5061025161027b3660046141cc565b6106d3565b34801561028b575f80fd5b5061029f61029a3660046141fe565b61077a565b005b61021f6107cb565b3480156102b4575f80fd5b5061029f6102c33660046141cc565b6107fd565b3480156102d3575f80fd5b5061021f6102e236600461423c565b610848565b3480156102f2575f80fd5b5061021f6103013660046143bb565b610852565b348015610311575f80fd5b5061029f61032036600461441f565b610930565b348015610330575f80fd5b5061034461033f36600461443a565b6109c6565b604051610229919061445a565b61021f61035f36600461441f565b610a03565b34801561036f575f80fd5b5061025161037e3660046141cc565b610a35565b34801561038e575f80fd5b506103a261039d36600461449c565b610a99565b60405161022991906144da565b3480156103ba575f80fd5b5061029f6103c936600461450f565b610b5c565b3480156103d9575f80fd5b506102516103e8366004614550565b610bcb565b3480156103f8575f80fd5b5061021f6104073660046141fe565b600560209081525f938452604080852082529284528284209052825290205481565b348015610434575f80fd5b5061044861044336600461457a565b610c3a565b60408051928352602083019190915201610229565b348015610468575f80fd5b5061047c61047736600461461c565b610dd9565b60405160029190910b8152602001610229565b34801561049a575f80fd5b5061029f6104a936600461450f565b610fb1565b3480156104b9575f80fd5b5061029f6104c836600461417b565b611063565b3480156104d8575f80fd5b5061021f6104e73660046141fe565b6110d0565b3480156104f7575f80fd5b505f5461050a906001600160a01b031681565b6040516001600160a01b039091168152602001610229565b34801561052d575f80fd5b5061021f61053c36600461441f565b60016020525f908152604090205481565b348015610558575f80fd5b50610344610567366004614652565b6111a5565b348015610577575f80fd5b5061029f61058636600461441f565b6111de565b348015610596575f80fd5b506102516105a53660046146c1565b600360209081525f928352604080842090915290825290205460ff1681565b3480156105cf575f80fd5b506103446105de366004614652565b61121a565b3480156105ee575f80fd5b5060025461050a906001600160a01b031681565b34801561060d575f80fd5b5061021f61061c36600461423c565b611251565b34801561062c575f80fd5b5061029f61063b36600461441f565b61125b565b34801561064b575f80fd5b5061021f61065a3660046146ed565b6112ed565b34801561066a575f80fd5b5061029f6106793660046141cc565b611433565b348015610689575f80fd5b5061025161069836600461478b565b61147e565b5f6301ffc9a760e01b6001600160e01b0319831614806106cd5750630f632fb360e01b6001600160e01b03198316145b92915050565b335f9081526004602090815260408083208584529091528120805483919083906106fe9084906147e2565b90915550506001600160a01b0384165f908152600460209081526040808320868452909152812080548492906107359084906147f5565b909155505060408051338082526020820185905285926001600160a01b038816925f80516020614ca183398151915291015b60405180910390a45060015b9392505050565b5f80516020614cc18339815191525c61079d5761079d6354e3ca0d60e01b6115dd565b6107b2836107aa836115e5565b5f0333611605565b6107c66001600160a01b0384168383611658565b505050565b5f5f80516020614cc18339815191525c6107ef576107ef6354e3ca0d60e01b6115dd565b6107f8336116f7565b905090565b5f80516020614cc18339815191525c610820576108206354e3ca0d60e01b6115dd565b8161082e816107aa846115e5565b610842846001600160a01b0383168461179a565b50505050565b5f81545f5260205ff35b5f5f80516020614cc18339815191525c610876576108766354e3ca0d60e01b6115dd565b61087e61180c565b60a086205f8181526006602052604090206108988161184e565b60808801516108b4906001600160a01b0316898989898961186f565b6108bf8188886118ec565b92506108cc88843361198f565b6040805188815260208101889052339184917f29ef05caaff9404b7cb6d1c0e9bbae9eaa7ab2541feba1a9c4248594c08156cb910160405180910390a36080880151610925906001600160a01b031689898989896119b7565b505095945050505050565b5f546001600160a01b0316331461097d5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064015b60405180910390fd5b600280546001600160a01b0319166001600160a01b0383169081179091556040517fb4bd8ef53df690b9943d3318996006dbb82a25f54719d8c8035b516a2a5b8acc905f90a250565b6060604051808360051b6020835284602084015260408301925080830190505b855483526020830192506001860195508083106109e65781810382f35b5f5f80516020614cc18339815191525c610a2757610a276354e3ca0d60e01b6115dd565b6106cd826116f7565b919050565b335f8181526005602090815260408083206001600160a01b03881680855290835281842087855290925280832085905551919285927fb3fd5071835887567a0671151121894ddccc2842f1d10bedad13e0d17cace9a7906107679087815260200190565b60605f80516020614cc18339815191525c15610abf57610abf6328486b6360e11b6115dd565b610ac7611a29565b6040516348eeb9a360e11b815233906391dd734690610aec9086908690600401614830565b5f604051808303815f875af1158015610b07573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052610b2e9190810190614843565b90505f80516020614ce18339815191525c15610b5457610b54635212cba160e01b6115dd565b6106cd611a3c565b604082015162ffffff1662800000141580610b8d575081608001516001600160a01b0316336001600160a01b031614155b15610ba257610ba26330d2164160e01b6115dd565b610bb08162ffffff16611a4e565b60a082205f8181526006602052604090206107c69083611a74565b335f8181526003602090815260408083206001600160a01b038716808552908352818420805460ff191687151590811790915591519182529293917fceb576d9f15e4e200fdb5096d64d5dfd667e16def20c1eefd14256d8e3faa267910160405180910390a350600192915050565b5f805f80516020614cc18339815191525c610c5f57610c5f6354e3ca0d60e01b6115dd565b610c6761180c565b60a086205f818152600660205260409020610c818161184e565b6080880151610c9c906001600160a01b031689898989611a8f565b5f610d036040518060c00160405280336001600160a01b031681526020018a5f015160020b81526020018a6020015160020b8152602001610ce08b60400151611b91565b600f0b81526060808d015160020b60208301528b01516040909101528390611bad565b94509050610d118185611f25565b94505050336001600160a01b0316817ff208f4912782fd25c7f114ca3723a2d5dd6f3bcc3ac8db5af63baa85f711d5ec885f015189602001518a604001518b60600151604051610d829493929190600294850b81529290930b60208301526040820152606081019190915260800190565b60405180910390a360808701515f90610da9906001600160a01b0316898987878b8b611f58565b90945090508015610dc357610dc388828a6080015161198f565b610dce88853361198f565b505094509492505050565b5f610de261180c565b6060830151617fff60029190910b1315610e0d576060830151610e0d906316e0049f60e31b9061207d565b600160020b836060015160020b1215610e37576060830151610e3790631d3d20b160e31b9061207d565b825160208401516001600160a01b03908116911610610e695782516020840151610e69916306e6c98360e41b9161208c565b610e8d836040015184608001516001600160a01b03166120b590919063ffffffff16565b610ea8576080830151610ea890630732d7b560e51b90612176565b5f610ebb846040015162ffffff1661218b565b6080850151909150610ed7906001600160a01b031685856121b0565b60a084205f818152600660205260409020610ef390858461221d565b925084602001516001600160a01b0316855f01516001600160a01b0316827fdd466e674ea557f56295e2d0218a125ea4b4f0f6f3307b95f85e6110838d6438886040015189606001518a608001518a8a604051610f8795949392919062ffffff959095168552600293840b60208601526001600160a01b03928316604086015291166060840152900b608082015260a00190565b60405180910390a46080850151610fa9906001600160a01b0316868686612271565b505092915050565b6002546001600160a01b03163314610fd357610fd36348f5c3ed60e01b6115dd565b6103e9610fff821610623e900062fff000831610166110025761100263a7abe2f760e01b62ffffff8316612176565b60a082206110248261101e835f90815260066020526040902090565b906122e0565b60405162ffffff8316815281907fe9c42593e71f84403b84352cd168d693e2c9fcd1fdbcc3feb21d92b43e6696f99060200160405180910390a2505050565b5f80516020614cc18339815191525c611086576110866354e3ca0d60e01b6115dd565b335f9081526001600160a01b038316602052604081205c906110a7836115e5565b90508181600f0b146110c3576110c363bda73abf60e01b6115dd565b61084284825f0333611605565b6002545f906001600160a01b031633146110f4576110f46348f5c3ed60e01b6115dd565b6001600160a01b0383161515801561112557506001600160a01b035f80516020614c818339815191525c8116908416145b1561113a5761113a6318f3cb2960e31b6115dd565b8115611146578161115f565b6001600160a01b0383165f908152600160205260409020545b6001600160a01b0384165f9081526001602052604081208054929350839290919061118b9084906147e2565b9091555061077390506001600160a01b0384168583611658565b606060405180602082528360208301526040820191508360051b8201855b80355c8452602093840193018184106111c3575b5081810382f35b6001600160a01b0381166111f7576111f4612307565b50565b5f61120a826001600160a01b0316612319565b90506112168282612395565b5050565b606060405180602082528360208301526040820191508360051b8201855b803554845260209384019301818410156111d757611238565b5f815c5f5260205ff35b5f546001600160a01b031633146112a35760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610974565b5f80546001600160a01b0319166001600160a01b0383169081178255604051909133917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a350565b5f5f80516020614cc18339815191525c611311576113116354e3ca0d60e01b6115dd565b61131961180c565b83602001515f036113345761133463be8b850760e01b6115dd565b60a085205f81815260066020526040902061134e8161184e565b60808701515f908190819061136f906001600160a01b03168b8b8b8b6123d5565b8093508195508294505050506113de84866040518060a001604052808681526020018e6060015160020b81526020018d5f0151151581526020018d604001516001600160a01b031681526020018562ffffff168152508c5f01516113d7578d602001516124f1565b8d516124f1565b60808b01519096505f925061140291506001600160a01b03168a8a888b8b886125cf565b9095509050801561141c5761141c89828b6080015161198f565b61142789863361198f565b50505050949350505050565b5f80516020614cc18339815191525c611456576114566354e3ca0d60e01b6115dd565b8161146a81611464846115e5565b33611605565b610842846001600160a01b038316846126f0565b5f336001600160a01b038616148015906114bb57506001600160a01b0385165f90815260036020908152604080832033845290915290205460ff16155b1561152b576001600160a01b0385165f90815260056020908152604080832033845282528083208684529091529020545f198114611529576114fd83826147e2565b6001600160a01b0387165f90815260056020908152604080832033845282528083208884529091529020555b505b6001600160a01b0385165f9081526004602090815260408083208684529091528120805484929061155d9084906147e2565b90915550506001600160a01b0384165f908152600460209081526040808320868452909152812080548492906115949084906147f5565b9091555050604080513381526020810184905284916001600160a01b0380881692908916915f80516020614ca1833981519152910160405180910390a45060015b949350505050565b805f5260045ffd5b5f6001607f1b8210611601576116016393dafdf160e01b6115dd565b5090565b81600f0b5f0361161457505050565b5f8061162a6001600160a01b03861684866127ae565b91509150805f036116425761163d6127e7565b611651565b815f036116515761165161280f565b5050505050565b5f6001600160a01b03841661168d575f805f8085875af190508061168857611688835f633d2cec6f60e21b612837565b610842565b60405163a9059cbb60e01b81526001600160a01b038416600482015282602482015260205f6044835f895af13d15601f3d1160015f511416171691505f81525f60208201525f60408201525080610842576108428463a9059cbb60e01b633c9fd93960e21b612837565b5f5f80516020614c818339815191525c6001600160a01b03811661171d57349150611781565b341561173357611733635876424f60e11b6115dd565b7f1e0745a7db1623981f0b2a5d4232364c00787266eb75ad546f190e6cebe9bd955c5f6117686001600160a01b038416612319565b905061177482826147e2565b935061177e612307565b50505b6117948161178e846115e5565b85611605565b50919050565b6001600160a01b0383165f908152600460209081526040808320858452909152812080548392906117cc9084906147f5565b9091555050604080513381526020810183905283916001600160a01b038616915f915f80516020614ca183398151915291015b60405180910390a4505050565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461184c5761184c6306c4a1c760e11b6115dd565b565b80546001600160a01b03165f036111f4576111f463486aa30760e01b6115dd565b85336001600160a01b038216146118e35760208716156118e3576118e13387878787876040516024016118a796959493929190614918565b60408051601f198184030181529190526020810180516001600160e01b0316635b54587d60e11b1790526001600160a01b038916906128af565b505b50505050505050565b60038301545f906001600160801b03168082036119135761191363a74f97ab60e01b6115dd565b61194161191f856115e5565b5f0361192a856115e5565b5f0360809190911b6001600160801b039091161790565b91508315611965576001850180546001600160801b038316600160801b8702040190555b8215611987576002850180546001600160801b038316600160801b8602040190555b509392505050565b82516119a59061199f8460801d90565b83611605565b6107c6836020015161199f84600f0b90565b85336001600160a01b038216146118e35760108716156118e3576118e13387878787876040516024016119ef96959493929190614918565b60408051601f198184030181529190526020810180516001600160e01b031663e1b4af6960e01b1790526001600160a01b038916906128af565b60015f80516020614cc18339815191525d565b5f5f80516020614cc18339815191525d565b620f424062ffffff821611156111f4576111f4631400211360e01b62ffffff8316612176565b611a7d8261184e565b8154611a899082612949565b90915550565b84336001600160a01b03821614611b89575f8460400151138015611ab65750610800861615155b15611b1757611b113386868686604051602401611ad7959493929190614962565b60408051601f198184030181529190526020810180516001600160e01b031663259982e560e01b1790526001600160a01b038816906128af565b50611b89565b5f846040015113158015611b2e5750610200861615155b15611b89576118e33386868686604051602401611b4f959493929190614962565b60408051601f198184030181529190526020810180516001600160e01b031663021d0ee760e41b1790526001600160a01b038816906128af565b505050505050565b80600f81900b8114610a3057610a306393dafdf160e01b6115dd565b6060810151602082015160408301515f9283929091611bcc8282612964565b604080516080810182525f80825260208201819052918101829052606081019190915283600f0b5f14611d0f57611c058884865f6129c4565b6001600160801b0316602083015215158152611c2488838660016129c4565b6001600160801b03166060830152151560408201525f600f85900b12611cd45760808701515f9060020b620d89e71981810783139082900503620d89e891909105036001016001600160801b03049050806001600160801b031682602001516001600160801b03161115611ca357611ca363b8e3c38560e01b8561207d565b806001600160801b031682606001516001600160801b03161115611cd257611cd263b8e3c38560e01b8461207d565b505b805115611cf0576080870151611cf09060058a01908590612a85565b806040015115611d0f576080870151611d0f9060058a01908490612a85565b5f80611d1c8a8686612ad7565b8a5160a08c015160408051602681019290925260068083018a9052600383018b9052928252603a600c8301205f838301819052602080850182905293819052908152928f01909152812092945090925080611d79838a8787612b8b565b91509150611da5611d89836115e5565b611d92836115e5565b6001600160801b031660809190911b1790565b995050505050505f84600f0b1215611e0e57805115611de157600283810b5f90815260048a016020526040812081815560018101829055909101555b806040015115611e0e57600282810b5f90815260048a016020526040812081815560018101829055909101555b5082600f0b5f14611f1b5786545f80611e2a8360a01c60020b90565b6001600160a01b038416915091508460020b8260020b1215611e7957611e72611e6c611e67611e5888612c44565b611e6188612c44565b8a612efc565b611b91565b60801b90565b9750611f17565b8360020b8260020b1215611ef257611eb0611e9a611e6783611e6188612c44565b611d92611e67611ea989612c44565b858b612f34565b60038b0154909850611ecb906001600160801b031687612f60565b60038b0180546001600160801b0319166001600160801b0392909216919091179055611f17565b611f145f611d92611e67611f0589612c44565b611f0e89612c44565b8b612f34565b97505b5050505b5050509250929050565b5f608082811d9084901d01600f83810b9085900b01611f4f611f4683611b91565b611d9283611b91565b95945050505050565b5f806001600160a01b0389163303611f7457508490505f612071565b8591505f8760400151131561200357610400891615611ffe57611fef33898989898989604051602401611fad97969594939291906149c2565b60408051601f198184030181529190526020810180516001600160e01b03166327c18fbf60e21b17905260028b1615155b6001600160a01b038c169190612f87565b9050611ffb8282612fc8565b91505b612071565b610100891615612071576120623389898989898960405160240161202d97969594939291906149c2565b60408051601f198184030181529190526020810180516001600160e01b0316633615df3f60e11b17905260018b161515611fde565b905061206e8282612fc8565b91505b97509795505050505050565b815f528060020b60045260245ffd5b6040518381526001600160a01b03831660048201526001600160a01b0382166024820152604481fd5b5f608083161580156120c957506008831615155b156120d557505f6106cd565b604083161580156120e857506004831615155b156120f457505f6106cd565b610400831615801561210857506002831615155b1561211457505f6106cd565b610100831615801561212857506001831615155b1561213457505f6106cd565b6001600160a01b0383161561216557613fff831615158061216057506280000062ffffff831614610773565b610773565b5062ffffff16628000001415919050565b815f526001600160a01b03811660045260245ffd5b5f6280000062ffffff8316036121a257505f919050565b6116018262ffffff16611a4e565b82336001600160a01b0382161461084257612000841615610842576116513384846040516024016121e393929190614a30565b60408051601f198184030181529190526020810180516001600160e01b0316636e4c1aa760e11b1790526001600160a01b038616906128af565b82545f906001600160a01b03161561223f5761223f637983c05160e01b6115dd565b61224883612fe9565b9050612267826122616001600160a01b03861684613279565b90612949565b9093555090919050565b83336001600160a01b038216146116515761100085161561165157611b89338585856040516024016122a69493929190614a66565b60408051601f198184030181529190526020810180516001600160e01b0316636fe7e6eb60e01b1790526001600160a01b038716906128af565b6122e98261184e565b815462ffffff60b81b191662ffffff60b81b60b883901b1617611a89565b5f5f80516020614c818339815191525d565b5f6001600160a01b03821661232f575047919050565b6040516370a0823160e01b81523060048201526001600160a01b038316906370a0823190602401602060405180830381865afa158015612371573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106cd9190614aa7565b6001600160a01b0382165f80516020614c818339815191525d807f1e0745a7db1623981f0b2a5d4232364c00787266eb75ad546f190e6cebe9bd955d5050565b60208301515f806001600160a01b03881633036123f4575f91506124e6565b60808816156124e6575f61244a89338a8a8a8a60405160240161241b959493929190614abe565b60408051601f198184030181529190526020810180516001600160e01b03166315d7892d60e21b1790526128af565b9050805160601461246557612465631e048e1d60e01b6115dd565b604088015162ffffff16628000000361248057606081015191505b60088916156124e457604081015192505f61249b8460801d90565b905080600f0b5f146124e2575f85126124b8600f83900b87614b17565b9550806124c7575f86126124cb565b5f86135b156124e0576124e0637d05b8eb60e11b6115dd565b505b505b505b955095509592505050565b5f808080806125008988613294565b93509350935093505f83111561252e576001600160a01b0386165f9081526001602052604090208054840190555b33887f40e9cecb9f5f1f1c5b9c97dec2917b7ee92e57ba5563708daca94dd84ad7112f61255b8760801d90565b61256588600f0b90565b85516040808801516020808a01518351600f97880b81529590960b908501526001600160a01b03909216908301526001600160801b0316606082015260029190910b608082015262ffffff861660a082015260c00160405180910390a35091979650505050505050565b5f806001600160a01b03891633036125eb57508490505f612071565b5f6125f68460801d90565b90505f61260385600f0b90565b905060408b161561267d57612670611e67338c8c8c8c8c60405160240161262f96959493929190614b36565b60408051601f198184030181529190526020810180516001600160e01b031663b47b2fb160e01b17905260048e1615156001600160a01b038f169190612f87565b61267a9082614b96565b90505b5f81600f0b5f141580612693575082600f0b5f14155b156126de57895160208b01515f13901515146126be576001600160801b038316608083901b176126cf565b6001600160801b038216608084901b175b90506126db8982612fc8565b98505b979b979a509698505050505050505050565b336001600160a01b038416811480159061272f57506001600160a01b038085165f9081526003602090815260408083209385168352929052205460ff16155b156127a3576001600160a01b038085165f9081526005602090815260408083209385168352928152828220868352905220545f1981146127a15761277383826147e2565b6001600160a01b038087165f9081526005602090815260408083209387168352928152828220888352905220555b505b6108428484846138eb565b6001600160a01b038281165f90815290841660205260408120805c91906127d9600f85900b84614b17565b915081815d50935093915050565b5f80516020614ce18339815191525c600181039050805f80516020614ce18339815191525d50565b5f80516020614ce18339815191525c600181019050805f80516020614ce18339815191525d50565b6040516390bfb86560e01b8082526001600160a01b03851660048301526001600160e01b031984166024830152608060448301526020601f3d018190040260a0810160648401523d608484015290913d5f60a483013e60048260a4018201526001600160e01b031984168260c4018201528160e40181fd5b60605f805f8451602086015f885af19050806128df576128df846128d285614bc3565b63a9e35b2f60e01b612837565b6040519150601f19603f3d011682016040523d82523d5f602084013e60208251108061292d575060208301516001600160e01b031916612920836020015190565b6001600160e01b03191614155b1561294257612942631e048e1d60e01b6115dd565b5092915050565b60d01b62ffffff60d01b1662ffffff60d01b19919091161790565b8060020b8260020b126129835761298363c4433ed560e01b8383613954565b620d89e719600283900b12156129a4576129a463d5e2f7ab60e01b8361207d565b620d89e8600282900b13156112165761121663035aeeff60e31b8261207d565b600283900b5f908152600485016020526040812080548291906001600160801b03811690600160801b9004600f0b6129fc8288612f60565b6001600160801b03808216159084168015919091141596509094505f03612a4657885460a01c60020b60020b8860020b13612a46576001808a0154908401556002808a0154908401555b5f86612a5b57612a568883614b96565b612a65565b612a658883614c01565b90508060801b6001600160801b0386161784555050505094509492505050565b600291820b910b80820715612ab25760405163d4d8f3e681528260208201528160408201526044601c8201fd5b80820591508160081d5f528260205260405f20600160ff84161b815418815550505050565b600282810b5f81815260048601602052604080822085850b83529082208754929485949293919260a09290921c900b90811215612b2d578160010154836001015403945081600201548360020154039350612b80565b8560020b8160020b12612b59578260010154826001015403945082600201548260020154039350612b80565b81600101548360010154896001015403039450816002015483600201548960020154030393505b505050935093915050565b83545f9081906001600160801b0316600f86900b8203612bca57806001600160801b03165f03612bc557612bc5632bbfae4960e21b6115dd565b612bf0565b612bd48187612f60565b87546001600160801b0319166001600160801b03919091161787555b612c0e87600101548603826001600160801b0316600160801b613971565b9250612c2e87600201548503826001600160801b0316600160801b613971565b6001880195909555505060029094015591929050565b60020b5f60ff82901d80830118620d89e8811115612c6d57612c6d6345c3193d60e11b8461207d565b7001fffcb933bd6fad37aa2d162d1a5940016001821602600160801b186002821615612ca9576ffff97272373d413259a46990580e213a0260801c5b6004821615612cc8576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615612ce7576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b6010821615612d06576fffcb9843d60f6159c9db58835c9266440260801c5b6020821615612d25576fff973b41fa98c081472e6896dfb254c00260801c5b6040821615612d44576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615612d63576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615612d83576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b610200821615612da3576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615612dc3576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615612de3576fe7159475a2c29b7443b29c7fa6e889d90260801c5b611000821615612e03576fd097f3bdfd2022b8845ad8f792aa58250260801c5b612000821615612e23576fa9f746462d870fdf8a65dc1f90e061e50260801c5b614000821615612e43576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615612e63576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615612e84576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b62020000821615612ea4576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615612ec3576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615612ee0576b048a170391f7dc42444e8fa20260801c5b5f841315612eec575f19045b63ffffffff0160201c9392505050565b5f8082600f0b12612f2357612f1c612f178585856001613a0d565b613ad0565b5f036115d5565b6115d5612f178585855f035f613a0d565b5f8082600f0b12612f4f57612f1c612f178585856001613ae9565b6115d5612f178585855f035f613ae9565b6001600160801b038216600f82900b01608081901c156106cd576393dafdf15f526004601cfd5b5f80612f9385856128af565b905082612fa3575f915050610773565b8051604014612fbc57612fbc631e048e1d60e01b6115dd565b60400151949350505050565b5f608082811d9084901d03600f83810b9085900b03611f4f611f4683611b91565b5f73fffd8963efd1fc6a506488495d951d51639616826401000276a21983016001600160a01b03161115613028576130286318521d4960e21b83612176565b640100000000600160c01b03602083901b16805f61304582613b35565b60ff1690506080811061306057607f810383901c915061306a565b80607f0383901b91505b908002607f81811c60ff83811c9190911c800280831c81831c1c800280841c81841c1c800280851c81851c1c800280861c81861c1c800280871c81871c1c800280881c81881c1c800280891c81891c1c8002808a1c818a1c1c8002808b1c818b1c1c8002808c1c818c1c1c8002808d1c818d1c1c8002808e1c9c81901c9c909c1c80029c8d901c9e9d607f198f0160401b60c09190911c678000000000000000161760c19b909b1c674000000000000000169a909a1760c29990991c672000000000000000169890981760c39790971c671000000000000000169690961760c49590951c670800000000000000169490941760c59390931c670400000000000000169290921760c69190911c670200000000000000161760c79190911c670100000000000000161760c89190911c6680000000000000161760c99190911c6640000000000000161760ca9190911c6620000000000000161760cb9190911c6610000000000000161760cc9190911c6608000000000000161760cd9190911c66040000000000001617693627a301d71055774c8581026f028f6481ab7f045a5af012a19d003aa9198101608090811d906fdb2df09e81959a81455e260799a0632f8301901d600281810b9083900b1461326a57886001600160a01b031661324f82612c44565b6001600160a01b03161115613264578161326c565b8061326c565b815b9998505050505050505050565b60a01b62ffffff60a01b1662ffffff60a01b19919091161790565b604080516060810182525f8082526020820181905291810182905281908190855460408601515f816132ce57610fff60c484901c166132d8565b610fff60b884901c165b88516001600160a01b038516865261ffff9190911691505f60a085901c60020b60020b602087015260038b01546001600160801b0316604087015260808a01515f9062400000166133325760d086901c62ffffff16613344565b6133448b6080015162ffffff16613bbf565b9050831561336a57620f4240610fff851662ffffff83168181029290920491010361336c565b805b975050620f42408762ffffff16106133975789515f121561339757613397634b10312360e11b6115dd565b89515f036133af575f809850985050505050506138e2565b831561342c5760608a01516001600160a01b038681169116106133ee576133ee6001600160a01b0386165b60608c0151637c9c6e8f60e01b919061208c565b6401000276a36001600160a01b03168a606001516001600160a01b0316116134275760608a015161342790639e4d7cc760e01b90612176565b61349d565b60608a01516001600160a01b03868116911611613455576134556001600160a01b0386166133da565b73fffd8963efd1fc6a506488495d951d5263988d266001600160a01b03168a606001516001600160a01b03161061349d5760608a015161349d90639e4d7cc760e01b90612176565b60408051610100810182525f80825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810191909152846134ec578b600201546134f2565b8b600101545b60e08201525b82158061351d57508a606001516001600160a01b0316875f01516001600160a01b0316145b6137fd5786516001600160a01b03168152602080880151908c01516135479160058f019188613bce565b1515604083015260020b60208201819052620d89e7191261356d57620d89e71960208201525b620d89e860020b816020015160020b1261358b57620d89e860208201525b6135988160200151612c44565b6001600160a01b0390811660608381018290528951908e01516135d5939192911680821891811160018a161891909102188960400151868c613cbb565b60c085015260a084015260808301526001600160a01b031687528a515f1215613631576136058160a00151613ad0565b830392506136208160c001518260800151612f1791906147f5565b61362a9083614c2e565b9150613662565b6136448160c00151826080015101613ad0565b830192506136558160a00151613ad0565b61365f9083614b17565b91505b83156136b1575f848962ffffff161461369957620f4240858360c00151846080015101028161369357613693614c4d565b0461369f565b8160c001515b60c08301805182900390529990990198505b60408701516001600160801b0316156136f1576136e58160c00151600160801b89604001516001600160801b031691020490565b60e08201805190910190525b80606001516001600160a01b0316875f01516001600160a01b0316036137d7578060400151156137b2575f8086613731578d600101548360e0015161373c565b8260e001518e600201545b915091505f6137878f85602001518585600292830b5f90815260049094016020526040909320600181018054909203909155908101805490920390915554600160801b9004600f0b90565b90508715613792575f035b6137a08a6040015182612f60565b6001600160801b031660408b01525050505b846137c15780602001516137ca565b60018160200151035b60020b60208801526134f8565b805187516001600160a01b039081169116146137f85786516137ca90612fe9565b6134f8565b8651602088015161382d9190613814908990613279565b6001600160a01b0319166001600160a01b039091161790565b8c55604087015160038d01546001600160801b0390811691161461387257604087015160038d0180546001600160801b0319166001600160801b039092169190911790555b846138865760e081015160028d0155613891565b60e081015160018d01555b8a515f13851515146138be576138b76138a983611b91565b611d92858e5f015103611b91565b99506138db565b6138d86138cf848d5f015103611b91565b611d9284611b91565b99505b5050505050505b92959194509250565b6001600160a01b0383165f9081526004602090815260408083208584529091528120805483929061391d9084906147e2565b9091555050604080513381526020810183905283915f916001600160a01b038716915f80516020614ca183398151915291016117ff565b6040518381528260020b60048201528160020b6024820152604481fd5b5f838302815f1985870982811083820303915050808411613990575f80fd5b805f036139a257508290049050610773565b5f848688095f868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b5f836001600160a01b0316856001600160a01b03161115613a2c579293925b6001600160a01b038516613a465762bfc9215f526004601cfd5b600160601b600160e01b03606084901b166001600160a01b038686031683613a9957866001600160a01b0316613a868383896001600160a01b0316613971565b81613a9357613a93614c4d565b04613ac5565b613ac5613ab08383896001600160a01b0316613e1e565b886001600160a01b0316808204910615150190565b979650505050505050565b805f811215610a3057610a306393dafdf160e01b6115dd565b5f6001600160a01b038481169086160360ff81901d90810118600160601b6001600160801b038516613b1c818484613971565b9350845f83858409111684019350505050949350505050565b5f808211613b41575f80fd5b507f0706060506020500060203020504000106050205030304010505030400000000601f6f8421084210842108cc6318c6db6d54be6001600160801b03841160071b84811c6001600160401b031060061b1784811c63ffffffff1060051b1784811c61ffff1060041b1784811c60ff1060031b1793841c1c161a1790565b62bfffff8116610a3081611a4e565b5f80600284810b9086900b8181078313919005038315613c4d57600281900b60081d600181900b5f908152602089905260409020545f1960ff808516908190039190911c918216801515955090919085613c2f57888360ff16860302613c42565b88613c3982613b35565b840360ff168603025b965050505050613cb1565b6001908101600281900b60081d80830b5f90815260208a905260409020545f1960ff841694851b011990811680151595509293919285613c9757888360ff0360ff16860102613caa565b8883613ca283613e4e565b0360ff168601025b9650505050505b5094509492505050565b5f80808062ffffff85166001600160a01b03808a16908b1610158288128015613d91575f613cf48a5f0385620f424003620f4240613971565b905082613d0d57613d088d8d8d6001613ae9565b613d1a565b613d1a8c8e8d6001613a0d565b9650868110613d4e578b9750620f42408414613d4557613d40878586620f424003613e1e565b613d47565b865b9450613d67565b809650613d5d8d8c8386613ee8565b9750868a5f030394505b82613d7d57613d788d898d5f613a0d565b613d89565b613d89888e8d5f613ae9565b955050613e0f565b81613da757613da28c8c8c5f613a0d565b613db3565b613db38b8d8c5f613ae9565b9450848910613dc4578a9650613dd6565b889450613dd38c8b8785613f36565b96505b81613ded57613de88c888c6001613ae9565b613dfa565b613dfa878d8c6001613a0d565b9550613e0c868485620f424003613e1e565b93505b50505095509550955095915050565b5f613e2a848484613971565b90508180613e3a57613e3a614c4d565b838509156107735760010180610773575f80fd5b5f808211613e5a575f80fd5b507e1f0d1e100c1d070f090b19131c1706010e11080a1a141802121b15031604055f8290039091166101e07f804040554300526644320000502061067405302602000010750620017611707760fc7fb6db6db6ddddddddd34d34d349249249210842108c6318c639ce739cffffffff840260f81c161b60f71c1690811c63d76453e004601f169190911a1790565b5f6001600160801b038416156001600160a01b038616151715613f1257634f2461b85f526004601cfd5b81613f2957613f248585856001613f79565b611f4f565b611f4f8585856001614064565b5f6001600160801b038416156001600160a01b038616151715613f6057634f2461b85f526004601cfd5b81613f7157613f248585855f614064565b611f4f8585855f5b5f8115613fe9575f6001600160a01b03841115613fad57613fa884600160601b876001600160801b0316613971565b613fc4565b613fc46001600160801b038616606086901b614c61565b9050613fe1613fdc826001600160a01b0389166147f5565b614146565b9150506115d5565b5f6001600160a01b038411156140165761401184600160601b876001600160801b0316613e1e565b614033565b614033606085901b6001600160801b038716808204910615150190565b9050806001600160a01b0387161161405257634323a5555f526004601cfd5b6001600160a01b0386160390506115d5565b5f825f036140735750836115d5565b600160601b600160e01b03606085901b168215614105576001600160a01b038616848102908582816140a7576140a7614c4d565b04036140d7578181018281106140d5576140cb83896001600160a01b031683613e1e565b93505050506115d5565b505b50613fe181856140f06001600160a01b038a1683614c61565b6140fa91906147f5565b808204910615150190565b6001600160a01b03861684810290858204148183111661412c5763f5c787f15f526004601cfd5b8082036140cb613fdc846001600160a01b038b1684613e1e565b806001600160a01b0381168114610a3057610a306393dafdf160e01b6115dd565b6001600160a01b03811681146111f4575f80fd5b5f806040838503121561418c575f80fd5b823561419781614167565b946020939093013593505050565b5f602082840312156141b5575f80fd5b81356001600160e01b031981168114610773575f80fd5b5f805f606084860312156141de575f80fd5b83356141e981614167565b95602085013595506040909401359392505050565b5f805f60608486031215614210575f80fd5b833561421b81614167565b9250602084013561422b81614167565b929592945050506040919091013590565b5f6020828403121561424c575f80fd5b5035919050565b634e487b7160e01b5f52604160045260245ffd5b604051608081016001600160401b038111828210171561428957614289614253565b60405290565b604051601f8201601f191681016001600160401b03811182821017156142b7576142b7614253565b604052919050565b803562ffffff81168114610a30575f80fd5b8035600281900b8114610a30575f80fd5b5f60a082840312156142f2575f80fd5b60405160a081016001600160401b038111828210171561431457614314614253565b604052905080823561432581614167565b8152602083013561433581614167565b6020820152614346604084016142bf565b6040820152614357606084016142d1565b6060820152608083013561436a81614167565b6080919091015292915050565b5f8083601f840112614387575f80fd5b5081356001600160401b0381111561439d575f80fd5b6020830191508360208285010111156143b4575f80fd5b9250929050565b5f805f805f61010086880312156143d0575f80fd5b6143da87876142e2565b945060a0860135935060c0860135925060e08601356001600160401b03811115614402575f80fd5b61440e88828901614377565b969995985093965092949392505050565b5f6020828403121561442f575f80fd5b813561077381614167565b5f806040838503121561444b575f80fd5b50508035926020909101359150565b602080825282518282018190525f918401906040840190835b81811015614491578351835260209384019390920191600101614473565b509095945050505050565b5f80602083850312156144ad575f80fd5b82356001600160401b038111156144c2575f80fd5b6144ce85828601614377565b90969095509350505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b5f8060c08385031215614520575f80fd5b61452a84846142e2565b915061453860a084016142bf565b90509250929050565b80358015158114610a30575f80fd5b5f8060408385031215614561575f80fd5b823561456c81614167565b915061453860208401614541565b5f805f8084860361014081121561458f575f80fd5b61459987876142e2565b94506080609f19820112156145ac575f80fd5b506145b5614267565b6145c160a087016142d1565b81526145cf60c087016142d1565b602082015260e08601356040820152610100860135606082015292506101208501356001600160401b03811115614604575f80fd5b61461087828801614377565b95989497509550505050565b5f8060c0838503121561462d575f80fd5b61463784846142e2565b915060a083013561464781614167565b809150509250929050565b5f8060208385031215614663575f80fd5b82356001600160401b03811115614678575f80fd5b8301601f81018513614688575f80fd5b80356001600160401b0381111561469d575f80fd5b8560208260051b84010111156146b1575f80fd5b6020919091019590945092505050565b5f80604083850312156146d2575f80fd5b82356146dd81614167565b9150602083013561464781614167565b5f805f80848603610120811215614702575f80fd5b61470c87876142e2565b94506060609f198201121561471f575f80fd5b50604051606081016001600160401b038111828210171561474257614742614253565b60405261475160a08701614541565b815260c0860135602082015260e086013561476b81614167565b604082015292506101008501356001600160401b03811115614604575f80fd5b5f805f806080858703121561479e575f80fd5b84356147a981614167565b935060208501356147b981614167565b93969395505050506040820135916060013590565b634e487b7160e01b5f52601160045260245ffd5b818103818111156106cd576106cd6147ce565b808201808211156106cd576106cd6147ce565b81835281816020850137505f828201602090810191909152601f909101601f19169091010190565b602081525f6115d5602083018486614808565b5f60208284031215614853575f80fd5b81516001600160401b03811115614868575f80fd5b8201601f81018413614878575f80fd5b80516001600160401b0381111561489157614891614253565b6148a4601f8201601f191660200161428f565b8181528560208385010111156148b8575f80fd5b8160208401602083015e5f91810160200191909152949350505050565b80516001600160a01b03908116835260208083015182169084015260408083015162ffffff169084015260608083015160020b9084015260809182015116910152565b6001600160a01b038716815261493160208201876148d5565b8460c08201528360e08201526101206101008201525f61495661012083018486614808565b98975050505050505050565b6001600160a01b038616815261497b60208201866148d5565b8351600290810b60c08301526020850151900b60e0820152604084015161010082015260608401516101208201526101606101408201525f613ac561016083018486614808565b6001600160a01b03881681526149db60208201886148d5565b8551600290810b60c08301526020870151900b60e08201526040860151610100820152606086015161012082015284610140820152836101608201526101a06101808201525f61326c6101a083018486614808565b6001600160a01b038416815260e08101614a4d60208301856148d5565b6001600160a01b039290921660c0919091015292915050565b6001600160a01b03851681526101008101614a8460208301866148d5565b6001600160a01b039390931660c082015260029190910b60e09091015292915050565b5f60208284031215614ab7575f80fd5b5051919050565b6001600160a01b0386168152614ad760208201866148d5565b8351151560c0820152602084015160e082015260408401516001600160a01b03166101008201526101406101208201525f613ac561014083018486614808565b8082018281125f831280158216821582161715610fa957610fa96147ce565b6001600160a01b0387168152614b4f60208201876148d5565b8451151560c0820152602085015160e082015260408501516001600160a01b0316610100820152836101208201526101606101408201525f61495661016083018486614808565b600f81810b9083900b0160016001607f1b03811360016001607f1b0319821217156106cd576106cd6147ce565b805160208201516001600160e01b0319811691906004821015614bfa576001600160e01b0319600483900360031b81901b82161692505b5050919050565b600f82810b9082900b0360016001607f1b0319811260016001607f1b03821317156106cd576106cd6147ce565b8181035f831280158383131683831282161715612942576129426147ce565b634e487b7160e01b5f52601260045260245ffd5b5f82614c7b57634e487b7160e01b5f52601260045260245ffd5b50049056fe27e098c505d44ec3574004bca052aabf76bd35004c182099d8c575fb238593b91b3d7edb2e9c0b0e7c525b20aaaef0f5940d2ed71663c7d39266ecafac728859c090fc4683624cfc3884e9d8de5eca132f2d0ec062aff75d43c0465d5ceeab237d4b3164c6e45b97e7d87b7125a44c5828d005af88f9d751cfd78729c5d99a0ba26469706673582212201d5584e96d7d6a1e174a1659c31ddf53c1e43223e0b708d83398aa49155fa4e664736f6c634300081a0033",
    "sourceMap": "4714:12841:52:-:0;;;5431:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1045:5:46;:14;;-1:-1:-1;;;;;;1045:14:46;-1:-1:-1;;;;;1045:14:46;;;;;;;1075:40;;1045:14;;;;;1075:40;;1045:5;;1075:40;-1:-1:-1;;719:4:51;700:24;;-1:-1:-1;4714:12841:52;;14:290:132;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:132;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:132:o;:::-;4714:12841:52;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106101e5575f3560e01c80635a6bcfda11610108578063a58411941161009d578063f135baaa1161006d578063f135baaa14610602578063f2fde38b14610621578063f3cd914c14610640578063f5298aca1461065f578063fe99049a1461067e575f80fd5b8063a58411941461056c578063b6363cf21461058b578063dbd035ff146105c4578063f02de3b2146105e3575f80fd5b80638161b874116100d85780638161b874146104cd5780638da5cb5b146104ec57806397e8cd4e146105225780639bf6645f1461054d575f80fd5b80635a6bcfda146104295780636276cbbe1461045d5780637e87ce7d1461048f57806380f0b44c146104ae575f80fd5b80632d7713891161017e57806348c894911161014e57806348c894911461038357806352759651146103af578063558a7297146103ce578063598af9e7146103ed575f80fd5b80632d7713891461030657806335fd631a146103255780633dd45adb14610351578063426a849314610364575f80fd5b806311da60b4116101b957806311da60b4146102a1578063156e29f6146102a95780631e2eaeaf146102c8578063234266d7146102e7575f80fd5b8062fdd58e146101e957806301ffc9a714610232578063095bcdb6146102615780630b0d9c0914610280575b5f80fd5b3480156101f4575f80fd5b5061021f61020336600461417b565b600460209081525f928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b34801561023d575f80fd5b5061025161024c3660046141a5565b61069d565b6040519015158152602001610229565b34801561026c575f80fd5b5061025161027b3660046141cc565b6106d3565b34801561028b575f80fd5b5061029f61029a3660046141fe565b61077a565b005b61021f6107cb565b3480156102b4575f80fd5b5061029f6102c33660046141cc565b6107fd565b3480156102d3575f80fd5b5061021f6102e236600461423c565b610848565b3480156102f2575f80fd5b5061021f6103013660046143bb565b610852565b348015610311575f80fd5b5061029f61032036600461441f565b610930565b348015610330575f80fd5b5061034461033f36600461443a565b6109c6565b604051610229919061445a565b61021f61035f36600461441f565b610a03565b34801561036f575f80fd5b5061025161037e3660046141cc565b610a35565b34801561038e575f80fd5b506103a261039d36600461449c565b610a99565b60405161022991906144da565b3480156103ba575f80fd5b5061029f6103c936600461450f565b610b5c565b3480156103d9575f80fd5b506102516103e8366004614550565b610bcb565b3480156103f8575f80fd5b5061021f6104073660046141fe565b600560209081525f938452604080852082529284528284209052825290205481565b348015610434575f80fd5b5061044861044336600461457a565b610c3a565b60408051928352602083019190915201610229565b348015610468575f80fd5b5061047c61047736600461461c565b610dd9565b60405160029190910b8152602001610229565b34801561049a575f80fd5b5061029f6104a936600461450f565b610fb1565b3480156104b9575f80fd5b5061029f6104c836600461417b565b611063565b3480156104d8575f80fd5b5061021f6104e73660046141fe565b6110d0565b3480156104f7575f80fd5b505f5461050a906001600160a01b031681565b6040516001600160a01b039091168152602001610229565b34801561052d575f80fd5b5061021f61053c36600461441f565b60016020525f908152604090205481565b348015610558575f80fd5b50610344610567366004614652565b6111a5565b348015610577575f80fd5b5061029f61058636600461441f565b6111de565b348015610596575f80fd5b506102516105a53660046146c1565b600360209081525f928352604080842090915290825290205460ff1681565b3480156105cf575f80fd5b506103446105de366004614652565b61121a565b3480156105ee575f80fd5b5060025461050a906001600160a01b031681565b34801561060d575f80fd5b5061021f61061c36600461423c565b611251565b34801561062c575f80fd5b5061029f61063b36600461441f565b61125b565b34801561064b575f80fd5b5061021f61065a3660046146ed565b6112ed565b34801561066a575f80fd5b5061029f6106793660046141cc565b611433565b348015610689575f80fd5b5061025161069836600461478b565b61147e565b5f6301ffc9a760e01b6001600160e01b0319831614806106cd5750630f632fb360e01b6001600160e01b03198316145b92915050565b335f9081526004602090815260408083208584529091528120805483919083906106fe9084906147e2565b90915550506001600160a01b0384165f908152600460209081526040808320868452909152812080548492906107359084906147f5565b909155505060408051338082526020820185905285926001600160a01b038816925f80516020614ca183398151915291015b60405180910390a45060015b9392505050565b5f80516020614cc18339815191525c61079d5761079d6354e3ca0d60e01b6115dd565b6107b2836107aa836115e5565b5f0333611605565b6107c66001600160a01b0384168383611658565b505050565b5f5f80516020614cc18339815191525c6107ef576107ef6354e3ca0d60e01b6115dd565b6107f8336116f7565b905090565b5f80516020614cc18339815191525c610820576108206354e3ca0d60e01b6115dd565b8161082e816107aa846115e5565b610842846001600160a01b0383168461179a565b50505050565b5f81545f5260205ff35b5f5f80516020614cc18339815191525c610876576108766354e3ca0d60e01b6115dd565b61087e61180c565b60a086205f8181526006602052604090206108988161184e565b60808801516108b4906001600160a01b0316898989898961186f565b6108bf8188886118ec565b92506108cc88843361198f565b6040805188815260208101889052339184917f29ef05caaff9404b7cb6d1c0e9bbae9eaa7ab2541feba1a9c4248594c08156cb910160405180910390a36080880151610925906001600160a01b031689898989896119b7565b505095945050505050565b5f546001600160a01b0316331461097d5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064015b60405180910390fd5b600280546001600160a01b0319166001600160a01b0383169081179091556040517fb4bd8ef53df690b9943d3318996006dbb82a25f54719d8c8035b516a2a5b8acc905f90a250565b6060604051808360051b6020835284602084015260408301925080830190505b855483526020830192506001860195508083106109e65781810382f35b5f5f80516020614cc18339815191525c610a2757610a276354e3ca0d60e01b6115dd565b6106cd826116f7565b919050565b335f8181526005602090815260408083206001600160a01b03881680855290835281842087855290925280832085905551919285927fb3fd5071835887567a0671151121894ddccc2842f1d10bedad13e0d17cace9a7906107679087815260200190565b60605f80516020614cc18339815191525c15610abf57610abf6328486b6360e11b6115dd565b610ac7611a29565b6040516348eeb9a360e11b815233906391dd734690610aec9086908690600401614830565b5f604051808303815f875af1158015610b07573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052610b2e9190810190614843565b90505f80516020614ce18339815191525c15610b5457610b54635212cba160e01b6115dd565b6106cd611a3c565b604082015162ffffff1662800000141580610b8d575081608001516001600160a01b0316336001600160a01b031614155b15610ba257610ba26330d2164160e01b6115dd565b610bb08162ffffff16611a4e565b60a082205f8181526006602052604090206107c69083611a74565b335f8181526003602090815260408083206001600160a01b038716808552908352818420805460ff191687151590811790915591519182529293917fceb576d9f15e4e200fdb5096d64d5dfd667e16def20c1eefd14256d8e3faa267910160405180910390a350600192915050565b5f805f80516020614cc18339815191525c610c5f57610c5f6354e3ca0d60e01b6115dd565b610c6761180c565b60a086205f818152600660205260409020610c818161184e565b6080880151610c9c906001600160a01b031689898989611a8f565b5f610d036040518060c00160405280336001600160a01b031681526020018a5f015160020b81526020018a6020015160020b8152602001610ce08b60400151611b91565b600f0b81526060808d015160020b60208301528b01516040909101528390611bad565b94509050610d118185611f25565b94505050336001600160a01b0316817ff208f4912782fd25c7f114ca3723a2d5dd6f3bcc3ac8db5af63baa85f711d5ec885f015189602001518a604001518b60600151604051610d829493929190600294850b81529290930b60208301526040820152606081019190915260800190565b60405180910390a360808701515f90610da9906001600160a01b0316898987878b8b611f58565b90945090508015610dc357610dc388828a6080015161198f565b610dce88853361198f565b505094509492505050565b5f610de261180c565b6060830151617fff60029190910b1315610e0d576060830151610e0d906316e0049f60e31b9061207d565b600160020b836060015160020b1215610e37576060830151610e3790631d3d20b160e31b9061207d565b825160208401516001600160a01b03908116911610610e695782516020840151610e69916306e6c98360e41b9161208c565b610e8d836040015184608001516001600160a01b03166120b590919063ffffffff16565b610ea8576080830151610ea890630732d7b560e51b90612176565b5f610ebb846040015162ffffff1661218b565b6080850151909150610ed7906001600160a01b031685856121b0565b60a084205f818152600660205260409020610ef390858461221d565b925084602001516001600160a01b0316855f01516001600160a01b0316827fdd466e674ea557f56295e2d0218a125ea4b4f0f6f3307b95f85e6110838d6438886040015189606001518a608001518a8a604051610f8795949392919062ffffff959095168552600293840b60208601526001600160a01b03928316604086015291166060840152900b608082015260a00190565b60405180910390a46080850151610fa9906001600160a01b0316868686612271565b505092915050565b6002546001600160a01b03163314610fd357610fd36348f5c3ed60e01b6115dd565b6103e9610fff821610623e900062fff000831610166110025761100263a7abe2f760e01b62ffffff8316612176565b60a082206110248261101e835f90815260066020526040902090565b906122e0565b60405162ffffff8316815281907fe9c42593e71f84403b84352cd168d693e2c9fcd1fdbcc3feb21d92b43e6696f99060200160405180910390a2505050565b5f80516020614cc18339815191525c611086576110866354e3ca0d60e01b6115dd565b335f9081526001600160a01b038316602052604081205c906110a7836115e5565b90508181600f0b146110c3576110c363bda73abf60e01b6115dd565b61084284825f0333611605565b6002545f906001600160a01b031633146110f4576110f46348f5c3ed60e01b6115dd565b6001600160a01b0383161515801561112557506001600160a01b035f80516020614c818339815191525c8116908416145b1561113a5761113a6318f3cb2960e31b6115dd565b8115611146578161115f565b6001600160a01b0383165f908152600160205260409020545b6001600160a01b0384165f9081526001602052604081208054929350839290919061118b9084906147e2565b9091555061077390506001600160a01b0384168583611658565b606060405180602082528360208301526040820191508360051b8201855b80355c8452602093840193018184106111c3575b5081810382f35b6001600160a01b0381166111f7576111f4612307565b50565b5f61120a826001600160a01b0316612319565b90506112168282612395565b5050565b606060405180602082528360208301526040820191508360051b8201855b803554845260209384019301818410156111d757611238565b5f815c5f5260205ff35b5f546001600160a01b031633146112a35760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610974565b5f80546001600160a01b0319166001600160a01b0383169081178255604051909133917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a350565b5f5f80516020614cc18339815191525c611311576113116354e3ca0d60e01b6115dd565b61131961180c565b83602001515f036113345761133463be8b850760e01b6115dd565b60a085205f81815260066020526040902061134e8161184e565b60808701515f908190819061136f906001600160a01b03168b8b8b8b6123d5565b8093508195508294505050506113de84866040518060a001604052808681526020018e6060015160020b81526020018d5f0151151581526020018d604001516001600160a01b031681526020018562ffffff168152508c5f01516113d7578d602001516124f1565b8d516124f1565b60808b01519096505f925061140291506001600160a01b03168a8a888b8b886125cf565b9095509050801561141c5761141c89828b6080015161198f565b61142789863361198f565b50505050949350505050565b5f80516020614cc18339815191525c611456576114566354e3ca0d60e01b6115dd565b8161146a81611464846115e5565b33611605565b610842846001600160a01b038316846126f0565b5f336001600160a01b038616148015906114bb57506001600160a01b0385165f90815260036020908152604080832033845290915290205460ff16155b1561152b576001600160a01b0385165f90815260056020908152604080832033845282528083208684529091529020545f198114611529576114fd83826147e2565b6001600160a01b0387165f90815260056020908152604080832033845282528083208884529091529020555b505b6001600160a01b0385165f9081526004602090815260408083208684529091528120805484929061155d9084906147e2565b90915550506001600160a01b0384165f908152600460209081526040808320868452909152812080548492906115949084906147f5565b9091555050604080513381526020810184905284916001600160a01b0380881692908916915f80516020614ca1833981519152910160405180910390a45060015b949350505050565b805f5260045ffd5b5f6001607f1b8210611601576116016393dafdf160e01b6115dd565b5090565b81600f0b5f0361161457505050565b5f8061162a6001600160a01b03861684866127ae565b91509150805f036116425761163d6127e7565b611651565b815f036116515761165161280f565b5050505050565b5f6001600160a01b03841661168d575f805f8085875af190508061168857611688835f633d2cec6f60e21b612837565b610842565b60405163a9059cbb60e01b81526001600160a01b038416600482015282602482015260205f6044835f895af13d15601f3d1160015f511416171691505f81525f60208201525f60408201525080610842576108428463a9059cbb60e01b633c9fd93960e21b612837565b5f5f80516020614c818339815191525c6001600160a01b03811661171d57349150611781565b341561173357611733635876424f60e11b6115dd565b7f1e0745a7db1623981f0b2a5d4232364c00787266eb75ad546f190e6cebe9bd955c5f6117686001600160a01b038416612319565b905061177482826147e2565b935061177e612307565b50505b6117948161178e846115e5565b85611605565b50919050565b6001600160a01b0383165f908152600460209081526040808320858452909152812080548392906117cc9084906147f5565b9091555050604080513381526020810183905283916001600160a01b038616915f915f80516020614ca183398151915291015b60405180910390a4505050565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461184c5761184c6306c4a1c760e11b6115dd565b565b80546001600160a01b03165f036111f4576111f463486aa30760e01b6115dd565b85336001600160a01b038216146118e35760208716156118e3576118e13387878787876040516024016118a796959493929190614918565b60408051601f198184030181529190526020810180516001600160e01b0316635b54587d60e11b1790526001600160a01b038916906128af565b505b50505050505050565b60038301545f906001600160801b03168082036119135761191363a74f97ab60e01b6115dd565b61194161191f856115e5565b5f0361192a856115e5565b5f0360809190911b6001600160801b039091161790565b91508315611965576001850180546001600160801b038316600160801b8702040190555b8215611987576002850180546001600160801b038316600160801b8602040190555b509392505050565b82516119a59061199f8460801d90565b83611605565b6107c6836020015161199f84600f0b90565b85336001600160a01b038216146118e35760108716156118e3576118e13387878787876040516024016119ef96959493929190614918565b60408051601f198184030181529190526020810180516001600160e01b031663e1b4af6960e01b1790526001600160a01b038916906128af565b60015f80516020614cc18339815191525d565b5f5f80516020614cc18339815191525d565b620f424062ffffff821611156111f4576111f4631400211360e01b62ffffff8316612176565b611a7d8261184e565b8154611a899082612949565b90915550565b84336001600160a01b03821614611b89575f8460400151138015611ab65750610800861615155b15611b1757611b113386868686604051602401611ad7959493929190614962565b60408051601f198184030181529190526020810180516001600160e01b031663259982e560e01b1790526001600160a01b038816906128af565b50611b89565b5f846040015113158015611b2e5750610200861615155b15611b89576118e33386868686604051602401611b4f959493929190614962565b60408051601f198184030181529190526020810180516001600160e01b031663021d0ee760e41b1790526001600160a01b038816906128af565b505050505050565b80600f81900b8114610a3057610a306393dafdf160e01b6115dd565b6060810151602082015160408301515f9283929091611bcc8282612964565b604080516080810182525f80825260208201819052918101829052606081019190915283600f0b5f14611d0f57611c058884865f6129c4565b6001600160801b0316602083015215158152611c2488838660016129c4565b6001600160801b03166060830152151560408201525f600f85900b12611cd45760808701515f9060020b620d89e71981810783139082900503620d89e891909105036001016001600160801b03049050806001600160801b031682602001516001600160801b03161115611ca357611ca363b8e3c38560e01b8561207d565b806001600160801b031682606001516001600160801b03161115611cd257611cd263b8e3c38560e01b8461207d565b505b805115611cf0576080870151611cf09060058a01908590612a85565b806040015115611d0f576080870151611d0f9060058a01908490612a85565b5f80611d1c8a8686612ad7565b8a5160a08c015160408051602681019290925260068083018a9052600383018b9052928252603a600c8301205f838301819052602080850182905293819052908152928f01909152812092945090925080611d79838a8787612b8b565b91509150611da5611d89836115e5565b611d92836115e5565b6001600160801b031660809190911b1790565b995050505050505f84600f0b1215611e0e57805115611de157600283810b5f90815260048a016020526040812081815560018101829055909101555b806040015115611e0e57600282810b5f90815260048a016020526040812081815560018101829055909101555b5082600f0b5f14611f1b5786545f80611e2a8360a01c60020b90565b6001600160a01b038416915091508460020b8260020b1215611e7957611e72611e6c611e67611e5888612c44565b611e6188612c44565b8a612efc565b611b91565b60801b90565b9750611f17565b8360020b8260020b1215611ef257611eb0611e9a611e6783611e6188612c44565b611d92611e67611ea989612c44565b858b612f34565b60038b0154909850611ecb906001600160801b031687612f60565b60038b0180546001600160801b0319166001600160801b0392909216919091179055611f17565b611f145f611d92611e67611f0589612c44565b611f0e89612c44565b8b612f34565b97505b5050505b5050509250929050565b5f608082811d9084901d01600f83810b9085900b01611f4f611f4683611b91565b611d9283611b91565b95945050505050565b5f806001600160a01b0389163303611f7457508490505f612071565b8591505f8760400151131561200357610400891615611ffe57611fef33898989898989604051602401611fad97969594939291906149c2565b60408051601f198184030181529190526020810180516001600160e01b03166327c18fbf60e21b17905260028b1615155b6001600160a01b038c169190612f87565b9050611ffb8282612fc8565b91505b612071565b610100891615612071576120623389898989898960405160240161202d97969594939291906149c2565b60408051601f198184030181529190526020810180516001600160e01b0316633615df3f60e11b17905260018b161515611fde565b905061206e8282612fc8565b91505b97509795505050505050565b815f528060020b60045260245ffd5b6040518381526001600160a01b03831660048201526001600160a01b0382166024820152604481fd5b5f608083161580156120c957506008831615155b156120d557505f6106cd565b604083161580156120e857506004831615155b156120f457505f6106cd565b610400831615801561210857506002831615155b1561211457505f6106cd565b610100831615801561212857506001831615155b1561213457505f6106cd565b6001600160a01b0383161561216557613fff831615158061216057506280000062ffffff831614610773565b610773565b5062ffffff16628000001415919050565b815f526001600160a01b03811660045260245ffd5b5f6280000062ffffff8316036121a257505f919050565b6116018262ffffff16611a4e565b82336001600160a01b0382161461084257612000841615610842576116513384846040516024016121e393929190614a30565b60408051601f198184030181529190526020810180516001600160e01b0316636e4c1aa760e11b1790526001600160a01b038616906128af565b82545f906001600160a01b03161561223f5761223f637983c05160e01b6115dd565b61224883612fe9565b9050612267826122616001600160a01b03861684613279565b90612949565b9093555090919050565b83336001600160a01b038216146116515761100085161561165157611b89338585856040516024016122a69493929190614a66565b60408051601f198184030181529190526020810180516001600160e01b0316636fe7e6eb60e01b1790526001600160a01b038716906128af565b6122e98261184e565b815462ffffff60b81b191662ffffff60b81b60b883901b1617611a89565b5f5f80516020614c818339815191525d565b5f6001600160a01b03821661232f575047919050565b6040516370a0823160e01b81523060048201526001600160a01b038316906370a0823190602401602060405180830381865afa158015612371573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106cd9190614aa7565b6001600160a01b0382165f80516020614c818339815191525d807f1e0745a7db1623981f0b2a5d4232364c00787266eb75ad546f190e6cebe9bd955d5050565b60208301515f806001600160a01b03881633036123f4575f91506124e6565b60808816156124e6575f61244a89338a8a8a8a60405160240161241b959493929190614abe565b60408051601f198184030181529190526020810180516001600160e01b03166315d7892d60e21b1790526128af565b9050805160601461246557612465631e048e1d60e01b6115dd565b604088015162ffffff16628000000361248057606081015191505b60088916156124e457604081015192505f61249b8460801d90565b905080600f0b5f146124e2575f85126124b8600f83900b87614b17565b9550806124c7575f86126124cb565b5f86135b156124e0576124e0637d05b8eb60e11b6115dd565b505b505b505b955095509592505050565b5f808080806125008988613294565b93509350935093505f83111561252e576001600160a01b0386165f9081526001602052604090208054840190555b33887f40e9cecb9f5f1f1c5b9c97dec2917b7ee92e57ba5563708daca94dd84ad7112f61255b8760801d90565b61256588600f0b90565b85516040808801516020808a01518351600f97880b81529590960b908501526001600160a01b03909216908301526001600160801b0316606082015260029190910b608082015262ffffff861660a082015260c00160405180910390a35091979650505050505050565b5f806001600160a01b03891633036125eb57508490505f612071565b5f6125f68460801d90565b90505f61260385600f0b90565b905060408b161561267d57612670611e67338c8c8c8c8c60405160240161262f96959493929190614b36565b60408051601f198184030181529190526020810180516001600160e01b031663b47b2fb160e01b17905260048e1615156001600160a01b038f169190612f87565b61267a9082614b96565b90505b5f81600f0b5f141580612693575082600f0b5f14155b156126de57895160208b01515f13901515146126be576001600160801b038316608083901b176126cf565b6001600160801b038216608084901b175b90506126db8982612fc8565b98505b979b979a509698505050505050505050565b336001600160a01b038416811480159061272f57506001600160a01b038085165f9081526003602090815260408083209385168352929052205460ff16155b156127a3576001600160a01b038085165f9081526005602090815260408083209385168352928152828220868352905220545f1981146127a15761277383826147e2565b6001600160a01b038087165f9081526005602090815260408083209387168352928152828220888352905220555b505b6108428484846138eb565b6001600160a01b038281165f90815290841660205260408120805c91906127d9600f85900b84614b17565b915081815d50935093915050565b5f80516020614ce18339815191525c600181039050805f80516020614ce18339815191525d50565b5f80516020614ce18339815191525c600181019050805f80516020614ce18339815191525d50565b6040516390bfb86560e01b8082526001600160a01b03851660048301526001600160e01b031984166024830152608060448301526020601f3d018190040260a0810160648401523d608484015290913d5f60a483013e60048260a4018201526001600160e01b031984168260c4018201528160e40181fd5b60605f805f8451602086015f885af19050806128df576128df846128d285614bc3565b63a9e35b2f60e01b612837565b6040519150601f19603f3d011682016040523d82523d5f602084013e60208251108061292d575060208301516001600160e01b031916612920836020015190565b6001600160e01b03191614155b1561294257612942631e048e1d60e01b6115dd565b5092915050565b60d01b62ffffff60d01b1662ffffff60d01b19919091161790565b8060020b8260020b126129835761298363c4433ed560e01b8383613954565b620d89e719600283900b12156129a4576129a463d5e2f7ab60e01b8361207d565b620d89e8600282900b13156112165761121663035aeeff60e31b8261207d565b600283900b5f908152600485016020526040812080548291906001600160801b03811690600160801b9004600f0b6129fc8288612f60565b6001600160801b03808216159084168015919091141596509094505f03612a4657885460a01c60020b60020b8860020b13612a46576001808a0154908401556002808a0154908401555b5f86612a5b57612a568883614b96565b612a65565b612a658883614c01565b90508060801b6001600160801b0386161784555050505094509492505050565b600291820b910b80820715612ab25760405163d4d8f3e681528260208201528160408201526044601c8201fd5b80820591508160081d5f528260205260405f20600160ff84161b815418815550505050565b600282810b5f81815260048601602052604080822085850b83529082208754929485949293919260a09290921c900b90811215612b2d578160010154836001015403945081600201548360020154039350612b80565b8560020b8160020b12612b59578260010154826001015403945082600201548260020154039350612b80565b81600101548360010154896001015403039450816002015483600201548960020154030393505b505050935093915050565b83545f9081906001600160801b0316600f86900b8203612bca57806001600160801b03165f03612bc557612bc5632bbfae4960e21b6115dd565b612bf0565b612bd48187612f60565b87546001600160801b0319166001600160801b03919091161787555b612c0e87600101548603826001600160801b0316600160801b613971565b9250612c2e87600201548503826001600160801b0316600160801b613971565b6001880195909555505060029094015591929050565b60020b5f60ff82901d80830118620d89e8811115612c6d57612c6d6345c3193d60e11b8461207d565b7001fffcb933bd6fad37aa2d162d1a5940016001821602600160801b186002821615612ca9576ffff97272373d413259a46990580e213a0260801c5b6004821615612cc8576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615612ce7576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b6010821615612d06576fffcb9843d60f6159c9db58835c9266440260801c5b6020821615612d25576fff973b41fa98c081472e6896dfb254c00260801c5b6040821615612d44576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615612d63576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615612d83576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b610200821615612da3576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615612dc3576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615612de3576fe7159475a2c29b7443b29c7fa6e889d90260801c5b611000821615612e03576fd097f3bdfd2022b8845ad8f792aa58250260801c5b612000821615612e23576fa9f746462d870fdf8a65dc1f90e061e50260801c5b614000821615612e43576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615612e63576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615612e84576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b62020000821615612ea4576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615612ec3576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615612ee0576b048a170391f7dc42444e8fa20260801c5b5f841315612eec575f19045b63ffffffff0160201c9392505050565b5f8082600f0b12612f2357612f1c612f178585856001613a0d565b613ad0565b5f036115d5565b6115d5612f178585855f035f613a0d565b5f8082600f0b12612f4f57612f1c612f178585856001613ae9565b6115d5612f178585855f035f613ae9565b6001600160801b038216600f82900b01608081901c156106cd576393dafdf15f526004601cfd5b5f80612f9385856128af565b905082612fa3575f915050610773565b8051604014612fbc57612fbc631e048e1d60e01b6115dd565b60400151949350505050565b5f608082811d9084901d03600f83810b9085900b03611f4f611f4683611b91565b5f73fffd8963efd1fc6a506488495d951d51639616826401000276a21983016001600160a01b03161115613028576130286318521d4960e21b83612176565b640100000000600160c01b03602083901b16805f61304582613b35565b60ff1690506080811061306057607f810383901c915061306a565b80607f0383901b91505b908002607f81811c60ff83811c9190911c800280831c81831c1c800280841c81841c1c800280851c81851c1c800280861c81861c1c800280871c81871c1c800280881c81881c1c800280891c81891c1c8002808a1c818a1c1c8002808b1c818b1c1c8002808c1c818c1c1c8002808d1c818d1c1c8002808e1c9c81901c9c909c1c80029c8d901c9e9d607f198f0160401b60c09190911c678000000000000000161760c19b909b1c674000000000000000169a909a1760c29990991c672000000000000000169890981760c39790971c671000000000000000169690961760c49590951c670800000000000000169490941760c59390931c670400000000000000169290921760c69190911c670200000000000000161760c79190911c670100000000000000161760c89190911c6680000000000000161760c99190911c6640000000000000161760ca9190911c6620000000000000161760cb9190911c6610000000000000161760cc9190911c6608000000000000161760cd9190911c66040000000000001617693627a301d71055774c8581026f028f6481ab7f045a5af012a19d003aa9198101608090811d906fdb2df09e81959a81455e260799a0632f8301901d600281810b9083900b1461326a57886001600160a01b031661324f82612c44565b6001600160a01b03161115613264578161326c565b8061326c565b815b9998505050505050505050565b60a01b62ffffff60a01b1662ffffff60a01b19919091161790565b604080516060810182525f8082526020820181905291810182905281908190855460408601515f816132ce57610fff60c484901c166132d8565b610fff60b884901c165b88516001600160a01b038516865261ffff9190911691505f60a085901c60020b60020b602087015260038b01546001600160801b0316604087015260808a01515f9062400000166133325760d086901c62ffffff16613344565b6133448b6080015162ffffff16613bbf565b9050831561336a57620f4240610fff851662ffffff83168181029290920491010361336c565b805b975050620f42408762ffffff16106133975789515f121561339757613397634b10312360e11b6115dd565b89515f036133af575f809850985050505050506138e2565b831561342c5760608a01516001600160a01b038681169116106133ee576133ee6001600160a01b0386165b60608c0151637c9c6e8f60e01b919061208c565b6401000276a36001600160a01b03168a606001516001600160a01b0316116134275760608a015161342790639e4d7cc760e01b90612176565b61349d565b60608a01516001600160a01b03868116911611613455576134556001600160a01b0386166133da565b73fffd8963efd1fc6a506488495d951d5263988d266001600160a01b03168a606001516001600160a01b03161061349d5760608a015161349d90639e4d7cc760e01b90612176565b60408051610100810182525f80825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810191909152846134ec578b600201546134f2565b8b600101545b60e08201525b82158061351d57508a606001516001600160a01b0316875f01516001600160a01b0316145b6137fd5786516001600160a01b03168152602080880151908c01516135479160058f019188613bce565b1515604083015260020b60208201819052620d89e7191261356d57620d89e71960208201525b620d89e860020b816020015160020b1261358b57620d89e860208201525b6135988160200151612c44565b6001600160a01b0390811660608381018290528951908e01516135d5939192911680821891811160018a161891909102188960400151868c613cbb565b60c085015260a084015260808301526001600160a01b031687528a515f1215613631576136058160a00151613ad0565b830392506136208160c001518260800151612f1791906147f5565b61362a9083614c2e565b9150613662565b6136448160c00151826080015101613ad0565b830192506136558160a00151613ad0565b61365f9083614b17565b91505b83156136b1575f848962ffffff161461369957620f4240858360c00151846080015101028161369357613693614c4d565b0461369f565b8160c001515b60c08301805182900390529990990198505b60408701516001600160801b0316156136f1576136e58160c00151600160801b89604001516001600160801b031691020490565b60e08201805190910190525b80606001516001600160a01b0316875f01516001600160a01b0316036137d7578060400151156137b2575f8086613731578d600101548360e0015161373c565b8260e001518e600201545b915091505f6137878f85602001518585600292830b5f90815260049094016020526040909320600181018054909203909155908101805490920390915554600160801b9004600f0b90565b90508715613792575f035b6137a08a6040015182612f60565b6001600160801b031660408b01525050505b846137c15780602001516137ca565b60018160200151035b60020b60208801526134f8565b805187516001600160a01b039081169116146137f85786516137ca90612fe9565b6134f8565b8651602088015161382d9190613814908990613279565b6001600160a01b0319166001600160a01b039091161790565b8c55604087015160038d01546001600160801b0390811691161461387257604087015160038d0180546001600160801b0319166001600160801b039092169190911790555b846138865760e081015160028d0155613891565b60e081015160018d01555b8a515f13851515146138be576138b76138a983611b91565b611d92858e5f015103611b91565b99506138db565b6138d86138cf848d5f015103611b91565b611d9284611b91565b99505b5050505050505b92959194509250565b6001600160a01b0383165f9081526004602090815260408083208584529091528120805483929061391d9084906147e2565b9091555050604080513381526020810183905283915f916001600160a01b038716915f80516020614ca183398151915291016117ff565b6040518381528260020b60048201528160020b6024820152604481fd5b5f838302815f1985870982811083820303915050808411613990575f80fd5b805f036139a257508290049050610773565b5f848688095f868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b5f836001600160a01b0316856001600160a01b03161115613a2c579293925b6001600160a01b038516613a465762bfc9215f526004601cfd5b600160601b600160e01b03606084901b166001600160a01b038686031683613a9957866001600160a01b0316613a868383896001600160a01b0316613971565b81613a9357613a93614c4d565b04613ac5565b613ac5613ab08383896001600160a01b0316613e1e565b886001600160a01b0316808204910615150190565b979650505050505050565b805f811215610a3057610a306393dafdf160e01b6115dd565b5f6001600160a01b038481169086160360ff81901d90810118600160601b6001600160801b038516613b1c818484613971565b9350845f83858409111684019350505050949350505050565b5f808211613b41575f80fd5b507f0706060506020500060203020504000106050205030304010505030400000000601f6f8421084210842108cc6318c6db6d54be6001600160801b03841160071b84811c6001600160401b031060061b1784811c63ffffffff1060051b1784811c61ffff1060041b1784811c60ff1060031b1793841c1c161a1790565b62bfffff8116610a3081611a4e565b5f80600284810b9086900b8181078313919005038315613c4d57600281900b60081d600181900b5f908152602089905260409020545f1960ff808516908190039190911c918216801515955090919085613c2f57888360ff16860302613c42565b88613c3982613b35565b840360ff168603025b965050505050613cb1565b6001908101600281900b60081d80830b5f90815260208a905260409020545f1960ff841694851b011990811680151595509293919285613c9757888360ff0360ff16860102613caa565b8883613ca283613e4e565b0360ff168601025b9650505050505b5094509492505050565b5f80808062ffffff85166001600160a01b03808a16908b1610158288128015613d91575f613cf48a5f0385620f424003620f4240613971565b905082613d0d57613d088d8d8d6001613ae9565b613d1a565b613d1a8c8e8d6001613a0d565b9650868110613d4e578b9750620f42408414613d4557613d40878586620f424003613e1e565b613d47565b865b9450613d67565b809650613d5d8d8c8386613ee8565b9750868a5f030394505b82613d7d57613d788d898d5f613a0d565b613d89565b613d89888e8d5f613ae9565b955050613e0f565b81613da757613da28c8c8c5f613a0d565b613db3565b613db38b8d8c5f613ae9565b9450848910613dc4578a9650613dd6565b889450613dd38c8b8785613f36565b96505b81613ded57613de88c888c6001613ae9565b613dfa565b613dfa878d8c6001613a0d565b9550613e0c868485620f424003613e1e565b93505b50505095509550955095915050565b5f613e2a848484613971565b90508180613e3a57613e3a614c4d565b838509156107735760010180610773575f80fd5b5f808211613e5a575f80fd5b507e1f0d1e100c1d070f090b19131c1706010e11080a1a141802121b15031604055f8290039091166101e07f804040554300526644320000502061067405302602000010750620017611707760fc7fb6db6db6ddddddddd34d34d349249249210842108c6318c639ce739cffffffff840260f81c161b60f71c1690811c63d76453e004601f169190911a1790565b5f6001600160801b038416156001600160a01b038616151715613f1257634f2461b85f526004601cfd5b81613f2957613f248585856001613f79565b611f4f565b611f4f8585856001614064565b5f6001600160801b038416156001600160a01b038616151715613f6057634f2461b85f526004601cfd5b81613f7157613f248585855f614064565b611f4f8585855f5b5f8115613fe9575f6001600160a01b03841115613fad57613fa884600160601b876001600160801b0316613971565b613fc4565b613fc46001600160801b038616606086901b614c61565b9050613fe1613fdc826001600160a01b0389166147f5565b614146565b9150506115d5565b5f6001600160a01b038411156140165761401184600160601b876001600160801b0316613e1e565b614033565b614033606085901b6001600160801b038716808204910615150190565b9050806001600160a01b0387161161405257634323a5555f526004601cfd5b6001600160a01b0386160390506115d5565b5f825f036140735750836115d5565b600160601b600160e01b03606085901b168215614105576001600160a01b038616848102908582816140a7576140a7614c4d565b04036140d7578181018281106140d5576140cb83896001600160a01b031683613e1e565b93505050506115d5565b505b50613fe181856140f06001600160a01b038a1683614c61565b6140fa91906147f5565b808204910615150190565b6001600160a01b03861684810290858204148183111661412c5763f5c787f15f526004601cfd5b8082036140cb613fdc846001600160a01b038b1684613e1e565b806001600160a01b0381168114610a3057610a306393dafdf160e01b6115dd565b6001600160a01b03811681146111f4575f80fd5b5f806040838503121561418c575f80fd5b823561419781614167565b946020939093013593505050565b5f602082840312156141b5575f80fd5b81356001600160e01b031981168114610773575f80fd5b5f805f606084860312156141de575f80fd5b83356141e981614167565b95602085013595506040909401359392505050565b5f805f60608486031215614210575f80fd5b833561421b81614167565b9250602084013561422b81614167565b929592945050506040919091013590565b5f6020828403121561424c575f80fd5b5035919050565b634e487b7160e01b5f52604160045260245ffd5b604051608081016001600160401b038111828210171561428957614289614253565b60405290565b604051601f8201601f191681016001600160401b03811182821017156142b7576142b7614253565b604052919050565b803562ffffff81168114610a30575f80fd5b8035600281900b8114610a30575f80fd5b5f60a082840312156142f2575f80fd5b60405160a081016001600160401b038111828210171561431457614314614253565b604052905080823561432581614167565b8152602083013561433581614167565b6020820152614346604084016142bf565b6040820152614357606084016142d1565b6060820152608083013561436a81614167565b6080919091015292915050565b5f8083601f840112614387575f80fd5b5081356001600160401b0381111561439d575f80fd5b6020830191508360208285010111156143b4575f80fd5b9250929050565b5f805f805f61010086880312156143d0575f80fd5b6143da87876142e2565b945060a0860135935060c0860135925060e08601356001600160401b03811115614402575f80fd5b61440e88828901614377565b969995985093965092949392505050565b5f6020828403121561442f575f80fd5b813561077381614167565b5f806040838503121561444b575f80fd5b50508035926020909101359150565b602080825282518282018190525f918401906040840190835b81811015614491578351835260209384019390920191600101614473565b509095945050505050565b5f80602083850312156144ad575f80fd5b82356001600160401b038111156144c2575f80fd5b6144ce85828601614377565b90969095509350505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b5f8060c08385031215614520575f80fd5b61452a84846142e2565b915061453860a084016142bf565b90509250929050565b80358015158114610a30575f80fd5b5f8060408385031215614561575f80fd5b823561456c81614167565b915061453860208401614541565b5f805f8084860361014081121561458f575f80fd5b61459987876142e2565b94506080609f19820112156145ac575f80fd5b506145b5614267565b6145c160a087016142d1565b81526145cf60c087016142d1565b602082015260e08601356040820152610100860135606082015292506101208501356001600160401b03811115614604575f80fd5b61461087828801614377565b95989497509550505050565b5f8060c0838503121561462d575f80fd5b61463784846142e2565b915060a083013561464781614167565b809150509250929050565b5f8060208385031215614663575f80fd5b82356001600160401b03811115614678575f80fd5b8301601f81018513614688575f80fd5b80356001600160401b0381111561469d575f80fd5b8560208260051b84010111156146b1575f80fd5b6020919091019590945092505050565b5f80604083850312156146d2575f80fd5b82356146dd81614167565b9150602083013561464781614167565b5f805f80848603610120811215614702575f80fd5b61470c87876142e2565b94506060609f198201121561471f575f80fd5b50604051606081016001600160401b038111828210171561474257614742614253565b60405261475160a08701614541565b815260c0860135602082015260e086013561476b81614167565b604082015292506101008501356001600160401b03811115614604575f80fd5b5f805f806080858703121561479e575f80fd5b84356147a981614167565b935060208501356147b981614167565b93969395505050506040820135916060013590565b634e487b7160e01b5f52601160045260245ffd5b818103818111156106cd576106cd6147ce565b808201808211156106cd576106cd6147ce565b81835281816020850137505f828201602090810191909152601f909101601f19169091010190565b602081525f6115d5602083018486614808565b5f60208284031215614853575f80fd5b81516001600160401b03811115614868575f80fd5b8201601f81018413614878575f80fd5b80516001600160401b0381111561489157614891614253565b6148a4601f8201601f191660200161428f565b8181528560208385010111156148b8575f80fd5b8160208401602083015e5f91810160200191909152949350505050565b80516001600160a01b03908116835260208083015182169084015260408083015162ffffff169084015260608083015160020b9084015260809182015116910152565b6001600160a01b038716815261493160208201876148d5565b8460c08201528360e08201526101206101008201525f61495661012083018486614808565b98975050505050505050565b6001600160a01b038616815261497b60208201866148d5565b8351600290810b60c08301526020850151900b60e0820152604084015161010082015260608401516101208201526101606101408201525f613ac561016083018486614808565b6001600160a01b03881681526149db60208201886148d5565b8551600290810b60c08301526020870151900b60e08201526040860151610100820152606086015161012082015284610140820152836101608201526101a06101808201525f61326c6101a083018486614808565b6001600160a01b038416815260e08101614a4d60208301856148d5565b6001600160a01b039290921660c0919091015292915050565b6001600160a01b03851681526101008101614a8460208301866148d5565b6001600160a01b039390931660c082015260029190910b60e09091015292915050565b5f60208284031215614ab7575f80fd5b5051919050565b6001600160a01b0386168152614ad760208201866148d5565b8351151560c0820152602084015160e082015260408401516001600160a01b03166101008201526101406101208201525f613ac561014083018486614808565b8082018281125f831280158216821582161715610fa957610fa96147ce565b6001600160a01b0387168152614b4f60208201876148d5565b8451151560c0820152602085015160e082015260408501516001600160a01b0316610100820152836101208201526101606101408201525f61495661016083018486614808565b600f81810b9083900b0160016001607f1b03811360016001607f1b0319821217156106cd576106cd6147ce565b805160208201516001600160e01b0319811691906004821015614bfa576001600160e01b0319600483900360031b81901b82161692505b5050919050565b600f82810b9082900b0360016001607f1b0319811260016001607f1b03821317156106cd576106cd6147ce565b8181035f831280158383131683831282161715612942576129426147ce565b634e487b7160e01b5f52601260045260245ffd5b5f82614c7b57634e487b7160e01b5f52601260045260245ffd5b50049056fe27e098c505d44ec3574004bca052aabf76bd35004c182099d8c575fb238593b91b3d7edb2e9c0b0e7c525b20aaaef0f5940d2ed71663c7d39266ecafac728859c090fc4683624cfc3884e9d8de5eca132f2d0ec062aff75d43c0465d5ceeab237d4b3164c6e45b97e7d87b7125a44c5828d005af88f9d751cfd78729c5d99a0ba26469706673582212201d5584e96d7d6a1e174a1659c31ddf53c1e43223e0b708d83398aa49155fa4e664736f6c634300081a0033",
    "sourceMap": "4714:12841:52:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;792:81:47;;;;;;;;;;-1:-1:-1;792:81:47;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;668:25:132;;;656:2;641:18;792:81:47;;;;;;;;2663:241;;;;;;;;;;-1:-1:-1;2663:241:47;;;;;:::i;:::-;;:::i;:::-;;;1160:14:132;;1153:22;1135:41;;1123:2;1108:18;2663:241:47;995:187:132;1178:282:47;;;;;;;;;;-1:-1:-1;1178:282:47;;;;;:::i;:::-;;:::i;13231:301:52:-;;;;;;;;;;-1:-1:-1;13231:301:52;;;;;:::i;:::-;;:::i;:::-;;13571:113;;;:::i;14439:359::-;;;;;;;;;;-1:-1:-1;14439:359:52;;;;;:::i;:::-;;:::i;337:179:49:-;;;;;;;;;;-1:-1:-1;337:179:49;;;;;:::i;:::-;;:::i;11968:732:52:-;;;;;;;;;;-1:-1:-1;11968:732:52;;;;;:::i;:::-;;:::i;1070:179:53:-;;;;;;;;;;-1:-1:-1;1070:179:53;;;;;:::i;:::-;;:::i;552:981:49:-;;;;;;;;;;-1:-1:-1;552:981:49;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;13723:132:52:-;;;;;;:::i;:::-;;:::i;2013:231:47:-;;;;;;;;;;-1:-1:-1;2013:231:47;;;;;:::i;:::-;;:::i;5533:468:52:-;;;;;;;;;;-1:-1:-1;5533:468:52;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;15135:353::-;;;;;;;;;;-1:-1:-1;15135:353:52;;;;;:::i;:::-;;:::i;2250:225:47:-;;;;;;;;;;-1:-1:-1;2250:225:47;;;;;:::i;:::-;;:::i;880:108::-;;;;;;;;;;-1:-1:-1;880:108:47;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7524:1752:52;;;;;;;;;;-1:-1:-1;7524:1752:52;;;;;:::i;:::-;;:::i;:::-;;;;10597:25:132;;;10653:2;10638:18;;10631:34;;;;10570:18;7524:1752:52;10357:314:132;6040:1445:52;;;;;;;;;;-1:-1:-1;6040:1445:52;;;;;:::i;:::-;;:::i;:::-;;;11217:1:132;11206:21;;;;11188:40;;11176:2;11161:18;6040:1445:52;11046:188:132;1289:414:53;;;;;;;;;;-1:-1:-1;1289:414:53;;;;;:::i;:::-;;:::i;13894:506:52:-;;;;;;;;;;-1:-1:-1;13894:506:52;;;;;:::i;:::-;;:::i;1743:701:53:-;;;;;;;;;;-1:-1:-1;1743:701:53;;;;;:::i;:::-;;:::i;690:20:46:-;;;;;;;;;;-1:-1:-1;690:20:46;;;;-1:-1:-1;;;;;690:20:46;;;;;;-1:-1:-1;;;;;12348:32:132;;;12330:51;;12318:2;12303:18;690:20:46;12184:203:132;819:71:53;;;;;;;;;;-1:-1:-1;819:71:53;;;;;:::i;:::-;;;;;;;;;;;;;;563:1037:50;;;;;;;;;;-1:-1:-1;563:1037:50;;;;;:::i;:::-;;:::i;12739:453:52:-;;;;;;;;;;-1:-1:-1;12739:453:52;;;;;:::i;:::-;;:::i;697:88:47:-;;;;;;;;;;-1:-1:-1;697:88:47;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;1569:1037:49;;;;;;;;;;-1:-1:-1;1569:1037:49;;;;;:::i;:::-;;:::i;931:36:53:-;;;;;;;;;;-1:-1:-1;931:36:53;;;;-1:-1:-1;;;;;931:36:53;;;348:179:50;;;;;;;;;;-1:-1:-1;348:179:50;;;;;:::i;:::-;;:::i;1312:161:46:-;;;;;;;;;;-1:-1:-1;1312:161:46;;;;;:::i;:::-;;:::i;9315:1699:52:-;;;;;;;;;;-1:-1:-1;9315:1699:52;;;;;:::i;:::-;;:::i;14837:259::-;;;;;;;;;;-1:-1:-1;14837:259:52;;;;;:::i;:::-;;:::i;1466:541:47:-;;;;;;;;;;-1:-1:-1;1466:541:47;;;;;:::i;:::-;;:::i;2663:241::-;2739:4;-1:-1:-1;;;;;;;;;2762:25:47;;;;:100;;-1:-1:-1;;;;;;;;;;2837:25:47;;;2762:100;2755:107;2663:241;-1:-1:-1;;2663:241:47:o;1178:282::-;1292:10;1266:4;1282:21;;;:9;:21;;;;;;;;:25;;;;;;;;:35;;1311:6;;1282:25;1266:4;;1282:35;;1311:6;;1282:35;:::i;:::-;;;;-1:-1:-1;;;;;;;1328:19:47;;;;;;:9;:19;;;;;;;;:23;;;;;;;;:33;;1355:6;;1328:19;:33;;1355:6;;1328:33;:::i;:::-;;;;-1:-1:-1;;1377:54:47;;;1398:10;16104:51:132;;;16186:2;16171:18;;16164:34;;;1420:2:47;;-1:-1:-1;;;;;1377:54:47;;;-1:-1:-1;;;;;;;;;;;1377:54:47;16077:18:132;1377:54:47;;;;;;;;-1:-1:-1;1449:4:47;1178:282;;;;;;:::o;13231:301:52:-;-1:-1:-1;;;;;;;;;;;888:23:72;5348:59:52;;5372:35;-1:-1:-1;;;5372:33:52;:35::i;:::-;13415:57:::1;13429:8;13441:17;:6;:15;:17::i;:::-;13439:20;;13461:10;13415:13;:57::i;:::-;13486:29;-1:-1:-1::0;;;;;13486:17:52;::::1;13504:2:::0;13508:6;13486:17:::1;:29::i;:::-;13231:301:::0;;;:::o;13571:113::-;13632:7;-1:-1:-1;;;;;;;;;;;888:23:72;5348:59:52;;5372:35;-1:-1:-1;;;5372:33:52;:35::i;:::-;13658:19:::1;13666:10;13658:7;:19::i;:::-;13651:26;;13571:113:::0;:::o;14439:359::-;-1:-1:-1;;;;;;;;;;;888:23:72;5348:59:52;;5372:35;-1:-1:-1;;;5372:33:52;:35::i;:::-;14596:2;14676:57:::1;14596:2:::0;14702:17:::1;:6:::0;:15:::1;:17::i;14676:57::-;14747:34;14753:2:::0;-1:-1:-1;;;;;14757:13:52;::::1;14774:6;14747:5;:34::i;:::-;14529:263;14439:359:::0;;;:::o;337:179:49:-;392:7;466:4;460:11;457:1;450:22;495:4;492:1;485:15;11968:732:52;12145:18;-1:-1:-1;;;;;;;;;;;888:23:72;5348:59:52;;5372:35;-1:-1:-1;;;5372:33:52;:35::i;:::-;1205:22:51::1;:20;:22::i;:::-;515:4:87::0;496:24;;12179:13:52::2;17345:10:::0;;;:6;:10;;;;;12267:27:::2;17345:10:::0;12267:25:::2;:27::i;:::-;12305:9;::::0;::::2;::::0;:55:::2;::::0;-1:-1:-1;;;;;12305:22:52::2;12328:3:::0;12333:7;12342;12351:8;;12305:22:::2;:55::i;:::-;12379:29;:4:::0;12391:7;12400;12379:11:::2;:29::i;:::-;12371:37;;12419:48;12444:3;12449:5;12456:10;12419:24;:48::i;:::-;12584:44;::::0;;10597:25:132;;;10653:2;10638:18;;10631:34;;;12599:10:52::2;::::0;12591:6;;12584:44:::2;::::0;10570:18:132;12584:44:52::2;;;;;;;12639:9;::::0;::::2;::::0;:54:::2;::::0;-1:-1:-1;;;;;12639:21:52::2;12661:3:::0;12666:7;12675;12684:8;;12639:21:::2;:54::i;:::-;12169:531;;11968:732:::0;;;;;;;:::o;1070:179:53:-;778:5:46;;-1:-1:-1;;;;;778:5:46;764:10;:19;756:44;;;;-1:-1:-1;;;756:44:46;;16664:2:132;756:44:46;;;16646:21:132;16703:2;16683:18;;;16676:30;-1:-1:-1;;;16722:18:132;;;16715:42;16774:18;;756:44:46;;;;;;;;;1153:21:53::1;:34:::0;;-1:-1:-1;;;;;;1153:34:53::1;-1:-1:-1::0;;;;;1153:34:53;::::1;::::0;;::::1;::::0;;;1202:40:::1;::::0;::::1;::::0;-1:-1:-1;;1202:40:53::1;1070:179:::0;:::o;552:981:49:-;628:16;715:4;709:11;746:6;878;875:1;871:14;985:4;977:6;970:20;1083:6;1076:4;1068:6;1064:17;1057:33;1193:4;1185:6;1181:17;1171:27;;1234:6;1226;1222:19;1211:30;;1254:220;1305:9;1299:16;1291:6;1284:32;1355:4;1347:6;1343:17;1333:27;;1405:1;1394:9;1390:17;1377:30;;1445:3;1437:6;1434:15;1254:220;1424:36;1510:5;1505:3;1501:15;1494:5;1487:30;13723:132:52;13804:7;-1:-1:-1;;;;;;;;;;;888:23:72;5348:59:52;;5372:35;-1:-1:-1;;;5372:33:52;:35::i;:::-;13830:18:::1;13838:9;13830:7;:18::i;5417:1::-;13723:132:::0;;;:::o;2013:231:47:-;2125:10;2099:4;2115:21;;;:9;:21;;;;;;;;-1:-1:-1;;;;;2115:30:47;;;;;;;;;;;:34;;;;;;;;;:43;;;2174:41;2099:4;;2146:2;;2174:41;;;;2152:6;668:25:132;;656:2;641:18;;522:177;5533:468:52;5597:19;-1:-1:-1;;;;;;;;;;;888:23:72;5628:60:52;;;5651:37;-1:-1:-1;;;5651:35:52;:37::i;:::-;5699:13;:11;:13::i;:::-;5839:48;;-1:-1:-1;;;5839:48:52;;5855:10;;5839:42;;:48;;5882:4;;;;5839:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5839:48:52;;;;;;;;;;;;:::i;:::-;5830:57;-1:-1:-1;;;;;;;;;;;;670:31:73;5902:29:52;5898:75;;5933:40;-1:-1:-1;;;5933:38:52;:40::i;:::-;5983:11;:9;:11::i;15135:353::-;15231:7;;;;:20;;552:8:70;1379:24;15230:23:52;:59;;;;15279:3;:9;;;-1:-1:-1;;;;;15257:32:52;:10;-1:-1:-1;;;;;15257:32:52;;;15230:59;15226:142;;;15305:52;-1:-1:-1;;;15305:50:52;:52::i;:::-;15377:26;:15;:24;;;:26::i;:::-;515:4:87;496:24;;15413:9:52;15445:10;;;:6;:10;;;;;:36;;15465:15;15445:19;:36::i;2250:225:47:-;2355:10;2328:4;2344:22;;;:10;:22;;;;;;;;-1:-1:-1;;;;;2344:32:47;;;;;;;;;;;:43;;-1:-1:-1;;2344:43:47;;;;;;;;;;2403;;1135:41:132;;;2328:4:47;;2355:10;2403:43;;1108:18:132;2403:43:47;;;;;;;-1:-1:-1;2464:4:47;2250:225;;;;:::o;7524:1752:52:-;7724:24;;-1:-1:-1;;;;;;;;;;;888:23:72;5348:59:52;;5372:35;-1:-1:-1;;;5372:33:52;:35::i;:::-;1205:22:51::1;:20;:22::i;:::-;515:4:87::0;496:24;;7786:9:52::2;17345:10:::0;;;:6;:10;;;;;7884:27:::2;17345:10:::0;7884:25:::2;:27::i;:::-;7926:9;::::0;::::2;::::0;:54:::2;::::0;-1:-1:-1;;;;;7926:31:52::2;7958:3:::0;7963:6;7971:8;;7926:31:::2;:54::i;:::-;7995:27;8068:394;8106:342;;;;;;;;8162:10;-1:-1:-1::0;;;;;8106:342:52::2;;;;;8205:6;:16;;;8106:342;;;;;;8254:6;:16;;;8106:342;;;;;;8308:32;:6;:21;;;:30;:32::i;:::-;8106:342;;::::0;;8375:15:::2;::::0;;::::2;::::0;8106:342:::2;;;::::0;::::2;::::0;8418:11;::::2;::::0;-1:-1:-1;8106:342:52;;;;8068:4;;:20:::2;:394::i;:::-;8036:426:::0;-1:-1:-1;8036:426:52;-1:-1:-1;8567:28:52::2;8036:426:::0;;8567:28:::2;:::i;:::-;8553:42;;7818:788;;8751:10;-1:-1:-1::0;;;;;8731:103:52::2;8747:2;8731:103;8763:6;:16;;;8781:6;:16;;;8799:6;:21;;;8822:6;:11;;;8731:103;;;;;;;;18333:1:132::0;18322:21;;;18304:40;;18380:21;;;;18375:2;18360:18;;18353:49;18433:2;18418:18;;18411:34;18476:2;18461:18;;18454:34;;;;18291:3;18276:19;;18083:411;8731:103:52::2;;;;;;;;8904:9;::::0;::::2;::::0;8845:22:::2;::::0;8904:79:::2;::::0;-1:-1:-1;;;;;8904:30:52::2;8935:3:::0;8940:6;8948:11;8961;8974:8;;8904:30:::2;:79::i;:::-;8877:106:::0;;-1:-1:-1;8877:106:52;-1:-1:-1;1676:48:84;;9095:109:52::2;;9144:60;9169:3;9174:9;9193:3;:9;;;9144:24;:60::i;:::-;9215:54;9240:3;9245:11;9258:10;9215:24;:54::i;:::-;7776:1500;;7524:1752:::0;;;;;;;:::o;6040:1445::-;6135:10;1205:22:51;:20;:22::i;:::-;6264:15:52::1;::::0;::::1;::::0;1676::82::1;6264:34:52;::::0;;;::::1;;6260:96;;;6340:15;::::0;::::1;::::0;6300:56:::1;::::0;-1:-1:-1;;;6300:28:52;:39:::1;:56::i;:::-;1511:1:82;6370:34:52;;:3;:15;;;:34;;;6366:96;;;6446:15;::::0;::::1;::::0;6406:56:::1;::::0;-1:-1:-1;;;6406:28:52;:39:::1;:56::i;:::-;6476:13:::0;;6493::::1;::::0;::::1;::::0;-1:-1:-1;;;;;887:51:86;;;;;;6472:202:52::1;;6603:13:::0;;6635::::1;::::0;::::1;::::0;6522:141:::1;::::0;-1:-1:-1;;;6522:36:52;:47:::1;:141::i;:::-;6688:37;6717:3;:7;;;6688:3;:9;;;-1:-1:-1::0;;;;;6688:28:52::1;;;:37;;;;:::i;:::-;6683:109;;6781:9;::::0;::::1;::::0;6727:65:::1;::::0;-1:-1:-1;;;6727:34:52;:45:::1;:65::i;:::-;6803:12;6818:25;:3;:7;;;:23;;;:25::i;:::-;6854:9;::::0;::::1;::::0;6803:40;;-1:-1:-1;6854:45:52::1;::::0;-1:-1:-1;;;;;6854:26:52::1;6881:3:::0;6886:12;6854:26:::1;:45::i;:::-;515:4:87::0;496:24;;6910:9:52::1;6950:10:::0;;;:6:::1;:10;::::0;;;;:42:::1;::::0;6972:12;6986:5;6950:21:::1;:42::i;:::-;6943:49;;7346:3;:13;;;-1:-1:-1::0;;;;;7316:101:52::1;7331:3;:13;;;-1:-1:-1::0;;;;;7316:101:52::1;7327:2;7316:101;7361:3;:7;;;7370:3;:15;;;7387:3;:9;;;7398:12;7412:4;7316:101;;;;;;;;;18794:8:132::0;18782:21;;;;18764:40;;18851:1;18840:21;;;18835:2;18820:18;;18813:49;-1:-1:-1;;;;;18898:32:132;;;18893:2;18878:18;;18871:60;18967:32;;18962:2;18947:18;;18940:60;19037:21;;19031:3;19016:19;;19009:50;18751:3;18736:19;;18499:566;7316:101:52::1;;;;;;;;7428:9;::::0;::::1;::::0;:50:::1;::::0;-1:-1:-1;;;;;7428:25:52::1;7454:3:::0;7459:12;7473:4;7428:25:::1;:50::i;:::-;6147:1338;;6040:1445:::0;;;;:::o;1289:414:53:-;1393:21;;-1:-1:-1;;;;;1393:21:53;1379:10;:35;1375:76;;1416:35;-1:-1:-1;;;1416:33:53;:35::i;:::-;1173:15:77;1165:5;1155:16;;1152:37;1251:15;1240:8;1230:19;;1227:40;1289:41;1461:97:53;;1503:55;-1:-1:-1;;;1503:55:53;;;:39;:55::i;:::-;515:4:87;496:24;;1600:43:53;1628:14;1600:12;1609:2;17308:18:52;17345:10;;;:6;:10;;;;;;17247:115;1600:12:53;:27;;:43::i;:::-;1658:38;;19244:8:132;19232:21;;19214:40;;1677:2:53;;1658:38;;19202:2:132;19187:18;1658:38:53;;;;;;;1365:338;1289:414;;:::o;13894:506:52:-;-1:-1:-1;;;;;;;;;;;888:23:72;5348:59:52;;5372:35;-1:-1:-1;;;5372:33:52;:35::i;:::-;14015:10:::1;13980:14;586:66:63::0;;;-1:-1:-1;;;;;13997:17:52;::::1;672:2:63::0;665:69;772:2;759:16;;1004:15;;14134:17:52::1;:6:::0;:15:::1;:17::i;:::-;14113:38;;14180:7;14165:11;:22;;;14161:77;;14189:49;-1:-1:-1::0;;;14189:47:52::1;:49::i;:::-;14332:51;14346:8;14358:11;14356:14;;14372:10;14332:13;:51::i;1743:701:53:-:0;1917:21;;1860:23;;-1:-1:-1;;;;;1917:21:53;1903:10;:35;1899:76;;1940:35;-1:-1:-1;;;1940:33:53;:35::i;:::-;-1:-1:-1;;;;;1990:22:53;;4998:58:86;1989:25:53;:77;;;;-1:-1:-1;;;;;;;;;;;;;;;;;680:20:64;448:51:86;;;;;;2018:48:53;1985:257;;;2184:47;-1:-1:-1;;;2184:45:53;:47::i;:::-;2271:11;;2270:54;;2318:6;2270:54;;;-1:-1:-1;;;;;2286:29:53;;;;;;:19;:29;;;;;;2270:54;-1:-1:-1;;;;;2334:29:53;;;;;;:19;:29;;;;;:48;;2252:72;;-1:-1:-1;2252:72:53;;2334:29;;;:48;;2252:72;;2334:48;:::i;:::-;;;;-1:-1:-1;2392:45:53;;-1:-1:-1;;;;;;2392:17:53;;2410:9;2421:15;2392:17;:45::i;563:1037:50:-;630:16;717:4;711:11;748:6;861:4;853:6;846:20;965:12;958:4;950:6;946:17;939:39;1087:4;1079:6;1075:17;1065:27;;1227:12;1224:1;1220:20;1212:6;1208:33;1273:12;1298:243;1349:25;;1343:32;1328:48;;1415:4;1403:17;;;;1452:22;1501:15;;;1298:243;1491:36;1298:243;1302:2;1577:5;1572:3;1568:15;1561:5;1554:30;12739:453:52;-1:-1:-1;;;;;12849:22:52;;12845:341;;12997:32;:30;:32::i;:::-;12739:453;:::o;12845:341::-;13060:15;13078:24;:8;-1:-1:-1;;;;;13078:22:52;;:24::i;:::-;13060:42;;13116:59;13157:8;13167:7;13116:40;:59::i;:::-;13046:140;12739:453;:::o;1569:1037:49:-;1636:16;1723:4;1717:11;1754:6;1867:4;1859:6;1852:20;1971:12;1964:4;1956:6;1952:17;1945:39;2093:4;2085:6;2081:17;2071:27;;2233:12;2230:1;2226:20;2218:6;2214:33;2279:12;2304:243;2355:25;;2349:32;2334:48;;2421:4;2409:17;;;;2458:22;2507:15;;;2497:36;2526:5;2497:36;2304:243;;348:179:50;403:7;477:4;471:11;468:1;461:22;506:4;503:1;496:15;1312:161:46;778:5;;-1:-1:-1;;;;;778:5:46;764:10;:19;756:44;;;;-1:-1:-1;;;756:44:46;;16664:2:132;756:44:46;;;16646:21:132;16703:2;16683:18;;;16676:30;-1:-1:-1;;;16722:18:132;;;16715:42;16774:18;;756:44:46;16462:336:132;756:44:46;1392:5:::1;:16:::0;;-1:-1:-1;;;;;;1392:16:46::1;-1:-1:-1::0;;;;;1392:16:46;::::1;::::0;;::::1;::::0;;1424:42:::1;::::0;1392:16;;1445:10:::1;::::0;1424:42:::1;::::0;1392:5;1424:42:::1;1312:161:::0;:::o;9315:1699:52:-;9495:22;-1:-1:-1;;;;;;;;;;;888:23:72;5348:59:52;;5372:35;-1:-1:-1;;;5372:33:52;:35::i;:::-;1205:22:51::1;:20;:22::i;:::-;9537:6:52::2;:22;;;9563:1;9537:27:::0;9533:77:::2;;9566:44;-1:-1:-1::0;;;9566:42:52::2;:44::i;:::-;515:4:87::0;496:24;;9620:9:52::2;17345:10:::0;;;:6;:10;;;;;9700:27:::2;17345:10:::0;9700:25:::2;:27::i;:::-;9909:9;::::0;::::2;::::0;9738:31:::2;::::0;;;;;9909:43:::2;::::0;-1:-1:-1;;;;;9909:20:52::2;9930:3:::0;9935:6;9943:8;;9909:20:::2;:43::i;:::-;9860:92;;;;;;;;;;;;10112:463;10135:4;10157:2;10177:302;;;;;;;;10333:12;10177:302;;;;10228:3;:15;;;10177:302;;;;;;10277:6;:17;;;10177:302;;;;;;10386:6;:24;;;-1:-1:-1::0;;;;;10177:302:52::2;;;;;10447:13;10177:302;;;;::::0;10497:6:::2;:17;;;:49;;10533:3;:13;;;10112:5;:463::i;10497:49::-;10517:13:::0;;10112:5:::2;:463::i;:::-;10653:9;::::0;::::2;::::0;10100:475;;-1:-1:-1;10596:22:52::2;::::0;-1:-1:-1;10653:70:52::2;::::0;-1:-1:-1;;;;;;10653:19:52::2;10673:3:::0;10678:6;10100:475;10697:8;;10707:15;10653:19:::2;:70::i;:::-;10628:95:::0;;-1:-1:-1;10628:95:52;-1:-1:-1;1676:48:84;;10835:109:52::2;;10884:60;10909:3;10914:9;10933:3;:9;;;10884:24;:60::i;:::-;10955:52;10980:3;10985:9;10996:10;10955:24;:52::i;:::-;9523:1491;;;;9315:1699:::0;;;;;;:::o;14837:259::-;-1:-1:-1;;;;;;;;;;;888:23:72;5348:59:52;;5372:35;-1:-1:-1;;;5372:33:52;:35::i;:::-;14972:2;14985:54:::1;14972:2:::0;15009:17:::1;:6:::0;:15:::1;:17::i;:::-;15028:10;14985:13;:54::i;:::-;15049:40;15059:4:::0;-1:-1:-1;;;;;15065:13:52;::::1;15082:6;15049:9;:40::i;1466:541:47:-:0;1574:4;1594:10;-1:-1:-1;;;;;1594:20:47;;;;;;:55;;-1:-1:-1;;;;;;1619:18:47;;;;;;:10;:18;;;;;;;;1638:10;1619:30;;;;;;;;;;1618:31;1594:55;1590:237;;;-1:-1:-1;;;;;1683:17:47;;1665:15;1683:17;;;:9;:17;;;;;;;;1701:10;1683:29;;;;;;;:33;;;;;;;;;-1:-1:-1;;1734:28:47;;1730:86;;1800:16;1810:6;1800:7;:16;:::i;:::-;-1:-1:-1;;;;;1764:17:47;;;;;;:9;:17;;;;;;;;1782:10;1764:29;;;;;;;:33;;;;;;;;:52;1730:86;1651:176;1590:237;-1:-1:-1;;;;;1837:17:47;;;;;;:9;:17;;;;;;;;:21;;;;;;;;:31;;1862:6;;1837:17;:31;;1862:6;;1837:31;:::i;:::-;;;;-1:-1:-1;;;;;;;1879:19:47;;;;;;:9;:19;;;;;;;;:23;;;;;;;;:33;;1906:6;;1879:19;:33;;1906:6;;1879:33;:::i;:::-;;;;-1:-1:-1;;1928:50:47;;;1937:10;16104:51:132;;16186:2;16171:18;;16164:34;;;1967:2:47;;-1:-1:-1;;;;;1928:50:47;;;;;;;;-1:-1:-1;;;;;;;;;;;1928:50:47;16077:18:132;1928:50:47;;;;;;;-1:-1:-1;1996:4:47;1466:541;;;;;;;:::o;753:163:65:-;863:8;860:1;853:19;895:4;892:1;885:15;2098:168:78;2150:6;-1:-1:-1;;;2172:1:78;:13;2168:57;;2187:38;-1:-1:-1;;;2187:36:78;:38::i;:::-;-1:-1:-1;2256:1:78;2098:168::o;16495:356:52:-;16590:5;:10;;16599:1;16590:10;16586:23;;16495:356;;;:::o;16586:23::-;16620:15;;16652:34;-1:-1:-1;;;;;16652:19:52;;16672:6;16680:5;16652:19;:34::i;:::-;16619:67;;;;16701:4;16709:1;16701:9;16697:148;;16726:29;:27;:29::i;:::-;16697:148;;;16776:8;16788:1;16776:13;16772:73;;16805:29;:27;:29::i;:::-;16576:275;;16495:356;;;:::o;1472:2873:86:-;1743:12;-1:-1:-1;;;;;1769:22:86;;1765:2574;;1956:1;1953;1950;1947;1939:6;1935:2;1928:5;1923:35;1912:46;;2086:7;2081:127;;2113:80;2148:2;2159:1;-1:-1:-1;;;2113:34:86;:80::i;:::-;1765:2574;;;2352:4;2346:11;-1:-1:-1;;;2483:3:86;2476:79;-1:-1:-1;;;;;2596:2:86;2592:51;2588:1;2583:3;2579:11;2572:72;2720:6;2715:2;2710:3;2706:12;2699:28;3649:2;3646:1;3642:2;3637:3;3634:1;3624:8;3617:5;3612:40;3141:16;3134:24;3128:2;3110:16;3107:24;3103:1;3099;3093:8;3090:15;3086:46;3083:76;2859:815;2828:846;;3752:1;3747:3;3740:14;3853:1;3846:4;3841:3;3837:14;3830:25;3956:1;3949:4;3944:3;3940:14;3933:25;;4125:7;4120:209;;4152:162;4224:8;-1:-1:-1;;;;;;4152:34:86;:162::i;15592:825:52:-;15646:12;-1:-1:-1;;;;;;;;;;;680:20:64;-1:-1:-1;;;;;15859:22:52;;15855:494;;15906:9;15899:16;;15855:494;;;15950:9;:13;15946:59;;15965:40;-1:-1:-1;;;15965:38:52;:40::i;:::-;1253:16:64;1247:23;16122:22:52;16219:24;-1:-1:-1;;;;;16219:22:52;;;:24::i;:::-;16197:46;-1:-1:-1;16264:28:52;16278:14;16197:46;16264:28;:::i;:::-;16257:35;;16306:32;:30;:32::i;:::-;15932:417;;15855:494;16359:51;16373:8;16383:15;:4;:13;:15::i;:::-;16400:9;16359:13;:51::i;:::-;15660:757;15592:825;;;:::o;3098:198:47:-;-1:-1:-1;;;;;3186:19:47;;;;;;:9;:19;;;;;;;;:23;;;;;;;;:33;;3213:6;;3186:19;:33;;3213:6;;3186:33;:::i;:::-;;;;-1:-1:-1;;3235:54:47;;;3244:10;16104:51:132;;16186:2;16171:18;;16164:34;;;3278:2:47;;-1:-1:-1;;;;;3235:54:47;;;3264:1;;-1:-1:-1;;;;;;;;;;;3235:54:47;16077:18:132;3235:54:47;;;;;;;;3098:198;;;:::o;963:137:51:-;1030:4;-1:-1:-1;;;;;1039:8:51;1022:25;;1018:75;;1049:44;-1:-1:-1;;;1049:42:51;:44::i;:::-;963:137::o;28591:157:75:-;28669:10;;-1:-1:-1;;;;;5144:41:86;28698:1:75;28669:30;28665:76;;28701:40;-1:-1:-1;;;28701:38:75;:40::i;15570:342:69:-;15720:4;8736:10;-1:-1:-1;;;;;8736:27:69;;;8732:59;;1829:6:::1;16441:29:::0;;:34;15740:166:::1;;15798:97;15849:10;15861:3;15866:7;15875;15884:8;;15812:82;;;;;;;;;;;;;:::i;:::-;;::::0;;-1:-1:-1;;15812:82:69;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;15812:82:69::1;-1:-1:-1::0;;;15812:82:69::1;::::0;;-1:-1:-1;;;;;15798:13:69;::::1;::::0;::::1;:97::i;:::-;;15740:166;15570:342:::0;;;;;;;:::o;21937:877:75:-;22076:15;;;;22026:18;;-1:-1:-1;;;;;22076:15:75;22105:14;;;22101:66;;22121:46;-1:-1:-1;;;22121:44:75;:46::i;:::-;22281:60;22298:18;:7;:16;:18::i;:::-;22296:21;;22321:18;:7;:16;:18::i;:::-;22319:21;;639:3:84;607:18;;;;-1:-1:-1;;;;;627:34:84;;;604:58;;448:222;22281:60:75;22273:68;-1:-1:-1;22503:11:75;;22499:143;;22534:26;;;:93;;-1:-1:-1;;;;;22564:63:75;;-1:-1:-1;;;1123:9:83;;1119:27;22534:93:75;;;22499:143;22659:11;;22655:143;;22690:26;;;:93;;-1:-1:-1;;;;;22720:63:75;;-1:-1:-1;;;1123:9:83;;1119:27;22690:93:75;;;22655:143;22046:768;21937:877;;;;;:::o;16929:232:52:-;17052:13;;17038:53;;17067:15;:5;2107:3:84;2103:22;;1958:183;17067:15:52;17084:6;17038:13;:53::i;:::-;17101;17115:3;:13;;;17130:15;:5;2303:2:84;2292:28;;2147:189;16000:339:69;16149:4;8736:10;-1:-1:-1;;;;;8736:27:69;;;8732:59;;1887:6:::1;16441:29:::0;;:34;16169:164:::1;;16226:96;16276:10;16288:3;16293:7;16302;16311:8;;16240:81;;;;;;;;;;;;;:::i;:::-;;::::0;;-1:-1:-1;;16240:81:69;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;16240:81:69::1;-1:-1:-1::0;;;16240:81:69::1;::::0;;-1:-1:-1;;;;;16226:13:69;::::1;::::0;::::1;:96::i;490:144:72:-:0;613:4;-1:-1:-1;;;;;;;;;;;588:30:72;490:144::o;640:121::-;739:5;-1:-1:-1;;;;;;;;;;;714:31:72;640:121::o;1833:122:70:-;1111:7;1893:12;;;1667:18;;1888:60;;1909:39;-1:-1:-1;;;1909:39:70;;;:33;:39::i;5235:154:75:-;5306:27;:4;:25;:27::i;:::-;5356:10;;:26;;5376:5;5356:19;:26::i;:::-;5343:39;;;-1:-1:-1;5235:154:75:o;9681:628:69:-;9878:4;8736:10;-1:-1:-1;;;;;8736:27:69;;;8732:59;;9922:1:::1;9898:6;:21;;;:25;:74;;;;-1:-1:-1::0;1450:7:69::1;16441:29:::0;;:34;;9927:45:::1;9894:409;;;9988:93;10045:10;10057:3;10062:6;10070:8;;10002:78;;;;;;;;;;;;:::i;:::-;;::::0;;-1:-1:-1;;10002:78:69;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;10002:78:69::1;-1:-1:-1::0;;;10002:78:69::1;::::0;;-1:-1:-1;;;;;9988:13:69;::::1;::::0;::::1;:93::i;:::-;;9894:409;;;10127:1;10102:6;:21;;;:26;;:78;;;;-1:-1:-1::0;1587:6:69::1;16441:29:::0;;:34;;10132:48:::1;10098:205;;;10196:96;10256:10;10268:3;10273:6;10281:8;;10210:81;;;;;;;;;;;;:::i;:::-;;::::0;;-1:-1:-1;;10210:81:69;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;10210:81:69::1;-1:-1:-1::0;;;10210:81:69::1;::::0;;-1:-1:-1;;;;;10196:13:69;::::1;::::0;::::1;:96::i;10098:205::-;9681:628:::0;;;;;;:::o;1460:151:78:-;1542:1;1558:6;;;;;;1554:50;;1566:38;-1:-1:-1;;;1566:36:78;:38::i;6410:4400:75:-;6607:21;;;;6656:16;;;;6700;;;;6526:18;;;;6607:21;;6726:32;6656:16;6700;6726:10;:32::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6888:14:75;:19;;6906:1;6888:19;6884:1188;;7002:50;7013:4;7019:9;7030:14;7046:5;7002:10;:50::i;:::-;-1:-1:-1;;;;;6927:125:75;6948:30;;;6927:125;;;;;7125:49;7136:4;7142:9;7153:14;7169:4;7125:10;:49::i;:::-;-1:-1:-1;;;;;7070:104:75;7091:30;;;7070:104;;;7071:18;;;7070:104;-1:-1:-1;7279:19:75;;;;;7275:508;;7385:18;;;;7322:27;;28220:1;28209:26;-1:-1:-1;;28300:27:75;;;-1:-1:-1;;28267:27:75;;;;28263:69;1317:6:82;28360:27:75;;;;28420:21;28443:1;28416:29;-1:-1:-1;;;;;28468:34:75;7322:82;;7463:19;-1:-1:-1;;;;;7430:52:75;:5;:30;;;-1:-1:-1;;;;;7430:52:75;;7426:159;;;7510:52;-1:-1:-1;;;7552:9:75;7510:41;:52::i;:::-;7643:19;-1:-1:-1;;;;;7610:52:75;:5;:30;;;-1:-1:-1;;;;;7610:52:75;;7606:159;;;7690:52;-1:-1:-1;;;7732:9:75;7690:41;:52::i;:::-;7300:483;7275:508;7805:18;;7801:120;;;7883:18;;;;7847:55;;:15;;;;7872:9;;7847:24;:55::i;:::-;7942:5;:18;;;7938:120;;;8020:18;;;;7984:55;;:15;;;;8009:9;;7984:24;:55::i;:::-;8105:28;8135;8187:46;8206:4;8212:9;8223;8187:18;:46::i;:::-;8305:12;;8341:11;;;;2503:4:76;2497:11;;2537:4;2528:14;;2521:28;;;;8286:14:75;2585::76;;;2578:33;;;2656:4;2647:14;;2640:33;;;2702:18;;;2790:4;2783;2774:14;;2764:31;-1:-1:-1;2879:14:76;;;2872:25;;;-1:-1:-1;2939:14:76;;;2932:25;;;3014:14;;;;1763:17;;;8286:14:75;;;1763:17:76;;;;;8104:129:75;;-1:-1:-1;8104:129:75;;-1:-1:-1;;8432:75:75;1763:17:76;8448:14:75;8104:129;;8432:15;:75::i;:::-;8371:136;;;;8608:58;8623:20;:9;:18;:20::i;:::-;8645;:9;:18;:20::i;:::-;-1:-1:-1;;;;;627:34:84;639:3;607:18;;;;604:58;;448:222;8608:58:75;8597:69;;8086:595;;;;;8776:1;8759:14;:18;;;8755:255;;;8801:18;;8797:91;;;29012:16;;;;;;;;:10;;;:16;;;;;29005:23;;;;;;;;;;;;;8843:26;8909:5;:18;;;8905:91;;;29012:16;;;;;;;;:10;;;:16;;;;;29005:23;;;;;;;;;;;;;8951:26;6769:2251;9034:14;:19;;9052:1;9034:19;9030:1774;;9084:10;;9069:12;;9146:13;9084:10;1748:11:89;1744:25;1741:1;1730:40;;1607:179;9146:13:75;-1:-1:-1;;;;;5144:41:86;;9108:75:75;;;;9208:9;9201:16;;:4;:16;;;9197:1597;;;9477:259;9513:182;:171;9568:38;9596:9;9568:27;:38::i;:::-;9608;9636:9;9608:27;:38::i;:::-;9648:14;9513:29;:171::i;:::-;:180;:182::i;:::-;639:3:84;607:18;;448:222;9477:259:75;9469:267;;9197:1597;;;9768:9;9761:16;;:4;:16;;;9757:1037;;;9805:346;9841:135;:99;9871:12;9885:38;9913:9;9885:27;:38::i;9841:135::-;9998;:99;10028:38;10056:9;10028:27;:38::i;:::-;10068:12;10082:14;9998:29;:99::i;9805:346::-;10210:14;;;;9797:354;;-1:-1:-1;10187:54:75;;-1:-1:-1;;;;;10210:14:75;10226;10187:22;:54::i;:::-;10170:14;;;:71;;-1:-1:-1;;;;;;10170:71:75;-1:-1:-1;;;;;10170:71:75;;;;;;;;;;9757:1037;;;10520:259;10556:1;10579:182;:171;10634:38;10662:9;10634:27;:38::i;:::-;10674;10702:9;10674:27;:38::i;:::-;10714:14;10579:29;:171::i;10520:259::-;10512:267;;9757:1037;9055:1749;;;9030:1774;6573:4237;;;6410:4400;;;;;:::o;672:396:84:-;731:12;834:3;896:11;;;830;;;;960;871:2;926:17;;;860;;;;988:11;1017:48;1032:15;960:11;1032:13;:15::i;:::-;1049;:4;:13;:15::i;1017:48::-;1010:55;672:396;-1:-1:-1;;;;;672:396:84:o;10406:1571:69:-;10662:24;;-1:-1:-1;;;;;10726:27:69;;:10;:27;10722:79;;-1:-1:-1;10763:5:69;;-1:-1:-1;1949:1:84;10755:46:69;;10722:79;10826:5;10812:19;;10869:1;10845:6;:21;;;:25;10841:1130;;;1516:7;16441:29;;:34;10886:518;;11005:311;11130:10;11142:3;11147:6;11155:5;11162:11;11175:8;;11059:151;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;11059:151:69;;;;;;;;;;;;;;-1:-1:-1;;;;;11059:151:69;-1:-1:-1;;;11059:151:69;;;2108:6;16441:29;;:34;;11236:58;-1:-1:-1;;;;;11005:28:69;;;:311;:28;:311::i;:::-;10954:380;;11366:23;:11;11380:9;11366:23;:::i;:::-;11352:37;;10886:518;10841:1130;;;1655:6;16441:29;;:34;11434:527;;11556:317;11684:10;11696:3;11701:6;11709:5;11716:11;11729:8;;11610:154;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;11610:154:69;;;;;;;;;;;;;;-1:-1:-1;;;;;11610:154:69;-1:-1:-1;;;11610:154:69;;;2190:6;16441:29;;:34;;11790:61;16345:137;11556:317;11505:386;;11923:23;:11;11937:9;11923:23;:::i;:::-;11909:37;;11434:527;10406:1571;;;;;;;;;;:::o;1357:223:65:-;1480:8;1477:1;1470:19;1529:5;1526:1;1515:20;1509:4;1502:34;1559:4;1556:1;1549:15;2915:418;3064:4;3058:11;3094:8;3089:3;3082:21;-1:-1:-1;;;;;3143:6:65;3139:55;3132:4;3127:3;3123:14;3116:79;-1:-1:-1;;;;;3235:6:65;3231:55;3224:4;3219:3;3215:14;3208:79;3312:4;3307:3;3300:17;5407:1119:69;5483:4;1713:6;16441:29;;:34;;;5625:91;;-1:-1:-1;1959:6:69;16441:29;;:34;;5666:50;5621:109;;;-1:-1:-1;5725:5:69;5718:12;;5621:109;1769:6;16441:29;;:34;;;5744:89;;-1:-1:-1;2029:6:69;16441:29;;:34;;5784:49;5740:107;;;-1:-1:-1;5842:5:69;5835:12;;5740:107;1516:7;16441:29;;:34;;;5861:107;;-1:-1:-1;2108:6:69;16441:29;;:34;;5910:58;5857:158;;;-1:-1:-1;5999:5:69;5992:12;;5857:158;1655:6;16441:29;;:34;;;6041:129;;-1:-1:-1;2190:6:69;16441:29;;:34;;6109:61;6024:169;;;-1:-1:-1;6188:5:69;6181:12;;6024:169;-1:-1:-1;;;;;6377:27:69;;;:142;;1247:13;6454:38;;:42;;;:64;;-1:-1:-1;552:8:70;6500:16:69;;;1379:24:70;6377:142:69;;6500:18;6377:142;;;-1:-1:-1;6420:16:69;;552:8:70;1379:24;6419:19:69;;6370:149;-1:-1:-1;5407:1119:69:o;1009:257:65:-;1133:8;1130:1;1123:19;-1:-1:-1;;;;;1172:4:65;1168:53;1162:4;1155:67;1245:4;1242:1;1235:15;2333:220:70;2394:6;552:8;2471:17;;;1379:24;2467:33;;-1:-1:-1;2499:1:70;;2333:220;-1:-1:-1;2333:220:70:o;2467:33::-;2510:15;:4;:13;;;:15::i;8890:283:69:-;8991:4;8736:10;-1:-1:-1;;;;;8736:27:69;;;8732:59;;1319:7:::1;16441:29:::0;;:34;9007:160:::1;;9069:87;9124:10;9136:3;9141:12;9083:72;;;;;;;;;;:::i;:::-;;::::0;;-1:-1:-1;;9083:72:69;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;9083:72:69::1;-1:-1:-1::0;;;9083:72:69::1;::::0;;-1:-1:-1;;;;;9069:13:69;::::1;::::0;::::1;:87::i;4549:434:75:-:0;4669:10;;4643;;-1:-1:-1;;;;;5144:41:86;4669:30:75;4665:80;;4701:44;-1:-1:-1;;;4701:42:75;:44::i;:::-;4763:41;4791:12;4763:27;:41::i;:::-;4756:48;-1:-1:-1;4894:82:75;4970:5;4894:66;-1:-1:-1;;;;;2429:33:89;;4756:48:75;4894:60;:66::i;:::-;:75;;:82::i;:::-;4881:95;;;-1:-1:-1;4549:434:75;;;-1:-1:-1;4549:434:75:o;9265:318:69:-;9393:4;8736:10;-1:-1:-1;;;;;8736:27:69;;;8732:59;;1382:7:::1;16441:29:::0;;:34;9413:164:::1;;9474:92;9528:10;9540:3;9545:12;9559:4;9488:77;;;;;;;;;;;:::i;:::-;;::::0;;-1:-1:-1;;9488:77:69;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;9488:77:69::1;-1:-1:-1::0;;;9488:77:69::1;::::0;;-1:-1:-1;;;;;9474:13:69;::::1;::::0;::::1;:92::i;4989:178:75:-:0;5072:27;:4;:25;:27::i;:::-;5122:10;;-1:-1:-1;;;;2945:57:89;-1:-1:-1;;;3028:19:89;3024:57;;;;2921:178;5122:38:75;2747:368:89;722:123:64;827:1;-1:-1:-1;;;;;;;;;;;805:24:64;722:123::o;4351:276:86:-;4416:7;-1:-1:-1;;;;;4439:22:86;;4435:186;;-1:-1:-1;4486:21:86;;4351:276;-1:-1:-1;4351:276:86:o;4435:186::-;4545:65;;-1:-1:-1;;;4545:65:86;;4604:4;4545:65;;;12330:51:132;-1:-1:-1;;;;;4545:50:86;;;;;12303:18:132;;4545:65:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;851:265:64:-;-1:-1:-1;;;;;1002:8:64;998:57;-1:-1:-1;;;;;;;;;;;976:80:64;1094:5;1076:16;1069:31;851:265;;:::o;12064:1980:69:-;12315:22;;;;12215:19;;-1:-1:-1;;;;;12351:27:69;;:10;:27;12347:104;;830:1:85;;-1:-1:-1;12380:71:69;;12347:104;1713:6;16441:29;;:34;12462:1576;;12518:19;12540:86;12549:4;12590:10;12602:3;12607:6;12615:8;;12555:70;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;12555:70:69;;;;;;;;;;;;;;-1:-1:-1;;;;;12555:70:69;-1:-1:-1;;;12555:70:69;;;12540:8;:86::i;:::-;12518:108;;12744:6;:13;12761:2;12744:19;12740:66;;12765:41;-1:-1:-1;;;12765:39:69;:41::i;:::-;13080:7;;;;:20;;552:8:70;1379:24;13076:61:69;;894:4:74;882:17;;876:24;13104:33:69;;13076:61;1959:6;16441:29;;:34;13223:805;;1175:4:74;1163:17;;1157:24;13297:60:69;;13466:25;13494:30;:10;2107:3:84;2103:22;;1958:183;13494:30:69;13466:58;;13686:18;:23;;13708:1;13686:23;13682:332;;13733:15;13751:16;;13789:34;;;;;13751:12;13789:34;:::i;:::-;;;13849:10;:48;;13896:1;13881:12;:16;13849:48;;;13877:1;13862:12;:16;13849:48;13845:151;;;13925:48;-1:-1:-1;;;13925:46:69;:48::i;:::-;13711:303;13682:332;13279:749;13223:805;12504:1534;12462:1576;12064:1980;;;;;;;;;:::o;11137:792:52:-;11277:12;;;;;11413:17;:4;11423:6;11413:9;:17::i;:::-;11305:125;;;;;;;;11508:1;11489:16;:20;11485:78;;;-1:-1:-1;;;;;2977:29:53;;;;;;:19;:29;;;;;:39;;;;;;11511:52:52;11712:10;11696:2;11678:221;11736:15;:5;2107:3:84;2103:22;;1958:183;11736:15:52;11765;:5;2303:2:84;2292:28;;2147:189;11765:15:52;11794:19;;11827:16;;;;;11857:11;;;;;11678:221;;24794:2:132;24783:22;;;24765:41;;24842:22;;;;24822:18;;;24815:50;-1:-1:-1;;;;;24901:32:132;;;24881:18;;;24874:60;-1:-1:-1;;;;;24970:47:132;24965:2;24950:18;;24943:75;25066:1;25055:21;;;;25049:3;25034:19;;25027:50;25126:8;25114:21;;24921:3;25093:19;;25086:50;24752:3;24737:19;11678:221:52;;;;;;;-1:-1:-1;11917:5:52;;11137:792;-1:-1:-1;;;;;;;11137:792:52:o;14130:1351:69:-;14380:12;;-1:-1:-1;;;;;14422:27:69;;:10;:27;14418:83;;-1:-1:-1;14459:9:69;;-1:-1:-1;1949:1:84;14451:50:69;;14418:83;14512:25;14540:40;:20;2107:3:84;2103:22;;1958:183;14540:40:69;14512:68;;14590:27;14620:42;:20;2303:2:84;2292:28;;2147:189;14620:42:69;14590:72;-1:-1:-1;1769:6:69;16441:29;;:34;14673:308;;14752:218;:207;14832:10;14844:3;14849:6;14857:9;14868:8;;14798:80;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;14798:80:69;;;;;;;;;;;;;;-1:-1:-1;;;;;14798:80:69;-1:-1:-1;;;14798:80:69;;;2029:6;16441:29;;:34;;-1:-1:-1;;;;;14752:28:69;;;:207;:28;:207::i;:218::-;14728:242;;;;:::i;:::-;;;14673:308;14991:22;15027:20;:25;;15051:1;15027:25;;:52;;;;15056:18;:23;;15078:1;15056:23;;15027:52;15023:413;;;15138:17;;15108:22;;;;15138:17;-1:-1:-1;15108:47:69;;;;15107:199;;-1:-1:-1;;;;;627:34:84;;639:3;607:18;;;604:58;15107:199:69;;;-1:-1:-1;;;;;627:34:84;;639:3;607:18;;;604:58;15175:56:69;15095:211;;15404:21;:9;15416;15404:21;:::i;:::-;15392:33;;15023:413;15453:9;;15464;;-1:-1:-1;14130:1351:69;;-1:-1:-1;;;;;;;;;14130:1351:69:o;530:425:48:-;627:10;-1:-1:-1;;;;;651:14:48;;;;;;;:43;;-1:-1:-1;;;;;;670:16:48;;;;;;;:10;:16;;;;;;;;:24;;;;;;;;;;;;669:25;651:43;647:269;;;-1:-1:-1;;;;;736:15:48;;;710:23;736:15;;;:9;:15;;;;;;;;:23;;;;;;;;;;;:27;;;;;;;-1:-1:-1;;781:36:48;;777:129;;867:24;885:6;867:15;:24;:::i;:::-;-1:-1:-1;;;;;837:15:48;;;;;;;:9;:15;;;;;;;;:23;;;;;;;;;;;:27;;;;;;:54;777:129;696:220;647:269;925:23;931:4;937:2;941:6;925:5;:23::i;1201:402:63:-;-1:-1:-1;;;;;596:55:63;;;1304:15;586:66;;;676:57;;;672:2;665:69;772:2;759:16;;1459:15;;;1304;1500:16;;;;;1459:15;1500:16;:::i;:::-;1493:23;;1582:4;1572:8;1565:22;1551:46;1201:402;;;;;;:::o;1231:226:73:-;-1:-1:-1;;;;;;;;;;;1323:31:73;1387:1;1380:5;1376:13;1367:22;;1435:5;-1:-1:-1;;;;;;;;;;;1402:39:73;;1231:226::o;723:::-;-1:-1:-1;;;;;;;;;;;815:31:73;879:1;872:5;868:13;859:22;;927:5;-1:-1:-1;;;;;;;;;;;894:39:73;;723:226::o;3508:1663:65:-;3953:4;3947:11;-1:-1:-1;;;4094:33:65;;;-1:-1:-1;;;;;4163:66:65;;4156:4;4147:14;;4140:90;-1:-1:-1;;;;;;4299:98:65;;4276:4;4267:14;;4243:168;4483:4;4476;4467:14;;4460:28;3919:2;3909;3891:16;3887:25;3883:34;;;3879:43;4569:4;4565:26;;4558:4;4549:14;;4542:50;4662:16;4655:4;4646:14;;4639:40;3710:21;;4755:16;-1:-1:-1;4745:4:65;4736:14;;4721:51;4869:4;4850:15;4844:4;4840:26;4835:3;4831:36;4824:50;-1:-1:-1;;;;;;5003:17:65;4999:90;4964:15;4958:4;4954:26;4949:3;4945:36;4921:182;5138:15;5132:4;5128:26;5123:3;5116:39;6702:1276:69;6770:19;6801:12;6927:1;6924;6917:4;6911:11;6904:4;6898;6894:15;6891:1;6885:4;6878:5;6873:56;6862:67;;7034:7;7029:102;;7043:88;7086:4;7093:12;7100:4;7093:12;:::i;:::-;-1:-1:-1;;;7043:34:69;:88::i;:::-;7328:4;7322:11;7312:21;;7496:4;7492:9;7485:4;7467:16;7463:27;7459:43;7451:6;7447:56;7441:4;7434:70;7570:16;7562:6;7555:32;7679:16;7676:1;7669:4;7661:6;7657:17;7642:54;7852:2;7836:6;:13;:18;:68;;;-1:-1:-1;632:4:74;620:17;;614:24;-1:-1:-1;;;;;;7858:46:69;:22;:6;632:4:74;620:17;614:24;;394:260;7858:22:69;-1:-1:-1;;;;;;7858:46:69;;;7836:68;7832:140;;;7920:41;-1:-1:-1;;;7920:39:69;:41::i;:::-;6791:1187;6702:1276;;;;:::o;3121:280:89:-;3343:13;3339:45;-1:-1:-1;;;3339:45:89;-1:-1:-1;;;;3286:51:89;;;;3283:102;;3121:280::o;4182:361:75:-;4276:9;4263:22;;:9;:22;;;4259:85;;4287:57;-1:-1:-1;;;4323:9:75;4334;4287:35;:57::i;:::-;-1:-1:-1;;4358:29:75;;;;;4354:86;;;4389:51;-1:-1:-1;;;4430:9:75;4389:40;:51::i;:::-;1317:6:82;4454:29:75;;;;;4450:86;;;4485:51;-1:-1:-1;;;4526:9:75;4485:40;:51::i;25241:1930::-;25443:16;;;;25362:12;25443:16;;;:10;;;:16;;;;;25501:19;;25362:12;;25443:16;-1:-1:-1;;;;;25501:19:75;;;-1:-1:-1;;;25558:17:75;;;;25608:60;25501:19;25653:14;25608:22;:60::i;:::-;-1:-1:-1;;;;;25690:24:75;;;;25720:25;;;;;25689:57;;;;;;-1:-1:-1;25586:82:75;;-1:-1:-1;25744:1:75;25761:25;25757:357;;25926:10;;1748:11:89;1744:25;1741:1;1730:40;25918:25:75;;:4;:25;;;25914:190;;25992:25;;;;;25963:26;;;:54;26064:25;;;;;26035:26;;;:54;25914:190;26322:19;26344:5;:81;;26390:35;26411:14;26390:18;:35;:::i;:::-;26344:81;;;26352:35;26373:14;26352:18;:35;:::i;:::-;26322:103;;27110:12;27105:3;27101:22;-1:-1:-1;;;;;26902:19:75;26898:60;26780:361;26678:9;26654:501;26460:705;;;;25241:1930;;;;;;;:::o;2108:1410:81:-;2567:1;2556:19;;;;2603:26;2691:23;;;2688:307;;;2750:4;2744:11;2784:10;2779:3;2772:23;2879:4;2872;2867:3;2863:14;2856:28;2924:11;2917:4;2912:3;2908:14;2901:35;2976:4;2969;2964:3;2960:14;2953:28;2688:307;3027:11;3021:4;3016:23;3008:31;;3172:4;3169:1;3165:12;3162:1;3155:23;3204:9;3198:4;3191:23;3338:4;3335:1;3325:18;3498:1;3491:4;3485;3481:15;3477:23;3470:4;3464:11;3460:41;3454:4;3447:55;;2108:1410;;;:::o;23300:1203:75:-;23528:21;;;;23429:28;23528:21;;;:10;;;:21;;;;;;23584;;;;;;;;23635:10;;23429:28;;;;23528:21;;23584;;1748:11:89;1744:25;;;;1730:40;;;23691:23:75;;23687:800;;;23787:5;:27;;;23757:5;:27;;;:57;23734:80;;23885:5;:27;;;23855:5;:27;;;:57;23832:80;;23687:800;;;23952:9;23937:24;;:11;:24;;;23933:554;;24034:5;:27;;;24004:5;:27;;;:57;23981:80;;24132:5;:27;;;24102:5;:27;;;:57;24079:80;;23933:554;;;24299:5;:27;;;24269:5;:27;;;24241:4;:25;;;:55;:85;24198:128;;24445:5;:27;;;24415:5;:27;;;24387:4;:25;;;:55;:85;24344:128;;23933:554;23493:1010;;;23300:1203;;;;;;:::o;3702:1108:76:-;3945:14;;3877:17;;;;-1:-1:-1;;;;;3945:14:76;3974:19;;;;;;3970:270;;4069:9;-1:-1:-1;;;;;4069:14:76;4082:1;4069:14;4065:67;;4085:47;-1:-1:-1;;;4085:45:76;:47::i;:::-;3970:270;;;4180:49;4203:9;4214:14;4180:22;:49::i;:::-;4163:66;;-1:-1:-1;;;;;;4163:66:76;-1:-1:-1;;;;;4163:66:76;;;;;;;3970:270;4395:100;4434:4;:29;;;4411:20;:52;4465:9;-1:-1:-1;;;;;4395:100:76;-1:-1:-1;;;4395:15:76;:100::i;:::-;4367:128;;4537:100;4576:4;:29;;;4553:20;:52;4607:9;-1:-1:-1;;;;;4537:100:76;-1:-1:-1;;;4537:15:76;:100::i;:::-;4689:29;;;:52;;;;-1:-1:-1;;4751:29:76;;;;:52;3702:1108;;;-1:-1:-1;3702:1108:76:o;3149:4018:82:-;3359:1;3348:19;3212:20;3458:3;3454:14;;;3726:15;;;3716:26;1317:6;3774:35;;3770:78;;;3811:37;-1:-1:-1;;;3843:4:82;3811:31;:37::i;:::-;4456:52;4523:3;4510:17;;4452:76;-1:-1:-1;;;4435:94:82;4570:3;4560:13;;:18;4556:83;;4597:34;4589:42;4636:3;4588:51;4556:83;4667:3;4657:13;;:18;4653:83;;4694:34;4686:42;4733:3;4685:51;4653:83;4764:3;4754:13;;:18;4750:83;;4791:34;4783:42;4830:3;4782:51;4750:83;4861:4;4851:14;;:19;4847:84;;4889:34;4881:42;4928:3;4880:51;4847:84;4959:4;4949:14;;:19;4945:84;;4987:34;4979:42;5026:3;4978:51;4945:84;5057:4;5047:14;;:19;5043:84;;5085:34;5077:42;5124:3;5076:51;5043:84;5155:4;5145:14;;:19;5141:84;;5183:34;5175:42;5222:3;5174:51;5141:84;5253:5;5243:15;;:20;5239:85;;5282:34;5274:42;5321:3;5273:51;5239:85;5352:5;5342:15;;:20;5338:85;;5381:34;5373:42;5420:3;5372:51;5338:85;5451:5;5441:15;;:20;5437:85;;5480:34;5472:42;5519:3;5471:51;5437:85;5550:5;5540:15;;:20;5536:85;;5579:34;5571:42;5618:3;5570:51;5536:85;5649:6;5639:16;;:21;5635:86;;5679:34;5671:42;5718:3;5670:51;5635:86;5749:6;5739:16;;:21;5735:86;;5779:34;5771:42;5818:3;5770:51;5735:86;5849:6;5839:16;;:21;5835:86;;5879:34;5871:42;5918:3;5870:51;5835:86;5949:6;5939:16;;:21;5935:86;;5979:34;5971:42;6018:3;5970:51;5935:86;6049:7;6039:17;;:22;6035:86;;6080:33;6072:41;6118:3;6071:50;6035:86;6149:7;6139:17;;:22;6135:85;;6180:32;6172:40;6217:3;6171:49;6135:85;6248:7;6238:17;;:22;6234:83;;6279:30;6271:38;6314:3;6270:47;6234:83;6345:7;6335:17;;:22;6331:78;;6376:25;6368:33;6406:3;6367:42;6331:78;6548:1;6542:4;6538:12;6535:47;;;-1:-1:-1;;6562:18:82;6535:47;7117:18;7106:30;7125:2;7098:39;;3149:4018;-1:-1:-1;;;3149:4018:82:o;12876:424:79:-;13012:6;13077:1;13065:9;:13;;;:218;;13201:82;:71;13217:13;13232;13255:9;13267:4;13201:15;:71::i;:::-;:80;:82::i;:::-;13200:83;;13065:218;;;13097:84;:73;13113:13;13128;13152:9;13151:10;;13164:5;13097:15;:73::i;13649:424::-;13785:6;13850:1;13838:9;:13;;;:218;;13974:82;:71;13990:13;14005;14028:9;14040:4;13974:15;:71::i;13838:218::-;13870:84;:73;13886:13;13901;13925:9;13924:10;;13937:5;13870:15;:73::i;369:370:71:-;-1:-1:-1;;;;;500:42:71;;555:2;544:17;;;496:66;582:3;578:11;;;575:148;;;663:10;660:1;653:21;704:4;698;691:18;8118:485:69;8219:6;8237:19;8259:20;8268:4;8274;8259:8;:20::i;:::-;8237:42;;8372:11;8367:26;;8392:1;8385:8;;;;;8367:26;8492:6;:13;8509:2;8492:19;8488:66;;8513:41;-1:-1:-1;;;8513:39:69;:41::i;:::-;1175:4:74;1163:17;1157:24;;8564:32:69;-1:-1:-1;;;;8118:485:69:o;1070:396:84:-;1129:12;1232:3;1294:11;;;1228;;;;1358;1269:2;1324:17;;;1258;;;;1386:11;1415:48;1430:15;1358:11;1430:13;:15::i;7627:4752:82:-;7700:10;2282:66;-1:-1:-1;;8183:29:82;;-1:-1:-1;;;;;8182:79:82;;8178:168;;;8281:50;-1:-1:-1;;;8318:12:82;8281:36;:50::i;:::-;-1:-1:-1;;;;;8401:2:82;8376:27;;;;;8360:13;8463:29;8376:27;8463:26;:29::i;:::-;8449:43;;;;8518:3;8511;:10;8507:83;;8543:3;8537;:9;8527:5;:20;;8523:24;;8507:83;;;8586:3;8580;:9;8570:5;:20;;8566:24;;8507:83;8717:9;;;8712:3;8708:19;;;8753:11;;;;8833:9;;;;8926;;8917:19;;;8962:11;;;9042:9;9135;;9126:19;;;9171:11;;;9251:9;9344;;9335:19;;;9380:11;;;9460:9;9553;;9544:19;;;9589:11;;;9669:9;9762;;9753:19;;;9798:11;;;9878:9;9971;;9962:19;;;10007:11;;;10087:9;10180;;10171:19;;;10216:11;;;10296:9;10389;;10380:19;;;10425:11;;;10505:9;10598;;10589:19;;;10634:11;;;10714:9;10807;;10798:19;;;10843:11;;;10923:9;11016;;11007:19;;;11052:11;;;11132:9;11225;;11216:19;;;11261:11;;;;11341:9;;;;11434;;11425:19;;;;;8717:9;-1:-1:-1;;8621:17:82;;8643:2;8620:25;8800:10;;;;;;;8790:21;9009:10;;;;;;;8999:21;;;;9218:10;;;;;;;9208:21;;;;9427:10;;;;;;;9417:21;;;;9636:10;;;;;;;9626:21;;;;9845:10;;;;;;;9835:21;;;;10054:10;;;;;;;10044:21;10263:10;;;;;;;10253:21;10472:10;;;;;;;10462:21;10681:10;;;;;;;10671:21;10890:10;;;;;;;10880:21;11099:10;;;;;;;11089:21;11308:10;;;;;;;11298:21;11517:10;;;;;;;11507:21;11587:24;11579:32;;-1:-1:-1;;11788:53:82;;8635:3;11787:62;;;;12201:39;12185:55;;12184:64;;12271:17;;;;;;;;;:91;;12331:12;-1:-1:-1;;;;;12301:42:82;:26;12320:6;12301:18;:26::i;:::-;-1:-1:-1;;;;;12301:42:82;;;:61;;12355:7;12271:91;;12301:61;12346:6;12271:91;;;12291:7;12271:91;12264:98;7627:4752;-1:-1:-1;;;;;;;;;7627:4752:82:o;2485:256:89:-;2686:11;2682:42;-1:-1:-1;;;2682:42:89;-1:-1:-1;;;;2631:49:89;;;;2628:97;;2485:256::o;12231:9620:75:-;-1:-1:-1;;;;;;;;12325:22:75;-1:-1:-1;;;;;;;;;;;;;;;12325:22:75;;;;12450:10;;12488:17;;;;12431:16;12488:17;12550:102;;863:10:77;;;;;;12550:102:75;;;750:5:77;1959:19:89;1955:33;;;743:12:77;12563:43:75;12814:22;;-1:-1:-1;;;;;5144:41:86;;13015:47:75;;12516:136;;;;;;-1:-1:-1;12780:31:75;1748:11:89;1744:25;;;1741:1;1730:40;13114:31:75;;:11;;;:31;13221:14;;;;-1:-1:-1;;;;;13221:14:75;13202:16;;;:33;13451:20;;;;-1:-1:-1;;819:8:70;2836:24;13451:141:75;;2160:13:89;2156:27;;;2142:12;2138:46;13451:141:75;;;13503:52;:6;:20;;;:50;;;:52::i;:::-;13436:156;-1:-1:-1;13617:16:75;;:70;;2076:16:77;1921:5;1911:16;;1960:8;1949:20;;1999:16;;;2061:32;;;;2043:16;;2039:55;13617:70:75;;;13636:5;13617:70;13607:80;;13422:276;563:3:80;13847:7:75;:32;;;13843:200;;13929:22;;13954:1;-1:-1:-1;13925:108:75;;;13975:43;-1:-1:-1;;;13975:41:75;:43::i;:::-;14251:22;;;:27;14247:92;;1949:1:84;14320::75;14280:59;;;;;;;;;;;14247:92;14354:10;14350:1021;;;14384:24;;;;-1:-1:-1;;;;;5144:41:86;;;14384:53:75;;;14380:190;;14457:98;-1:-1:-1;;;;;5144:41:86;;14503:25:75;14530:24;;;;-1:-1:-1;;;14457:34:75;:98;:45;:98::i;:::-;1862:10:82;-1:-1:-1;;;;;14818:51:75;:6;:24;;;-1:-1:-1;;;;;14818:51:75;;14814:157;;14931:24;;;;14889:67;;-1:-1:-1;;;14889:30:75;:41;:67::i;:::-;14350:1021;;;15005:24;;;;-1:-1:-1;;;;;5144:41:86;;;15005:53:75;;;15001:190;;15078:98;-1:-1:-1;;;;;5144:41:86;;15124:25:75;5069:123:86;15078:98:75;2042:49:82;-1:-1:-1;;;;;15208:51:75;:6;:24;;;-1:-1:-1;;;;;15208:51:75;;15204:157;;15321:24;;;;15279:67;;-1:-1:-1;;;15279:30:75;:41;:67::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15446:10:75;:66;;15487:4;:25;;;15446:66;;;15459:4;:25;;;15446:66;15419:24;;;:93;15639:5244;15648:29;;;:80;;;15704:6;:24;;;-1:-1:-1;;;;;15681:47:75;:6;:19;;;-1:-1:-1;;;;;15681:47:75;;15648:80;15639:5244;;15770:19;;-1:-1:-1;;;;;15745:44:75;;;15905:11;;;;;15918:18;;;;15856:93;;:15;;;;15938:10;15856:48;:93::i;:::-;15804:145;;15820:16;;;15804:145;;;15805:13;;;15804:145;;;-1:-1:-1;;;16077:106:75;;-1:-1:-1;;16135:13:75;;;:33;16077:106;1317:6:82;16200:34:75;;:4;:13;;;:34;;;16196:106;;1317:6:82;16254:13:75;;;:33;16196:106;16387:42;16415:4;:13;;;16387:27;:42::i;:::-;-1:-1:-1;;;;;16363:66:75;;;:21;;;;:66;;;16676:19;;16776:24;;;;16634:282;;16676:19;;1921:66:80;;2113:40;;;-1:-1:-1;;;2080:3:80;2064:20;;2019:66;2211:25;;;;2188:49;16819:6:75;:16;;;16853:24;16895:7;16634:24;:282::i;:::-;16616:14;;;16563:353;16600:14;;;16563:353;16585:13;;;16563:353;-1:-1:-1;;;;;16563:353:75;;;16965:22;;16564:19;-1:-1:-1;16961:568:75;;;17071:25;:4;:14;;;:23;:25::i;:::-;17043:53;;;;17152:43;17169:4;:14;;;17153:4;:13;;;:30;;;;:::i;17152:43::-;17132:63;;;;:::i;:::-;;;16961:568;;;17390:43;17407:4;:14;;;17391:4;:13;;;:30;17390:41;:43::i;:::-;17362:71;;;;17489:25;:4;:14;;;:23;:25::i;:::-;17469:45;;;;:::i;:::-;;;16961:568;17664:15;;17660:951;;18143:13;18171:11;18160:7;:22;;;18159:242;;633:9:77;18352:11:75;18334:4;:14;;;18318:4;:13;;;:30;18317:46;:84;;;;;:::i;:::-;;18159:242;;;18210:4;:14;;;18159:242;18508:14;;;:23;;;;;;;18553:25;;;;;-1:-1:-1;17660:951:75;18670:16;;;;-1:-1:-1;;;;;18670:20:75;;18666:382;;18938:77;18962:4;:14;;;-1:-1:-1;;;18998:6:75;:16;;;-1:-1:-1;;;;;18938:77:75;1123:9:83;;1119:27;;956:206;18938:77:75;18886:24;;;:129;;;;;;;18666:382;19511:4;:21;;;-1:-1:-1;;;;;19488:44:75;:6;:19;;;-1:-1:-1;;;;;19488:44:75;;19484:1389;;19627:4;:16;;;19623:835;;;19668:28;19698;19730:10;:170;;19848:4;:25;;;19875:4;:24;;;19730:170;;;19768:4;:24;;;19794:4;:25;;;19730:170;19667:233;;;;19922:19;19968:79;19983:4;19989;:13;;;20004:20;20026;29769:16;;;;29686:19;29769:16;;;:10;;;;:16;;;;;;29851:26;;;;;29828:49;;;29799:78;;;29943:26;;;;;29920:49;;;29891:78;;;29998:17;-1:-1:-1;;;29998:17:75;;;;;29541:491;19968:79;19922:125;;20281:10;20277:44;;;20308:13;;20277:44;20385:54;20408:6;:16;;;20426:12;20385:22;:54::i;:::-;-1:-1:-1;;;;;20366:73:75;:16;;;:73;-1:-1:-1;;;19623:835:75;20522:10;:46;;20555:4;:13;;;20522:46;;;20551:1;20535:4;:13;;;:17;20522:46;20508:60;;:11;;;:60;15639:5244;;19484:1389;20634:22;;20611:19;;-1:-1:-1;;;;;20611:45:75;;;;;;20607:266;;20838:19;;20810:48;;:27;:48::i;20607:266::-;15639:5244;;;20954:19;;20925:11;;;;20906:68;;20954:19;20906:31;;:10;;:18;:31::i;:::-;-1:-1:-1;;;;;;2395:32:89;-1:-1:-1;;;;;2429:33:89;;;2392:71;;2231:248;20906:68:75;20893:81;;21049:16;;;;21031:14;;;;-1:-1:-1;;;;;21031:14:75;;;:34;;;21027:73;;21084:16;;;;21067:14;;;:33;;-1:-1:-1;;;;;;21067:33:75;-1:-1:-1;;;;;21067:33:75;;;;;;;;;21027:73;21152:10;21147:177;;21206:24;;;;21178:25;;;:52;21147:177;;;21289:24;;;;21261:25;;;:52;21147:177;21420:22;;21445:1;-1:-1:-1;21405:42:75;;;;21401:434;;21479:145;21515:27;:16;:25;:27::i;:::-;21544:62;21570:24;21545:6;:22;;;:49;21544:60;:62::i;21479:145::-;21467:157;;21401:434;;;21675:145;21711:62;21737:24;21712:6;:22;;;:49;21711:60;:62::i;:::-;21775:27;:16;:25;:27::i;21675:145::-;21663:157;;21401:434;12421:9430;;;;;;12231:9620;;;;;;;;:::o;3302:192:47:-;-1:-1:-1;;;;;3388:17:47;;;;;;:9;:17;;;;;;;;:21;;;;;;;;:31;;3413:6;;3388:17;:31;;3413:6;;3388:31;:::i;:::-;;;;-1:-1:-1;;3435:52:47;;;3444:10;16104:51:132;;16186:2;16171:18;;16164:34;;;3476:2:47;;3472:1;;-1:-1:-1;;;;;3435:52:47;;;-1:-1:-1;;;;;;;;;;;3435:52:47;16077:18:132;3435:52:47;15930:274:132;2003:346:65;2148:4;2142:11;2178:8;2173:3;2166:21;2237:6;2234:1;2223:21;2216:4;2211:3;2207:14;2200:45;2295:6;2292:1;2281:21;2274:4;2269:3;2265:14;2258:45;2328:4;2323:3;2316:17;741:4141:68;823:14;1212:5;;;823:14;-1:-1:-1;;1216:1:68;1212;1400:20;1473:5;1469:2;1466:13;1458:5;1454:2;1450:14;1446:34;1437:43;;;1633:5;1619:11;:19;1611:28;;;;;;1720:5;1729:1;1720:10;1716:177;;-1:-1:-1;1807:23:68;;;;-1:-1:-1;1865:13:68;;1716:177;2193:17;2293:11;2290:1;2287;2280:25;2701:12;2717:15;;;2716:31;;2869:22;;;;;3776:1;3757;:15;;3756:21;;4019:17;;;4015:21;;4008:28;4081:17;;;4077:21;;4070:28;4144:17;;;4140:21;;4133:28;4207:17;;;4203:21;;4196:28;4270:17;;;4266:21;;4259:28;4334:17;;;4330:21;;;4323:28;3313:12;;;;3309:23;;;3334:1;3305:31;2454:20;;;2443:32;;;3372:12;;;;2501:21;;;;3029:16;;;;3363:21;;;;4827:11;;;;;-1:-1:-1;;741:4141:68;;;;;:::o;9398:1050:79:-;9549:7;9616:13;-1:-1:-1;;;;;9600:29:79;:13;-1:-1:-1;;;;;9600:29:79;;9596:98;;;9665:13;;9680;9596:98;-1:-1:-1;;;;;9840:13:79;9836:62;9826:205;;9932:10;9929:1;9922:21;10008:4;10002;9995:18;9826:205;-1:-1:-1;;;;;;;295:2:67;10080:45:79;;;;-1:-1:-1;;;;;10160:29:79;;;10139:50;10211:7;:220;;10418:13;-1:-1:-1;;;;;10361:70:79;:54;10377:10;10389;10401:13;-1:-1:-1;;;;;10361:54:79;:15;:54::i;:::-;:70;;;;;:::i;:::-;;10211:220;;;10237:105;10262:64;10288:10;10300;10312:13;-1:-1:-1;;;;;10262:64:79;:25;:64::i;:::-;10328:13;-1:-1:-1;;;;;10237:105:79;606:9:83;;;620;;617:16;;602:32;;469:181;10237:105:79;10204:227;9398:1050;-1:-1:-1;;;;;;;9398:1050:79:o;1776:151:78:-;1859:1;1828:8;1875:5;;1871:49;;;1882:38;-1:-1:-1;;;1882:36:78;:38::i;11589:938:79:-;11740:15;-1:-1:-1;;;;;10718:50:79;;;10666;;;10662:107;10849:3;10845:14;;;11099:15;;;11089:26;-1:-1:-1;;;;;;;;11907:18:79;;12323:51;11907:18;11089:26;335:27:67;12323:15:79;:51::i;:::-;12313:61;;12502:7;12498:1;12484:11;12473:9;12461:10;12454:42;12451:49;12447:63;12438:7;12434:77;12423:88;;12409:112;;;11589:938;;;;;;:::o;653:664:62:-;715:7;746:1;742;:5;734:14;;;;;;-1:-1:-1;1233:66:62;1158:4;1179:34;-1:-1:-1;;;;;810:41:62;-1:-1:-1;807:1:62;803:49;906:9;;;-1:-1:-1;;;;;883:33:62;880:1;876:41;870:48;964:9;;;952:10;949:25;946:1;942:33;936:40;1018:9;;;1010:6;1007:21;1004:1;1000:29;994:36;1070:9;;;1064:4;1061:19;1058:1;1054:27;1048:34;1168:9;;;1164:50;1154:61;1149:151;1143:158;;653:664::o;3434:159:70:-;975:8;3147:27;;3572:14;3147:27;3572:12;:14::i;4256:2007:81:-;4440:10;;904:1;940:26;;;893:19;;;;1187:23;;;-1:-1:-1;;1034:23:81;;;1009:223;4565:1682;;;;1789:1;1778:19;;;1775:1;1771:27;4839:13;;;;4593;4839;;;;;;;;;;;-1:-1:-1;;1831:4:81;1821:15;;;4770:33;;;;4748:56;;;;4839:20;;;5014:11;;;;-1:-1:-1;1821:15:81;;4748:56;5014:11;5164:194;;5347:11;5335:6;5328:14;;5309:10;:34;5308:50;5164:194;;;5274:11;5234:34;5261:6;5234:26;:34::i;:::-;5225:6;:43;5218:51;;5199:10;:71;5198:87;5164:194;5157:201;;4574:799;;;;4565:1682;;;5539:12;;;;1789:1;1778:19;;;1775:1;1771:27;5702:13;;;5499;5702;;;;;;;;;;;-1:-1:-1;;1831:4:81;1821:15;;5650:11;;;5649:17;5647:20;5702;;;5869:11;;;;-1:-1:-1;5539:12:81;;1771:27;;5869:11;6019:213;;6221:11;6209:6;6191:15;:24;6184:32;;6165:10;:52;6164:68;6019:213;;;6130:11;6118:6;6080:35;6108:6;6080:27;:35::i;:::-;:44;6073:52;;6054:10;:72;6053:88;6019:213;6012:220;;5379:868;;;;4565:1682;4480:1777;4256:2007;;;;;;;:::o;3514:3451:80:-;3724:24;;;;3840:26;;;-1:-1:-1;;;;;3923:41:80;;;;;;;;3993:19;;;4027:2922;;;;4058:30;4111:81;4136:15;4135:16;;4169:8;563:3;4154:23;563:3;4111:15;:81::i;:::-;4058:134;;4221:10;:230;;4364:87;4394:19;4415:18;4435:9;4446:4;4364:29;:87::i;:::-;4221:230;;;4254:87;4284:18;4304:19;4325:9;4336:4;4254:29;:87::i;:::-;4210:241;;4499:8;4473:22;:34;4469:969;;4614:18;4595:37;;563:3;4666:8;:24;:256;;4852:70;4878:8;4888;4913;563:3;4898:23;4852:25;:70::i;:::-;4666:256;;;4717:8;4666:256;4654:268;;4469:969;;;5032:22;5021:33;;5095:153;5160:19;5181:9;5192:22;5216:10;5095:39;:153::i;:::-;5076:172;;5411:8;5392:15;5391:16;;5383:36;5371:48;;4469:969;5467:10;:228;;5609:86;5639:19;5660:16;5678:9;5689:5;5609:29;:86::i;:::-;5467:228;;;5500:86;5530:16;5548:19;5569:9;5580:5;5500:29;:86::i;:::-;5455:240;;4040:1670;4027:2922;;;5746:10;:232;;5890:88;5920:19;5941:18;5961:9;5972:5;5890:29;:88::i;:::-;5746:232;;;5779:88;5809:18;5829:19;5850:9;5861:5;5779:29;:88::i;:::-;5734:244;;6028:9;6008:15;6000:37;5996:516;;6145:18;6126:37;;5996:516;;;6317:15;6297:36;;6398:95;6439:19;6460:9;6471;6482:10;6398:40;:95::i;:::-;6355:138;;5996:516;6540:10;:226;;6681:85;6711:19;6732:16;6750:9;6761:4;6681:29;:85::i;:::-;6540:226;;;6573:85;6603:16;6621:19;6642:9;6653:4;6573:29;:85::i;:::-;6529:237;;6864:70;6890:8;6900;6925;563:3;6910:23;6864:25;:70::i;:::-;6852:82;;4027:2922;3816:3143;;;3514:3451;;;;;;;;;;:::o;5164:296:68:-;5256:14;5315:25;5322:1;5325;5328:11;5315:6;:25::i;:::-;5306:34;;5371:11;5358:25;;;;;:::i;:::-;5368:1;5365;5358:25;:30;5354:90;;5416:8;;:12;5408:21;;;;;1659:947:62;1722:7;1753:1;1749;:5;1741:14;;;;;;-1:-1:-1;2522:66:62;1871:1;1867:9;;;1860:17;;;2105:215;2251:66;2125:108;2164:66;2141:90;;2125:108;;;2121:197;2105:215;;;2487:9;;;2475:10;2471:26;2499:4;2467:37;2462:127;;;;2456:134;;1659:947::o;6460:909:79:-;6614:7;-1:-1:-1;;;;;6887:9:79;6883:50;6876:58;-1:-1:-1;;;;;6804:8:79;6800:57;6793:65;6773:175;6770:309;;;6977:10;6974:1;6967:21;7060:4;7054;7047:18;6770:309;7172:10;:190;;7286:76;7326:8;7336:9;7347:8;7357:4;7286:39;:76::i;:::-;7172:190;;;7197:74;7235:8;7245:9;7256:8;7266:4;7197:37;:74::i;7938:909::-;8094:7;-1:-1:-1;;;;;8367:9:79;8363:50;8356:58;-1:-1:-1;;;;;8284:8:79;8280:57;8273:65;8253:175;8250:309;;;8457:10;8454:1;8447:21;8540:4;8534;8527:18;8250:309;8646:10;:194;;8764:76;8802:8;8812:9;8823;8834:5;8764:37;:76::i;8646:194::-;8671:78;8711:8;8721:9;8732;8743:5;4438:1450;4597:7;4778:3;4774:1108;;;4797:16;-1:-1:-1;;;;;4834:27:79;;;:172;;4954:52;4970:6;-1:-1:-1;;;4996:9:79;-1:-1:-1;;;;;4954:52:79;:15;:52::i;:::-;4834:172;;;4884:47;-1:-1:-1;;;;;4884:47:79;;295:2:67;4885:33:79;;;4884:47;:::i;:::-;4797:223;-1:-1:-1;5042:42:79;5043:28;4797:223;-1:-1:-1;;;;;5043:17:79;;:28;:::i;:::-;5042:40;:42::i;:::-;5035:49;;;;;4774:1108;5115:16;-1:-1:-1;;;;;5152:27:79;;;:205;;5295:62;5321:6;-1:-1:-1;;;5347:9:79;-1:-1:-1;;;;;5295:62:79;:25;:62::i;:::-;5152:205;;;5202:70;295:2:67;5227:33:79;;;-1:-1:-1;;;;;5202:70:79;;606:9:83;;;620;;617:16;;602:32;;469:181;5202:70:79;5115:256;;5583:8;-1:-1:-1;;;;;5528:8:79;5524:57;5521:71;5511:220;;5626:10;5623:1;5616:21;5708:4;5702;5695:18;5511:220;-1:-1:-1;;;;;5837:19:79;;;;-1:-1:-1;5822:35:79;;1535:2065;1692:7;1831:6;1841:1;1831:11;1827:32;;-1:-1:-1;1851:8:79;1844:15;;1827:32;-1:-1:-1;;;;;;;295:2:67;1890:45:79;;;;1946:1648;;;;-1:-1:-1;;;;;2015:17:79;;;;;;:6;:17;:6;2054:16;;;;:::i;:::-;;:28;2050:345;;2128:20;;;2174:25;;;2170:207;;2293:60;2319:10;2331:8;-1:-1:-1;;;;;2293:60:79;2341:11;2293:25;:60::i;:::-;2278:76;;;;;;;2170:207;2084:311;2050:345;-1:-1:-1;2488:70:79;2513:10;2551:6;2526:21;-1:-1:-1;;;;;2526:21:79;;2513:10;2526:21;:::i;:::-;2525:32;;;;:::i;:::-;606:9:83;;;620;;617:16;;602:32;;469:181;1946:1648:79;-1:-1:-1;;;;;2636:17:79;;;;;;3069:20;;;3066:83;3179:23;;;3033:195;2998:397;;3287:10;3284:1;3277:21;3368:4;3362;3355:18;2998:397;3452:20;;;3497:72;:60;3452:10;-1:-1:-1;;;;;3497:60:79;;3452:20;3497:25;:60::i;460:155:78:-;546:1;-1:-1:-1;;;;;562:6:78;;;;558:50;;570:38;-1:-1:-1;;;570:36:78;:38::i;14:131:132:-;-1:-1:-1;;;;;89:31:132;;79:42;;69:70;;135:1;132;125:12;150:367;218:6;226;279:2;267:9;258:7;254:23;250:32;247:52;;;295:1;292;285:12;247:52;334:9;321:23;353:31;378:5;353:31;:::i;:::-;403:5;481:2;466:18;;;;453:32;;-1:-1:-1;;;150:367:132:o;704:286::-;762:6;815:2;803:9;794:7;790:23;786:32;783:52;;;831:1;828;821:12;783:52;857:23;;-1:-1:-1;;;;;;909:32:132;;899:43;;889:71;;956:1;953;946:12;1187:487;1264:6;1272;1280;1333:2;1321:9;1312:7;1308:23;1304:32;1301:52;;;1349:1;1346;1339:12;1301:52;1388:9;1375:23;1407:31;1432:5;1407:31;:::i;:::-;1457:5;1535:2;1520:18;;1507:32;;-1:-1:-1;1638:2:132;1623:18;;;1610:32;;1187:487;-1:-1:-1;;;1187:487:132:o;1679:538::-;1786:6;1794;1802;1855:2;1843:9;1834:7;1830:23;1826:32;1823:52;;;1871:1;1868;1861:12;1823:52;1910:9;1897:23;1929:31;1954:5;1929:31;:::i;:::-;1979:5;-1:-1:-1;2036:2:132;2021:18;;2008:32;2049:33;2008:32;2049:33;:::i;:::-;1679:538;;2101:7;;-1:-1:-1;;;2181:2:132;2166:18;;;;2153:32;;1679:538::o;2222:226::-;2281:6;2334:2;2322:9;2313:7;2309:23;2305:32;2302:52;;;2350:1;2347;2340:12;2302:52;-1:-1:-1;2395:23:132;;2222:226;-1:-1:-1;2222:226:132:o;2635:127::-;2696:10;2691:3;2687:20;2684:1;2677:31;2727:4;2724:1;2717:15;2751:4;2748:1;2741:15;2767:253;2839:2;2833:9;2881:4;2869:17;;-1:-1:-1;;;;;2901:34:132;;2937:22;;;2898:62;2895:88;;;2963:18;;:::i;:::-;2999:2;2992:22;2767:253;:::o;3025:275::-;3096:2;3090:9;3161:2;3142:13;;-1:-1:-1;;3138:27:132;3126:40;;-1:-1:-1;;;;;3181:34:132;;3217:22;;;3178:62;3175:88;;;3243:18;;:::i;:::-;3279:2;3272:22;3025:275;;-1:-1:-1;3025:275:132:o;3305:161::-;3372:20;;3432:8;3421:20;;3411:31;;3401:59;;3456:1;3453;3446:12;3471:160;3537:20;;3597:1;3586:20;;;3576:31;;3566:59;;3621:1;3618;3611:12;3636:920;3690:5;3738:4;3726:9;3721:3;3717:19;3713:30;3710:50;;;3756:1;3753;3746:12;3710:50;3809:2;3803:9;3851:4;3839:17;;-1:-1:-1;;;;;3871:34:132;;3907:22;;;3868:62;3865:88;;;3933:18;;:::i;:::-;3969:2;3962:22;4002:6;-1:-1:-1;4002:6:132;4032:23;;4064:33;4032:23;4064:33;:::i;:::-;4106:23;;4181:2;4166:18;;4153:32;4194:33;4153:32;4194:33;:::i;:::-;4255:2;4243:15;;4236:32;4301:37;4334:2;4319:18;;4301:37;:::i;:::-;4296:2;4288:6;4284:15;4277:62;4372:36;4404:2;4393:9;4389:18;4372:36;:::i;:::-;4367:2;4359:6;4355:15;4348:61;4461:3;4450:9;4446:19;4433:33;4475;4500:7;4475:33;:::i;:::-;4536:3;4524:16;;;;4517:33;3636:920;;-1:-1:-1;;3636:920:132:o;4561:347::-;4612:8;4622:6;4676:3;4669:4;4661:6;4657:17;4653:27;4643:55;;4694:1;4691;4684:12;4643:55;-1:-1:-1;4717:20:132;;-1:-1:-1;;;;;4749:30:132;;4746:50;;;4792:1;4789;4782:12;4746:50;4829:4;4821:6;4817:17;4805:29;;4881:3;4874:4;4865:6;4857;4853:19;4849:30;4846:39;4843:59;;;4898:1;4895;4888:12;4843:59;4561:347;;;;;:::o;4913:763::-;5036:6;5044;5052;5060;5068;5121:3;5109:9;5100:7;5096:23;5092:33;5089:53;;;5138:1;5135;5128:12;5089:53;5161:45;5198:7;5187:9;5161:45;:::i;:::-;5151:55;-1:-1:-1;5275:3:132;5260:19;;5247:33;;-1:-1:-1;5377:3:132;5362:19;;5349:33;;-1:-1:-1;5459:3:132;5444:19;;5431:33;-1:-1:-1;;;;;5476:30:132;;5473:50;;;5519:1;5516;5509:12;5473:50;5558:58;5608:7;5599:6;5588:9;5584:22;5558:58;:::i;:::-;4913:763;;;;-1:-1:-1;4913:763:132;;-1:-1:-1;5635:8:132;;5532:84;4913:763;-1:-1:-1;;;4913:763:132:o;5896:247::-;5955:6;6008:2;5996:9;5987:7;5983:23;5979:32;5976:52;;;6024:1;6021;6014:12;5976:52;6063:9;6050:23;6082:31;6107:5;6082:31;:::i;6148:346::-;6216:6;6224;6277:2;6265:9;6256:7;6252:23;6248:32;6245:52;;;6293:1;6290;6283:12;6245:52;-1:-1:-1;;6338:23:132;;;6458:2;6443:18;;;6430:32;;-1:-1:-1;6148:346:132:o;6499:611::-;6689:2;6701:21;;;6771:13;;6674:18;;;6793:22;;;6641:4;;6872:15;;;6846:2;6831:18;;;6641:4;6915:169;6929:6;6926:1;6923:13;6915:169;;;6990:13;;6978:26;;7033:2;7059:15;;;;7024:12;;;;6951:1;6944:9;6915:169;;;-1:-1:-1;7101:3:132;;6499:611;-1:-1:-1;;;;;6499:611:132:o;7115:409::-;7185:6;7193;7246:2;7234:9;7225:7;7221:23;7217:32;7214:52;;;7262:1;7259;7252:12;7214:52;7302:9;7289:23;-1:-1:-1;;;;;7327:6:132;7324:30;7321:50;;;7367:1;7364;7357:12;7321:50;7406:58;7456:7;7447:6;7436:9;7432:22;7406:58;:::i;:::-;7483:8;;7380:84;;-1:-1:-1;7115:409:132;-1:-1:-1;;;;7115:409:132:o;7529:416::-;7676:2;7665:9;7658:21;7639:4;7708:6;7702:13;7751:6;7746:2;7735:9;7731:18;7724:34;7810:6;7805:2;7797:6;7793:15;7788:2;7777:9;7773:18;7767:50;7866:1;7861:2;7852:6;7841:9;7837:22;7833:31;7826:42;7936:2;7929;7925:7;7920:2;7912:6;7908:15;7904:29;7893:9;7889:45;7885:54;7877:62;;;7529:416;;;;:::o;7950:302::-;8043:6;8051;8104:3;8092:9;8083:7;8079:23;8075:33;8072:53;;;8121:1;8118;8111:12;8072:53;8144:45;8181:7;8170:9;8144:45;:::i;:::-;8134:55;;8208:38;8241:3;8230:9;8226:19;8208:38;:::i;:::-;8198:48;;7950:302;;;;;:::o;8257:160::-;8322:20;;8378:13;;8371:21;8361:32;;8351:60;;8407:1;8404;8397:12;8422:315;8487:6;8495;8548:2;8536:9;8527:7;8523:23;8519:32;8516:52;;;8564:1;8561;8554:12;8516:52;8603:9;8590:23;8622:31;8647:5;8622:31;:::i;:::-;8672:5;-1:-1:-1;8696:35:132;8727:2;8712:18;;8696:35;:::i;9255:1097::-;9409:6;9417;9425;9433;9477:9;9468:7;9464:23;9507:3;9503:2;9499:12;9496:32;;;9524:1;9521;9514:12;9496:32;9547:45;9584:7;9573:9;9547:45;:::i;:::-;9537:55;-1:-1:-1;9627:4:132;-1:-1:-1;;9608:17:132;;9604:28;9601:48;;;9645:1;9642;9635:12;9601:48;;9671:22;;:::i;:::-;9716:37;9748:3;9737:9;9733:19;9716:37;:::i;:::-;9709:5;9702:52;9786:37;9818:3;9807:9;9803:19;9786:37;:::i;:::-;9781:2;9770:14;;9763:61;9897:3;9882:19;;9869:33;9929:2;9918:14;;9911:31;10015:3;10000:19;;9987:33;10047:2;10036:14;;10029:31;9774:5;-1:-1:-1;10135:3:132;10120:19;;10107:33;-1:-1:-1;;;;;10152:30:132;;10149:50;;;10195:1;10192;10185:12;10149:50;10234:58;10284:7;10275:6;10264:9;10260:22;10234:58;:::i;:::-;9255:1097;;;;-1:-1:-1;10311:8:132;-1:-1:-1;;;;9255:1097:132:o;10676:365::-;10770:6;10778;10831:3;10819:9;10810:7;10806:23;10802:33;10799:53;;;10848:1;10845;10838:12;10799:53;10871:45;10908:7;10897:9;10871:45;:::i;:::-;10861:55;;10966:3;10955:9;10951:19;10938:33;10980:31;11005:5;10980:31;:::i;:::-;11030:5;11020:15;;;10676:365;;;;;:::o;12674:610::-;12760:6;12768;12821:2;12809:9;12800:7;12796:23;12792:32;12789:52;;;12837:1;12834;12827:12;12789:52;12877:9;12864:23;-1:-1:-1;;;;;12902:6:132;12899:30;12896:50;;;12942:1;12939;12932:12;12896:50;12965:22;;13018:4;13010:13;;13006:27;-1:-1:-1;12996:55:132;;13047:1;13044;13037:12;12996:55;13087:2;13074:16;-1:-1:-1;;;;;13105:6:132;13102:30;13099:50;;;13145:1;13142;13135:12;13099:50;13198:7;13193:2;13183:6;13180:1;13176:14;13172:2;13168:23;13164:32;13161:45;13158:65;;;13219:1;13216;13209:12;13158:65;13250:2;13242:11;;;;;13272:6;;-1:-1:-1;12674:610:132;-1:-1:-1;;;12674:610:132:o;13289:388::-;13357:6;13365;13418:2;13406:9;13397:7;13393:23;13389:32;13386:52;;;13434:1;13431;13424:12;13386:52;13473:9;13460:23;13492:31;13517:5;13492:31;:::i;:::-;13542:5;-1:-1:-1;13599:2:132;13584:18;;13571:32;13612:33;13571:32;13612:33;:::i;13682:1214::-;13825:6;13833;13841;13849;13893:9;13884:7;13880:23;13923:3;13919:2;13915:12;13912:32;;;13940:1;13937;13930:12;13912:32;13963:45;14000:7;13989:9;13963:45;:::i;:::-;13953:55;-1:-1:-1;14043:4:132;-1:-1:-1;;14024:17:132;;14020:28;14017:48;;;14061:1;14058;14051:12;14017:48;-1:-1:-1;14114:2:132;14108:9;14156:4;14144:17;;-1:-1:-1;;;;;14176:34:132;;14212:22;;;14173:62;14170:88;;;14238:18;;:::i;:::-;14274:2;14267:22;14313:36;14344:3;14329:19;;14313:36;:::i;:::-;14298:52;;14419:3;14404:19;;14391:33;14452:2;14440:15;;14433:30;14515:3;14500:19;;14487:33;14529;14487;14529;:::i;:::-;14590:2;14578:15;;14571:32;14582:6;-1:-1:-1;14679:3:132;14664:19;;14651:33;-1:-1:-1;;;;;14696:30:132;;14693:50;;;14739:1;14736;14729:12;14901:629;14987:6;14995;15003;15011;15064:3;15052:9;15043:7;15039:23;15035:33;15032:53;;;15081:1;15078;15071:12;15032:53;15120:9;15107:23;15139:31;15164:5;15139:31;:::i;:::-;15189:5;-1:-1:-1;15246:2:132;15231:18;;15218:32;15259:33;15218:32;15259:33;:::i;:::-;14901:629;;15311:7;;-1:-1:-1;;;;15391:2:132;15376:18;;15363:32;;15494:2;15479:18;15466:32;;14901:629::o;15535:127::-;15596:10;15591:3;15587:20;15584:1;15577:31;15627:4;15624:1;15617:15;15651:4;15648:1;15641:15;15667:128;15734:9;;;15755:11;;;15752:37;;;15769:18;;:::i;15800:125::-;15865:9;;;15886:10;;;15883:36;;;15899:18;;:::i;16803:266::-;16891:6;16886:3;16879:19;16943:6;16936:5;16929:4;16924:3;16920:14;16907:43;-1:-1:-1;16995:1:132;16970:16;;;16988:4;16966:27;;;16959:38;;;;17051:2;17030:15;;;-1:-1:-1;;17026:29:132;17017:39;;;17013:50;;16803:266::o;17074:244::-;17231:2;17220:9;17213:21;17194:4;17251:61;17308:2;17297:9;17293:18;17285:6;17277;17251:61;:::i;17323:755::-;17402:6;17455:2;17443:9;17434:7;17430:23;17426:32;17423:52;;;17471:1;17468;17461:12;17423:52;17504:9;17498:16;-1:-1:-1;;;;;17529:6:132;17526:30;17523:50;;;17569:1;17566;17559:12;17523:50;17592:22;;17645:4;17637:13;;17633:27;-1:-1:-1;17623:55:132;;17674:1;17671;17664:12;17623:55;17707:2;17701:9;-1:-1:-1;;;;;17725:6:132;17722:30;17719:56;;;17755:18;;:::i;:::-;17797:57;17844:2;17821:17;;-1:-1:-1;;17817:31:132;17850:2;17813:40;17797:57;:::i;:::-;17877:6;17870:5;17863:21;17925:7;17920:2;17911:6;17907:2;17903:15;17899:24;17896:37;17893:57;;;17946:1;17943;17936:12;17893:57;17994:6;17989:2;17985;17981:11;17976:2;17969:5;17965:14;17959:42;18046:1;18021:18;;;18041:2;18017:27;18010:38;;;;18025:5;17323:755;-1:-1:-1;;;;17323:755:132:o;19265:424::-;19342:12;;-1:-1:-1;;;;;19338:38:132;;;19326:51;;19430:4;19419:16;;;19413:23;19409:49;;19393:14;;;19386:73;19512:4;19501:16;;;19495:23;19520:8;19491:38;19475:14;;;19468:62;19593:4;19582:16;;;19576:23;19573:1;19562:38;19546:14;;;19539:62;19654:4;19643:16;;;19637:23;19633:49;19617:14;;19610:73;19265:424::o;19694:630::-;-1:-1:-1;;;;;20015:32:132;;19997:51;;20057:53;20106:2;20091:18;;20083:6;20057:53;:::i;:::-;20147:6;20141:3;20130:9;20126:19;20119:35;20191:6;20185:3;20174:9;20170:19;20163:35;20235:3;20229;20218:9;20214:19;20207:32;19978:4;20256:62;20313:3;20302:9;20298:19;20290:6;20282;20256:62;:::i;:::-;20248:70;19694:630;-1:-1:-1;;;;;;;;19694:630:132:o;20638:671::-;-1:-1:-1;;;;;21011:32:132;;20993:51;;21053:53;21102:2;21087:18;;21079:6;21053:53;:::i;:::-;20430:12;;20427:1;20416:27;;;21178:3;21163:19;;20404:40;20507:4;20496:16;;20490:23;20476:38;;20460:14;;;20453:62;20564:4;20553:16;;20547:23;20531:14;;;20524:47;20620:4;20609:16;;20603:23;20587:14;;;20580:47;21220:3;21214;21203:9;21199:19;21192:32;20974:4;21241:62;21298:3;21287:9;21283:19;21275:6;21267;21241:62;:::i;21314:881::-;-1:-1:-1;;;;;21809:32:132;;21791:51;;21851:53;21900:2;21885:18;;21877:6;21851:53;:::i;:::-;20430:12;;20427:1;20416:27;;;21976:3;21961:19;;20404:40;20507:4;20496:16;;20490:23;20476:38;;20460:14;;;20453:62;20564:4;20553:16;;20547:23;20531:14;;;20524:47;20620:4;20609:16;;20603:23;20587:14;;;20580:47;22018:6;22012:3;22001:9;21997:19;21990:35;22062:6;22056:3;22045:9;22041:19;22034:35;22106:3;22100;22089:9;22085:19;22078:32;21772:4;22127:62;22184:3;22173:9;22169:19;22161:6;22153;22127:62;:::i;22200:444::-;-1:-1:-1;;;;;22473:32:132;;22455:51;;22442:3;22427:19;;22515:53;22564:2;22549:18;;22541:6;22515:53;:::i;:::-;-1:-1:-1;;;;;22605:32:132;;;;22599:3;22584:19;;;;22577:61;22200:444;;-1:-1:-1;;22200:444:132:o;22649:527::-;-1:-1:-1;;;;;22946:32:132;;22928:51;;22915:3;22900:19;;22988:53;23037:2;23022:18;;23014:6;22988:53;:::i;:::-;-1:-1:-1;;;;;23078:32:132;;;;23072:3;23057:19;;23050:61;23159:1;23148:21;;;;23142:3;23127:19;;;23120:50;22649:527;;-1:-1:-1;;22649:527:132:o;23181:184::-;23251:6;23304:2;23292:9;23283:7;23279:23;23275:32;23272:52;;;23320:1;23317;23310:12;23272:52;-1:-1:-1;23343:16:132;;23181:184;-1:-1:-1;23181:184:132:o;23624:638::-;-1:-1:-1;;;;;23975:32:132;;23957:51;;24017:53;24066:2;24051:18;;24043:6;24017:53;:::i;:::-;23460:12;;23453:20;23446:28;24131:3;24116:19;;23434:41;23524:4;23513:16;;23507:23;23491:14;;;23484:47;23584:4;23573:16;;23567:23;-1:-1:-1;;;;;23563:49:132;23547:14;;;23540:73;24173:3;24167;24156:9;24152:19;24145:32;23938:4;24194:62;24251:3;24240:9;24236:19;24228:6;24220;24194:62;:::i;24267:216::-;24331:9;;;24359:11;;;24306:3;24389:9;;24417:10;;24413:19;;24442:10;;24434:19;;24410:44;24407:70;;;24457:18;;:::i;25147:743::-;-1:-1:-1;;;;;25559:32:132;;25541:51;;25601:53;25650:2;25635:18;;25627:6;25601:53;:::i;:::-;23460:12;;23453:20;23446:28;25715:3;25700:19;;23434:41;23524:4;23513:16;;23507:23;23491:14;;;23484:47;23584:4;23573:16;;23567:23;-1:-1:-1;;;;;23563:49:132;23547:14;;;23540:73;25757:6;25751:3;25740:9;25736:19;25729:35;25801:3;25795;25784:9;25780:19;25773:32;25522:4;25822:62;25879:3;25868:9;25864:19;25856:6;25848;25822:62;:::i;25895:245::-;25993:2;25963:17;;;25982;;;;25959:41;-1:-1:-1;;;;;26015:44:132;;-1:-1:-1;;;;;;26061:49:132;;26012:99;26009:125;;;26114:18;;:::i;26145:376::-;26262:12;;26310:4;26299:16;;26293:23;-1:-1:-1;;;;;;26334:29:132;;;26262:12;26386:1;26375:13;;26372:143;;;-1:-1:-1;;;;;;26447:1:132;26443:14;;;26440:1;26436:22;26432:49;;;26424:58;;26420:85;;-1:-1:-1;26372:143:132;;;26145:376;;;:::o;26526:249::-;26626:2;26615:17;;;26596;;;;26592:41;-1:-1:-1;;;;;;26648:50:132;;-1:-1:-1;;;;;26700:45:132;;26645:101;26642:127;;;26749:18;;:::i;26780:200::-;26846:9;;;26819:4;26874:9;;26902:10;;26914:12;;;26898:29;26937:12;;;26929:21;;26895:56;26892:82;;;26954:18;;:::i;26985:127::-;27046:10;27041:3;27037:20;27034:1;27027:31;27077:4;27074:1;27067:15;27101:4;27098:1;27091:15;27117:217;27157:1;27183;27173:132;;27227:10;27222:3;27218:20;27215:1;27208:31;27262:4;27259:1;27252:15;27290:4;27287:1;27280:15;27173:132;-1:-1:-1;27319:9:132;;27117:217::o",
    "linkReferences": {},
    "immutableReferences": { "47370": [{ "start": 6167, "length": 32 }] }
  },
  "methodIdentifiers": {
    "allowance(address,address,uint256)": "598af9e7",
    "approve(address,uint256,uint256)": "426a8493",
    "balanceOf(address,uint256)": "00fdd58e",
    "burn(address,uint256,uint256)": "f5298aca",
    "clear(address,uint256)": "80f0b44c",
    "collectProtocolFees(address,address,uint256)": "8161b874",
    "donate((address,address,uint24,int24,address),uint256,uint256,bytes)": "234266d7",
    "extsload(bytes32)": "1e2eaeaf",
    "extsload(bytes32,uint256)": "35fd631a",
    "extsload(bytes32[])": "dbd035ff",
    "exttload(bytes32)": "f135baaa",
    "exttload(bytes32[])": "9bf6645f",
    "initialize((address,address,uint24,int24,address),uint160)": "6276cbbe",
    "isOperator(address,address)": "b6363cf2",
    "mint(address,uint256,uint256)": "156e29f6",
    "modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": "5a6bcfda",
    "owner()": "8da5cb5b",
    "protocolFeeController()": "f02de3b2",
    "protocolFeesAccrued(address)": "97e8cd4e",
    "setOperator(address,bool)": "558a7297",
    "setProtocolFee((address,address,uint24,int24,address),uint24)": "7e87ce7d",
    "setProtocolFeeController(address)": "2d771389",
    "settle()": "11da60b4",
    "settleFor(address)": "3dd45adb",
    "supportsInterface(bytes4)": "01ffc9a7",
    "swap((address,address,uint24,int24,address),(bool,int256,uint160),bytes)": "f3cd914c",
    "sync(address)": "a5841194",
    "take(address,address,uint256)": "0b0d9c09",
    "transfer(address,uint256,uint256)": "095bcdb6",
    "transferFrom(address,address,uint256,uint256)": "fe99049a",
    "transferOwnership(address)": "f2fde38b",
    "unlock(bytes)": "48c89491",
    "updateDynamicLPFee((address,address,uint24,int24,address),uint24)": "52759651"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AlreadyUnlocked\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currency1\",\"type\":\"address\"}],\"name\":\"CurrenciesOutOfOrderOrEqual\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CurrencyNotSettled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DelegateCallNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ManagerLocked\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MustClearExactPositiveDelta\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NonzeroNativeValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PoolNotInitialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProtocolFeeCurrencySynced\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"ProtocolFeeTooLarge\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SwapAmountCannotBeZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"TickSpacingTooLarge\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"TickSpacingTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnauthorizedDynamicLPFeeUpdate\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"PoolId\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Donate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"PoolId\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"PoolId\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"ModifyLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"OperatorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"protocolFeeController\",\"type\":\"address\"}],\"name\":\"ProtocolFeeControllerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"PoolId\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint24\",\"name\":\"protocolFee\",\"type\":\"uint24\"}],\"name\":\"ProtocolFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"PoolId\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int128\",\"name\":\"amount0\",\"type\":\"int128\"},{\"indexed\":false,\"internalType\":\"int128\",\"name\":\"amount1\",\"type\":\"int128\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Currency\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"clear\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"collectProtocolFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountCollected\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"donate\",\"outputs\":[{\"internalType\":\"BalanceDelta\",\"name\":\"delta\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"extsload\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"startSlot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"nSlots\",\"type\":\"uint256\"}],\"name\":\"extsload\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"slots\",\"type\":\"bytes32[]\"}],\"name\":\"extsload\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"slots\",\"type\":\"bytes32[]\"}],\"name\":\"exttload\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"exttload\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isOperator\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPoolManager.ModifyLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"modifyLiquidity\",\"outputs\":[{\"internalType\":\"BalanceDelta\",\"name\":\"callerDelta\",\"type\":\"int256\"},{\"internalType\":\"BalanceDelta\",\"name\":\"feesAccrued\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFeeController\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Currency\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"protocolFeesAccrued\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint24\",\"name\":\"newProtocolFee\",\"type\":\"uint24\"}],\"name\":\"setProtocolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"}],\"name\":\"setProtocolFeeController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"settle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"settleFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct IPoolManager.SwapParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"BalanceDelta\",\"name\":\"swapDelta\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Currency\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"sync\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Currency\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"take\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"unlock\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint24\",\"name\":\"newDynamicLPFee\",\"type\":\"uint24\"}],\"name\":\"updateDynamicLPFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Donate(bytes32,address,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount donated in currency0\",\"amount1\":\"The amount donated in currency1\",\"id\":\"The abi encoded hash of the pool key struct for the pool that was donated to\",\"sender\":\"The address that initiated the donate call\"}},\"Initialize(bytes32,address,address,uint24,int24,address,uint160,int24)\":{\"params\":{\"currency0\":\"The first currency of the pool by address sort order\",\"currency1\":\"The second currency of the pool by address sort order\",\"fee\":\"The fee collected upon every swap in the pool, denominated in hundredths of a bip\",\"hooks\":\"The hooks contract address for the pool, or address(0) if none\",\"id\":\"The abi encoded hash of the pool key struct for the new pool\",\"sqrtPriceX96\":\"The price of the pool on initialization\",\"tick\":\"The initial tick of the pool corresponding to the initialized price\",\"tickSpacing\":\"The minimum number of ticks between initialized ticks\"}},\"ModifyLiquidity(bytes32,address,int24,int24,int256,bytes32)\":{\"params\":{\"id\":\"The abi encoded hash of the pool key struct for the pool that was modified\",\"liquidityDelta\":\"The amount of liquidity that was added or removed\",\"salt\":\"The extra data to make positions unique\",\"sender\":\"The address that modified the pool\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"Swap(bytes32,address,int128,int128,uint160,uint128,int24,uint24)\":{\"params\":{\"amount0\":\"The delta of the currency0 balance of the pool\",\"amount1\":\"The delta of the currency1 balance of the pool\",\"fee\":\"The swap fee in hundredths of a bip\",\"id\":\"The abi encoded hash of the pool key struct for the pool that was modified\",\"liquidity\":\"The liquidity of the pool after the swap\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"sqrtPriceX96\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"tick\":\"The log base 1.0001 of the price of the pool after the swap\"}}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of the token.\",\"id\":\"The id of the token.\",\"spender\":\"The address of the spender.\"},\"returns\":{\"_0\":\"bool True, always\"}},\"burn(address,uint256,uint256)\":{\"details\":\"The id is converted to a uint160 to correspond to a currency address If the upper 12 bytes are not 0, they will be 0-ed out\",\"params\":{\"amount\":\"The amount of currency to burn\",\"from\":\"The address to burn the tokens from\",\"id\":\"The currency address to burn from ERC6909s, as a uint256\"}},\"clear(address,uint256)\":{\"details\":\"This could be used to clear a balance that is considered dust. Additionally, the amount must be the exact positive balance. This is to enforce that the caller is aware of the amount being cleared.\"},\"collectProtocolFees(address,address,uint256)\":{\"details\":\"This will revert if the contract is unlocked\",\"params\":{\"amount\":\"The amount of currency to withdraw\",\"currency\":\"The currency to withdraw\",\"recipient\":\"The address to receive the protocol fees\"},\"returns\":{\"amountCollected\":\"The amount of currency successfully withdrawn\"}},\"donate((address,address,uint24,int24,address),uint256,uint256,bytes)\":{\"details\":\"Calls to donate can be frontrun adding just-in-time liquidity, with the aim of receiving a portion donated funds. Donors should keep this in mind when designing donation mechanisms.This function donates to in-range LPs at slot0.tick. In certain edge-cases of the swap algorithm, the `sqrtPrice` of a pool can be at the lower boundary of tick `n`, but the `slot0.tick` of the pool is already `n - 1`. In this case a call to `donate` would donate to tick `n - 1` (slot0.tick) not tick `n` (getTickAtSqrtPrice(slot0.sqrtPriceX96)). Read the comments in `Pool.swap()` for more information about this.\",\"params\":{\"amount0\":\"The amount of currency0 to donate\",\"amount1\":\"The amount of currency1 to donate\",\"hookData\":\"The data to pass through to the donate hooks\",\"key\":\"The key of the pool to donate to\"},\"returns\":{\"delta\":\"BalanceDelta The delta of the caller after the donate\"}},\"extsload(bytes32)\":{\"params\":{\"slot\":\"Key of slot to sload\"},\"returns\":{\"_0\":\"The value of the slot as bytes32\"}},\"extsload(bytes32,uint256)\":{\"params\":{\"nSlots\":\"Number of slots to load into return value\",\"startSlot\":\"Key of slot to start sloading from\"},\"returns\":{\"_0\":\"List of loaded values.\"}},\"extsload(bytes32[])\":{\"params\":{\"slots\":\"List of slots to SLOAD from.\"},\"returns\":{\"_0\":\"List of loaded values.\"}},\"exttload(bytes32)\":{\"params\":{\"slot\":\"Key of slot to tload\"},\"returns\":{\"_0\":\"The value of the slot as bytes32\"}},\"exttload(bytes32[])\":{\"params\":{\"slots\":\"List of slots to tload\"},\"returns\":{\"_0\":\"List of loaded values\"}},\"initialize((address,address,uint24,int24,address),uint160)\":{\"details\":\"A swap fee totaling MAX_SWAP_FEE (100%) makes exact output swaps impossible since the input is entirely consumed by the fee\",\"params\":{\"key\":\"The pool key for the pool to initialize\",\"sqrtPriceX96\":\"The initial square root price\"},\"returns\":{\"tick\":\"The initial tick of the pool\"}},\"mint(address,uint256,uint256)\":{\"details\":\"The id is converted to a uint160 to correspond to a currency address If the upper 12 bytes are not 0, they will be 0-ed out\",\"params\":{\"amount\":\"The amount of currency to mint\",\"id\":\"The currency address to mint to ERC6909s, as a uint256\",\"to\":\"The address to mint the tokens to\"}},\"modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)\":{\"details\":\"Poke by calling with a zero liquidityDeltaNote that feesAccrued can be artificially inflated by a malicious actor and integrators should be careful using the value For pools with a single liquidity position, actors can donate to themselves to inflate feeGrowthGlobal (and consequently feesAccrued) atomically donating and collecting fees in the same unlockCallback may make the inflated value more extreme\",\"params\":{\"hookData\":\"The data to pass through to the add/removeLiquidity hooks\",\"key\":\"The pool to modify liquidity in\",\"params\":\"The parameters for modifying the liquidity\"},\"returns\":{\"callerDelta\":\"The balance delta of the caller of modifyLiquidity. This is the total of both principal, fee deltas, and hook deltas if applicable\",\"feesAccrued\":\"The balance delta of the fees generated in the liquidity range. Returned for informational purposes\"}},\"setOperator(address,bool)\":{\"params\":{\"approved\":\"The approval status.\",\"operator\":\"The address of the operator.\"},\"returns\":{\"_0\":\"bool True, always\"}},\"setProtocolFee((address,address,uint24,int24,address),uint24)\":{\"params\":{\"key\":\"The key of the pool to set a protocol fee for\",\"newProtocolFee\":\"The fee to set\"}},\"setProtocolFeeController(address)\":{\"params\":{\"controller\":\"The new protocol fee controller\"}},\"settle()\":{\"returns\":{\"_0\":\"The amount of currency settled\"}},\"settleFor(address)\":{\"params\":{\"recipient\":\"The address to credit for the payment\"},\"returns\":{\"_0\":\"The amount of currency settled\"}},\"swap((address,address,uint24,int24,address),(bool,int256,uint160),bytes)\":{\"details\":\"Swapping on low liquidity pools may cause unexpected swap amounts when liquidity available is less than amountSpecified. Additionally note that if interacting with hooks that have the BEFORE_SWAP_RETURNS_DELTA_FLAG or AFTER_SWAP_RETURNS_DELTA_FLAG the hook may alter the swap input/output. Integrators should perform checks on the returned swapDelta.\",\"params\":{\"hookData\":\"The data to pass through to the swap hooks\",\"key\":\"The pool to swap in\",\"params\":\"The parameters for swapping\"},\"returns\":{\"swapDelta\":\"The balance delta of the address swapping\"}},\"sync(address)\":{\"details\":\"This MUST be called before any ERC20 tokens are sent into the contract, but can be skipped for native tokens because the amount to settle is determined by the sent value. However, if an ERC20 token has been synced and not settled, and the caller instead wants to settle native funds, this function can be called with the native currency to then be able to settle the native currency\"},\"take(address,address,uint256)\":{\"details\":\"Will revert if the requested amount is not available, consider using `mint` insteadCan also be used as a mechanism for free flash loans\",\"params\":{\"amount\":\"The amount of currency to withdraw\",\"currency\":\"The currency to withdraw from the pool manager\",\"to\":\"The address to withdraw to\"}},\"transfer(address,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of the token.\",\"id\":\"The id of the token.\",\"receiver\":\"The address of the receiver.\"},\"returns\":{\"_0\":\"bool True, always, unless the function reverts\"}},\"transferFrom(address,address,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of the token.\",\"id\":\"The id of the token.\",\"receiver\":\"The address of the receiver.\",\"sender\":\"The address of the sender.\"},\"returns\":{\"_0\":\"bool True, always, unless the function reverts\"}},\"unlock(bytes)\":{\"details\":\"The only functions callable without an unlocking are `initialize` and `updateDynamicLPFee`\",\"params\":{\"data\":\"Any data to pass to the callback, via `IUnlockCallback(msg.sender).unlockCallback(data)`\"},\"returns\":{\"result\":\"The data returned by the call to `IUnlockCallback(msg.sender).unlockCallback(data)`\"}},\"updateDynamicLPFee((address,address,uint24,int24,address),uint24)\":{\"details\":\"A swap fee totaling MAX_SWAP_FEE (100%) makes exact output swaps impossible since the input is entirely consumed by the fee\",\"params\":{\"key\":\"The key of the pool to update dynamic LP fees for\",\"newDynamicLPFee\":\"The new dynamic pool LP fee\"}}},\"title\":\"PoolManager\",\"version\":1},\"userdoc\":{\"errors\":{\"AlreadyUnlocked()\":[{\"notice\":\"Thrown when unlock is called, but the contract is already unlocked\"}],\"CurrenciesOutOfOrderOrEqual(address,address)\":[{\"notice\":\"PoolKey must have currencies where address(currency0) < address(currency1)\"}],\"CurrencyNotSettled()\":[{\"notice\":\"Thrown when a currency is not netted out after the contract is unlocked\"}],\"InvalidCaller()\":[{\"notice\":\"Thrown when collectProtocolFees or setProtocolFee is not called by the controller.\"}],\"ManagerLocked()\":[{\"notice\":\"Thrown when a function is called that requires the contract to be unlocked, but it is not\"}],\"MustClearExactPositiveDelta()\":[{\"notice\":\"Thrown when `clear` is called with an amount that is not exactly equal to the open currency delta.\"}],\"NonzeroNativeValue()\":[{\"notice\":\"Thrown when native currency is passed to a non native settlement\"}],\"PoolNotInitialized()\":[{\"notice\":\"Thrown when trying to interact with a non-initialized pool\"}],\"ProtocolFeeCurrencySynced()\":[{\"notice\":\"Thrown when collectProtocolFees is attempted on a token that is synced.\"}],\"ProtocolFeeTooLarge(uint24)\":[{\"notice\":\"Thrown when protocol fee is set too high\"}],\"SwapAmountCannotBeZero()\":[{\"notice\":\"Thrown when trying to swap amount of 0\"}],\"TickSpacingTooLarge(int24)\":[{\"notice\":\"Pools are limited to type(int16).max tickSpacing in #initialize, to prevent overflow\"}],\"TickSpacingTooSmall(int24)\":[{\"notice\":\"Pools must have a positive non-zero tickSpacing passed to #initialize\"}],\"UnauthorizedDynamicLPFeeUpdate()\":[{\"notice\":\"Thrown when a call to updateDynamicLPFee is made by an address that is not the hook, or on a pool that does not have a dynamic swap fee.\"}]},\"events\":{\"Donate(bytes32,address,uint256,uint256)\":{\"notice\":\"Emitted for donations\"},\"Initialize(bytes32,address,address,uint24,int24,address,uint160,int24)\":{\"notice\":\"Emitted when a new pool is initialized\"},\"ModifyLiquidity(bytes32,address,int24,int24,int256,bytes32)\":{\"notice\":\"Emitted when a liquidity position is modified\"},\"ProtocolFeeControllerUpdated(address)\":{\"notice\":\"Emitted when the protocol fee controller address is updated in setProtocolFeeController.\"},\"ProtocolFeeUpdated(bytes32,uint24)\":{\"notice\":\"Emitted when the protocol fee is updated for a pool.\"},\"Swap(bytes32,address,int128,int128,uint160,uint128,int24,uint24)\":{\"notice\":\"Emitted for swaps between currency0 and currency1\"}},\"kind\":\"user\",\"methods\":{\"allowance(address,address,uint256)\":{\"notice\":\"Spender allowance of an id.\"},\"approve(address,uint256,uint256)\":{\"notice\":\"Approves an amount of an id to a spender.\"},\"balanceOf(address,uint256)\":{\"notice\":\"Owner balance of an id.\"},\"burn(address,uint256,uint256)\":{\"notice\":\"Called by the user to move value from ERC6909 balance\"},\"clear(address,uint256)\":{\"notice\":\"WARNING - Any currency that is cleared, will be non-retrievable, and locked in the contract permanently. A call to clear will zero out a positive balance WITHOUT a corresponding transfer.\"},\"collectProtocolFees(address,address,uint256)\":{\"notice\":\"Collects the protocol fees for a given recipient and currency, returning the amount collected\"},\"donate((address,address,uint24,int24,address),uint256,uint256,bytes)\":{\"notice\":\"Donate the given currency amounts to the in-range liquidity providers of a pool\"},\"extsload(bytes32)\":{\"notice\":\"Called by external contracts to access granular pool state\"},\"extsload(bytes32,uint256)\":{\"notice\":\"Called by external contracts to access granular pool state\"},\"extsload(bytes32[])\":{\"notice\":\"Called by external contracts to access sparse pool state\"},\"exttload(bytes32)\":{\"notice\":\"Called by external contracts to access transient storage of the contract\"},\"exttload(bytes32[])\":{\"notice\":\"Called by external contracts to access sparse transient pool state\"},\"initialize((address,address,uint24,int24,address),uint160)\":{\"notice\":\"Initialize the state for a given pool ID\"},\"isOperator(address,address)\":{\"notice\":\"Checks if a spender is approved by an owner as an operator\"},\"mint(address,uint256,uint256)\":{\"notice\":\"Called by the user to move value into ERC6909 balance\"},\"modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)\":{\"notice\":\"Modify the liquidity for the given pool\"},\"protocolFeeController()\":{\"notice\":\"Returns the current protocol fee controller address\"},\"protocolFeesAccrued(address)\":{\"notice\":\"Given a currency address, returns the protocol fees accrued in that currency\"},\"setOperator(address,bool)\":{\"notice\":\"Sets or removes an operator for the caller.\"},\"setProtocolFee((address,address,uint24,int24,address),uint24)\":{\"notice\":\"Sets the protocol fee for the given pool\"},\"setProtocolFeeController(address)\":{\"notice\":\"Sets the protocol fee controller\"},\"settle()\":{\"notice\":\"Called by the user to pay what is owed\"},\"settleFor(address)\":{\"notice\":\"Called by the user to pay on behalf of another address\"},\"swap((address,address,uint24,int24,address),(bool,int256,uint160),bytes)\":{\"notice\":\"Swap against the given pool\"},\"sync(address)\":{\"notice\":\"Writes the current ERC20 balance of the specified currency to transient storage This is used to checkpoint balances for the manager and derive deltas for the caller.\"},\"take(address,address,uint256)\":{\"notice\":\"Called by the user to net out some value owed to the user\"},\"transfer(address,uint256,uint256)\":{\"notice\":\"Transfers an amount of an id from the caller to a receiver.\"},\"transferFrom(address,address,uint256,uint256)\":{\"notice\":\"Transfers an amount of an id from a sender to a receiver.\"},\"unlock(bytes)\":{\"notice\":\"All interactions on the contract that account deltas require unlocking. A caller that calls `unlock` must implement `IUnlockCallback(msg.sender).unlockCallback(data)`, where they interact with the remaining functions on this contract.\"},\"updateDynamicLPFee((address,address,uint24,int24,address),uint24)\":{\"notice\":\"Updates the pools lp fees for the a pool that has enabled dynamic lp fees.\"}},\"notice\":\"Holds the state for all pools\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/v4-core/src/PoolManager.sol\":\"PoolManager\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@account-abstraction/=lib/account-abstraction/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":forge-std/=lib/forge-std/src/\",\":permit2/=lib/v4-periphery/lib/permit2/\",\":solmate/=lib/v4-core/lib/solmate/\",\":v4-core/=lib/v4-core/\",\":v4-periphery/=lib/v4-periphery/\"]},\"sources\":{\"lib/v4-core/lib/solmate/src/auth/Owned.sol\":{\"keccak256\":\"0xfedb27d14c508342c33eb067c9a02eabcdb0f9dcf93b04ded1001f580d12d0ea\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://1ff52bbee698b9cf9e4574615e6550be0887ccf355f6571e23d6f25b332e79b4\",\"dweb:/ipfs/QmVorA2apojVRStzS7h8aFccR3Uv32G6HVtBtFHZrE7YXx\"]},\"lib/v4-core/src/ERC6909.sol\":{\"keccak256\":\"0x22476a1c183be1b547a509b3e6906abaccb6408375f798fce805ff7877aca09f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e85580e1563ea0556705132fb6bd038ca4aa355749039923853ebcb76b7c84e6\",\"dweb:/ipfs/QmVoxPrbagRKpFdRWoaCSKmStYLZrhNFuedcuyGycSGR7q\"]},\"lib/v4-core/src/ERC6909Claims.sol\":{\"keccak256\":\"0xf496ef3a5a9bf4f4aa2eec951dbeff09a01ef058bb9f64b1664cf46c9e85cd49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2a0a97c359a7a4c526ba9fc4ceb20af8050f9cf7886ea7e1f38c9c10b4a3750c\",\"dweb:/ipfs/QmPy6pCQbvzCdJRqG1thHRSwEZoLBAaLo3KQnueL3wxb8i\"]},\"lib/v4-core/src/Extsload.sol\":{\"keccak256\":\"0x784074bd04a1541c7c6ace074e30245746133fd37c3ba16b025dce394db986ce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35f1f4fb306bf01e98b7eca012b85f3ab978b39fa5136193363e2519c4435e51\",\"dweb:/ipfs/QmeGrjGMt71dJymVhkEadh5CuCW5GxRqNEZLi5AJxvC5tU\"]},\"lib/v4-core/src/Exttload.sol\":{\"keccak256\":\"0x769ee2733a08112c652274f4b972c45fb56cc46109f233b9a30f81561b15dd54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd19e88d50ae77c1ed5581baca1c75b3fb828d0b58cded90188d55c4e336266c\",\"dweb:/ipfs/Qmc8YM6Tfpwwa4qivHHzRxNdhZzdzGiD7VexWsDvkaQTxG\"]},\"lib/v4-core/src/NoDelegateCall.sol\":{\"keccak256\":\"0xacb81aecb7c74c86650a035462dae38c313b4b7b5842e14b645f864f61da2b51\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://363a0e15fc30ea68a5d52a78772facecde6433ea156e3ec2ce25068c97cd5ad6\",\"dweb:/ipfs/QmYhWaF3wH71SDx5TZr9qEXXQf5FYQvdjoo3B2qWiAbm18\"]},\"lib/v4-core/src/PoolManager.sol\":{\"keccak256\":\"0x9a53702537a80de1af6a1db957203c2da597b72272b8eaff8a265712a182983f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://44d8c5d5540222a2cafcdf48465ccd546f7db32dce2cbcef5c4762324412f40a\",\"dweb:/ipfs/Qmd83DfRYTc55Rh1GnEsuFVv3ewiTPt9HaaZTtVAciURFe\"]},\"lib/v4-core/src/ProtocolFees.sol\":{\"keccak256\":\"0x81362ef1d19670b41cefc2b6f2dc0333b6743fe39a1929edd36bd9b6a1111755\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de483bbd8bf9a53b9644d7f9a6a6fe77ae527b755cf29e1db8725de89e70c7aa\",\"dweb:/ipfs/Qmex3PcgJGbYsuDNaMXc8mg5fW1DNaPGiNToPpAAzz6GEq\"]},\"lib/v4-core/src/interfaces/IExtsload.sol\":{\"keccak256\":\"0x80b53ca4907d6f0088c3b931f2b72cad1dc4615a95094d96bd0fb8dff8d5ba43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://375c69148622aab7a3537d5fd37d373a8e9731022c8d87bdaee46233b0a99fe1\",\"dweb:/ipfs/QmXFjdoYRxsA5B1kyuxEXgNf3FBoL1zPvy26Qy8EtpdFRN\"]},\"lib/v4-core/src/interfaces/IExttload.sol\":{\"keccak256\":\"0xc6b68283ebd8d1c789df536756726eed51c589134bb20821b236a0d22a135937\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://294394f72dfc219689209f4130d85601dfd0d63c8d47578050d312db70f9b6c8\",\"dweb:/ipfs/QmTDMQ3oxCGHgEBU48a3Lp4S1rRjc8vVCxkhE5ZNej1bsY\"]},\"lib/v4-core/src/interfaces/IHooks.sol\":{\"keccak256\":\"0x4c9571aed0c2b6ef11832545554fc11ffdb03746daaf5c73683c00600bfc7ec0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e78b34b58ce9de91b91943b4f3cc3ce121d0b151e123e8a600ac5ef64d91db6c\",\"dweb:/ipfs/QmRkaQnPCYwLrXgbpGujJTx32PaZK63KSPJJV1XmnQuCMb\"]},\"lib/v4-core/src/interfaces/IPoolManager.sol\":{\"keccak256\":\"0x3534f00531038e77ab8a7fc4d0a6e0993ee53fb7a396b1324ad917318ea46cea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a4a7e771828dc40848485b568a1cf514f553ace6653f4f4d1ad3f3e9cdb6c27\",\"dweb:/ipfs/QmTjzQ7KVYnrEWtxPER2E4MXzycgcznfzSDsZtd5turk5V\"]},\"lib/v4-core/src/interfaces/IProtocolFees.sol\":{\"keccak256\":\"0x32a666e588a2f66334430357bb1e2424fe7eebeb98a3364b1dd16eb6ccca9848\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85751d302125881f72e5f8af051c2d5d9b1f606ebaea8ca7d04fccdd27cc252d\",\"dweb:/ipfs/QmeRwomeh9NWm6A6fgNA4KZPQZHPpdKsPQyYsHSFmvud7J\"]},\"lib/v4-core/src/interfaces/callback/IUnlockCallback.sol\":{\"keccak256\":\"0x58c82f2bd9d7c097ed09bd0991fedc403b0ec270eb3d0158bfb095c06a03d719\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91168ca26a10980df2cdc3fbfe8ddf372c002b7ef19e3c59a0c9870d64198f1b\",\"dweb:/ipfs/QmUSpaM825vd1SwvF38esgbdLgYiPwefKaFERTWvUi6uSK\"]},\"lib/v4-core/src/interfaces/external/IERC20Minimal.sol\":{\"keccak256\":\"0xeccadf1bf69ba2eb51f2fe4fa511bc7bb05bbd6b9f9a3cb8e5d83d9582613e0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://118757369892687b99ef46ce28d6861f62c098285bd7687a4f17f7e44e5f81de\",\"dweb:/ipfs/QmUxqbYqQtcEwwFbb9e6BBMePEaSgN8C45v6RKubD4ib8d\"]},\"lib/v4-core/src/interfaces/external/IERC6909Claims.sol\":{\"keccak256\":\"0xa586f345739e52b0488a0fe40b6e375cce67fdd25758408b0efcb5133ad96a48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8c557b7e52abdbbd82e415a1acc27921446a7fd090b7d4877e52be72619547f\",\"dweb:/ipfs/QmXE2KNPbXmGX8BQF3ei6zhzRTnhoTQg39XmqMnkhbr6QK\"]},\"lib/v4-core/src/libraries/BitMath.sol\":{\"keccak256\":\"0x51b9be4f5c4fd3e80cbc9631a65244a2eb2be250b6b7f128a2035080e18aee8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe98bbd5498e912146b9319827fc63621eb66ff55d5baae0fa02a7a972ab8d1e\",\"dweb:/ipfs/QmY5hCuyrtgsJtk4AavrxcvBkRrChfr4N6ZnhdC8roPpNi\"]},\"lib/v4-core/src/libraries/CurrencyDelta.sol\":{\"keccak256\":\"0x80dbd898cf0f90c5c27192689b16c34edc765d6ab21b8358e3bb792c7fef238c\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://107698da024313f132d9fe28deb920b5c03d14624889c3ce5720e588f03635bb\",\"dweb:/ipfs/QmQteUbhj5SsWbvSF6U8niBUSrETqVbEwULc8E7vS4Kbnn\"]},\"lib/v4-core/src/libraries/CurrencyReserves.sol\":{\"keccak256\":\"0x1576616129933fcdf3b684cea33cffd9c95e18fafbd2832a8c48ac3d8526d4c3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://33b050efb9b81803b18f562271e7cca2ec5362c4d505860d6419b4a345636725\",\"dweb:/ipfs/QmQtFtTwKZ5pFVGD2ENDUXvp7ECFvzqeCuJ1miJcUHdmiX\"]},\"lib/v4-core/src/libraries/CustomRevert.sol\":{\"keccak256\":\"0x111ed3031b6990c80a93ae35dde6b6ac0b7e6af471388fdd7461e91edda9b7de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9ea883c98d6ae1829160d0977bb5195761cfd5bc81692d0a941f45717f594cd\",\"dweb:/ipfs/QmZPwxzaeMNv536wzrAMrMswu7vMHuqPVpjcqL3YvCMoxt\"]},\"lib/v4-core/src/libraries/FixedPoint128.sol\":{\"keccak256\":\"0xad236e10853f4b4b20a35a9bb52b857c4fc79874846b7e444e06ead7f2630542\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0de1f9a06520b1a689660943faa14fc0b8344ab41fab9e6012ea34bff4b9b3eb\",\"dweb:/ipfs/QmRNMPTyko7W6d6KxuTsnDBa9oZgDK4xiwRRq3H9ASTbwy\"]},\"lib/v4-core/src/libraries/FixedPoint96.sol\":{\"keccak256\":\"0xef5c3fd41aee26bb12aa1c32873cfee88e67eddfe7c2b32283786265ac669741\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4de298d02f662a1c36c7be0a150f18c2a161408a5d3e48432e707efd01fac9a4\",\"dweb:/ipfs/QmSiM4oeMmLVKmAtJXz2feYkv4R9ZcyBpkTRW5Nhw5KDyJ\"]},\"lib/v4-core/src/libraries/FullMath.sol\":{\"keccak256\":\"0x4fc73a00817193fd3cac1cc03d8167d21af97d75f1815a070ee31a90c702b4c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3b2d66d36b1ad56b1ab6e2eb8a816740877b40b461c93f125e88621c8378e52\",\"dweb:/ipfs/QmPGvMZzKQvNiWKd8aRzzdW7oAizwrMgcMtnaworDkVHFC\"]},\"lib/v4-core/src/libraries/Hooks.sol\":{\"keccak256\":\"0x27b1c3b8aa3d07d8e3123970695745929315685a5ffaa7342c3ba3582f37fecb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa3bb092dc205eaa1b9defc93e9bbad5f4c5c44e1c4aa531dfca2574c2aba9ba\",\"dweb:/ipfs/QmR1soxkepHNkbGxAMaK4XqhQ4VxWn69dewzGkQJNx5byM\"]},\"lib/v4-core/src/libraries/LPFeeLibrary.sol\":{\"keccak256\":\"0xbf6914e01014e7c1044111feb7df7a3d96bb503b3da827ad8464b1955580d13b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33823c20a91882c9aacdcbb02f0558c05209f4d5954aa6dd4fa17c95664db475\",\"dweb:/ipfs/QmR7owkFgpfztpp1QUg3ut3nw9iPVQqLGP4hzgmZtRUQ2J\"]},\"lib/v4-core/src/libraries/LiquidityMath.sol\":{\"keccak256\":\"0x000ef2eadcc1eb7b2c18a77655f94e76e0e860f605783484657ef65fd6eda353\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a766b620a7a22798b43c6c1f23b5c6cff0ebf588deb89842bad05208d448cd99\",\"dweb:/ipfs/QmVKjaFJdzkqA3ey2Byum8iTCMssWVD8MmVC8rw62Tj5WD\"]},\"lib/v4-core/src/libraries/Lock.sol\":{\"keccak256\":\"0x9338be4b5695f1da5f3d3f7a3eeaf7a356c1045458289586ac0cbe9cef77c6d5\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://485ec42ed6155469d612a9a0c18068ebfbad74448792a338a435503de3ef1b2c\",\"dweb:/ipfs/QmVnnv5u74MYatfRmBgrcfFYQcsMAJMG9jQ6ju8UiydKNF\"]},\"lib/v4-core/src/libraries/NonzeroDeltaCount.sol\":{\"keccak256\":\"0x0666ebd5d3528d7d52c48538296367a4cff97a578cf13365c51983fae3219b87\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d27f1be3bd09d85c53d3e6a539dd6529ddd8b2b764ccb47fd7765fc81f9add59\",\"dweb:/ipfs/QmQdZujNXhKEXQBkKtF5jbdvo1yXMqPDUoBBaF9S5u3Kpm\"]},\"lib/v4-core/src/libraries/ParseBytes.sol\":{\"keccak256\":\"0x7533b13f53ee2c2c55500100b22ffd6e37e7523c27874edc98663d53a8672b15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82449058634fde28a085f3c59a6a5f412550c02181590593fd84c3e8b329aa17\",\"dweb:/ipfs/Qmev4E9Au6SsE4wsArChCwfg94KhHc5gYsEsZUnjF5sRLa\"]},\"lib/v4-core/src/libraries/Pool.sol\":{\"keccak256\":\"0xb8191707c5913f5e2f589cec5167e3fac4a5b86bd84f61fdba0fbe6a8ce8a3a0\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://a609f9c365f05becf61877d9dc767e7825bce8c34607dbfc0f0437a71f6ff407\",\"dweb:/ipfs/QmThDUzLePs2Hbp6XTpRSHT67rdsjQLhdmS6krm8cpKSey\"]},\"lib/v4-core/src/libraries/Position.sol\":{\"keccak256\":\"0xddab2a831f1befb6abf5567e77c4582169ca8156cf69eb4f22d8e87f7226a3f9\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c79fe61b50f3b70cff503abfa6f5643fcbefb9b794855bee1019b1e6d9c083b2\",\"dweb:/ipfs/QmbKmYNQesaMz8bo1b7TMHQcAwaDd3eDPrE5pAdPPZTtk5\"]},\"lib/v4-core/src/libraries/ProtocolFeeLibrary.sol\":{\"keccak256\":\"0xf483001899229ab10f5a626fe1c5866134d9e965b48ce6cf55ce0d7f74f7d8ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ba9211a7f69bbb44649c35211eb29d193c09032ec600064ef9d04b4625dd8ba\",\"dweb:/ipfs/QmQSjQvtguYgMJSkkKRhHjxasfX9xfTbrbcZ1QmjUVb787\"]},\"lib/v4-core/src/libraries/SafeCast.sol\":{\"keccak256\":\"0x42c4a24f996a14d358be397b71f7ec9d7daf666aaec78002c63315a6ee67aa86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3db86e2ba3679105fc32edec656c70282e1fede6cab11217702443f6c26fa59\",\"dweb:/ipfs/QmX4yaaSPdKQzYNRsezjTvZKsubzS8JRTEGFD3fPpTTCcj\"]},\"lib/v4-core/src/libraries/SqrtPriceMath.sol\":{\"keccak256\":\"0xf8079fe6e3460db495451d06b1705e18f1c4075c1af96a31ad313545f7082982\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://582fc51546723a0a8acccf782f69b530bacf9b3ef929458e82569b7121f0b138\",\"dweb:/ipfs/QmSBXcmqZdFsM7M4sRaiyQAxykCeMNFKyKgBcwSMTw1bcF\"]},\"lib/v4-core/src/libraries/SwapMath.sol\":{\"keccak256\":\"0x6baa782ae523269c079cc763639a9b91a25fcfa1743c049c76e43741ef494bd9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://035c337e62e05262a5bd5d3bc85bc9a383c1013001216b429f49cf1e129a0812\",\"dweb:/ipfs/QmU7s4h58Fh2A6mM8yeorZ2ygwEJMQw8zdZLLkHeDoSWxD\"]},\"lib/v4-core/src/libraries/TickBitmap.sol\":{\"keccak256\":\"0x6779f89e28a0b4af6e09d518caf014b7e8fc627400f5561f86fed11635b1458a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a64dee983106de3be3f968be94368c1e37592f5418aa2a39e8dd358d5a962b0d\",\"dweb:/ipfs/QmYuECZTiEeQVxDLYx6pBSSnVrg56Apw75bugQiM3FmGwy\"]},\"lib/v4-core/src/libraries/TickMath.sol\":{\"keccak256\":\"0x4e1a11e154eb06106cb1c4598f06cca5f5ca16eaa33494ba2f0e74981123eca8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a79a57f7b240783b045168d1c4f774ac1812caf8f9a83cb6959a86b0b07b6c70\",\"dweb:/ipfs/QmTb5kvxwDNW8jDuQaqdJ445cCFejNkUqEB17Bjo8UBiva\"]},\"lib/v4-core/src/libraries/UnsafeMath.sol\":{\"keccak256\":\"0xa6e55e0a43a15df2df471d9972cd48f613d07c663ecb8bbeaf7623f6f99bcce4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://02ea6e13879fc5a5f35149a2f1cd8af3a1f0877ff69101dad53841d16f515572\",\"dweb:/ipfs/QmcpL4gdG6hL2w1wqs2Vw4J1EFCwBs9T1Qd4p16CtECQkn\"]},\"lib/v4-core/src/types/BalanceDelta.sol\":{\"keccak256\":\"0xa719c8fe51e0a9524280178f19f6851bcc3b3b60e73618f3d60905d35ae5569f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7436928dc9de35c6c7c5c636cb51adaf295cfd590da83b19a004ae33cbec9ef9\",\"dweb:/ipfs/QmRJ9yZkUpzk4433GX3LgVVL8jwpbSYSUwXcucKisf3v4H\"]},\"lib/v4-core/src/types/BeforeSwapDelta.sol\":{\"keccak256\":\"0x2a774312d91285313d569da1a718c909655da5432310417692097a1d4dc83a78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2c7a0379955cff9c17ab9e61f95e42909aa5947c22740f86ce940d09856f782\",\"dweb:/ipfs/QmaAuo8UBYXsGrVuKh8iRoAAdqwtg1jDq515cW1ZRP5m9K\"]},\"lib/v4-core/src/types/Currency.sol\":{\"keccak256\":\"0x4a0b84b282577ff6f8acf13ec9f4d32dbb9348748b49611d00e68bee96609c93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45f9d62ab3d51b52957279e353853ba1547c3182c9a1e3d1846ada4a90263b01\",\"dweb:/ipfs/QmS8NG84ccQS1yXVD8cv3eKX7J1UKxuJhbUfHTQR2opKF5\"]},\"lib/v4-core/src/types/PoolId.sol\":{\"keccak256\":\"0x308311916ea0f5c2fd878b6a2751eb223d170a69e33f601fae56dfe3c5d392af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://669c2cd7ac17690b5d8831e0bda72822376c3a04b36afed6d31df4d75fe60918\",\"dweb:/ipfs/QmT6EpkxqU8VF3WsgrZ66F3s1cCQRffR95z1HDYZz7ph6y\"]},\"lib/v4-core/src/types/PoolKey.sol\":{\"keccak256\":\"0xf89856e0580d7a4856d3187a76858377ccee9d59702d230c338d84388221b786\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f3118fa189025695c37fdf0bdd1190f085ad097484d3c88cf4c56d1db65f639\",\"dweb:/ipfs/QmamXpgtB8GV1CaFLvqefPWSoikLDhMk1yU4heBnVzU8gi\"]},\"lib/v4-core/src/types/Slot0.sol\":{\"keccak256\":\"0x8b4912fac7e25ea680056748121113f902d56f8b2640f421d5c38d438db11c1b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c19b1ff5b951fb54129268d2be37d82c8bb3ea6e29ac9bc78a8a37794fc082b8\",\"dweb:/ipfs/QmTAQ2mUoiT77hoWJAfn9pyoGy47qaevn45QHrbyovGt2C\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.26+commit.8a97fa7a" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "initialOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        { "inputs": [], "type": "error", "name": "AlreadyUnlocked" },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "currency0",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "currency1",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "CurrenciesOutOfOrderOrEqual"
        },
        { "inputs": [], "type": "error", "name": "CurrencyNotSettled" },
        { "inputs": [], "type": "error", "name": "DelegateCallNotAllowed" },
        { "inputs": [], "type": "error", "name": "InvalidCaller" },
        { "inputs": [], "type": "error", "name": "ManagerLocked" },
        {
          "inputs": [],
          "type": "error",
          "name": "MustClearExactPositiveDelta"
        },
        { "inputs": [], "type": "error", "name": "NonzeroNativeValue" },
        { "inputs": [], "type": "error", "name": "PoolNotInitialized" },
        { "inputs": [], "type": "error", "name": "ProtocolFeeCurrencySynced" },
        {
          "inputs": [
            { "internalType": "uint24", "name": "fee", "type": "uint24" }
          ],
          "type": "error",
          "name": "ProtocolFeeTooLarge"
        },
        { "inputs": [], "type": "error", "name": "SwapAmountCannotBeZero" },
        {
          "inputs": [
            { "internalType": "int24", "name": "tickSpacing", "type": "int24" }
          ],
          "type": "error",
          "name": "TickSpacingTooLarge"
        },
        {
          "inputs": [
            { "internalType": "int24", "name": "tickSpacing", "type": "int24" }
          ],
          "type": "error",
          "name": "TickSpacingTooSmall"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UnauthorizedDynamicLPFeeUpdate"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "PoolId",
              "name": "id",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount0",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount1",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Donate",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "PoolId",
              "name": "id",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "Currency",
              "name": "currency0",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "Currency",
              "name": "currency1",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint24",
              "name": "fee",
              "type": "uint24",
              "indexed": false
            },
            {
              "internalType": "int24",
              "name": "tickSpacing",
              "type": "int24",
              "indexed": false
            },
            {
              "internalType": "contract IHooks",
              "name": "hooks",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint160",
              "name": "sqrtPriceX96",
              "type": "uint160",
              "indexed": false
            },
            {
              "internalType": "int24",
              "name": "tick",
              "type": "int24",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialize",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "PoolId",
              "name": "id",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "int24",
              "name": "tickLower",
              "type": "int24",
              "indexed": false
            },
            {
              "internalType": "int24",
              "name": "tickUpper",
              "type": "int24",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "liquidityDelta",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ModifyLiquidity",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "protocolFeeController",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ProtocolFeeControllerUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "PoolId",
              "name": "id",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint24",
              "name": "protocolFee",
              "type": "uint24",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ProtocolFeeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "PoolId",
              "name": "id",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "int128",
              "name": "amount0",
              "type": "int128",
              "indexed": false
            },
            {
              "internalType": "int128",
              "name": "amount1",
              "type": "int128",
              "indexed": false
            },
            {
              "internalType": "uint160",
              "name": "sqrtPriceX96",
              "type": "uint160",
              "indexed": false
            },
            {
              "internalType": "uint128",
              "name": "liquidity",
              "type": "uint128",
              "indexed": false
            },
            {
              "internalType": "int24",
              "name": "tick",
              "type": "int24",
              "indexed": false
            },
            {
              "internalType": "uint24",
              "name": "fee",
              "type": "uint24",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Swap",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "caller",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address" },
            { "internalType": "address", "name": "spender", "type": "address" },
            { "internalType": "uint256", "name": "id", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            { "internalType": "uint256", "name": "amount", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "spender", "type": "address" },
            { "internalType": "uint256", "name": "id", "type": "uint256" },
            { "internalType": "uint256", "name": "amount", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address" },
            { "internalType": "uint256", "name": "id", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            { "internalType": "uint256", "name": "balance", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "from", "type": "address" },
            { "internalType": "uint256", "name": "id", "type": "uint256" },
            { "internalType": "uint256", "name": "amount", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "Currency",
              "name": "currency",
              "type": "address"
            },
            { "internalType": "uint256", "name": "amount", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "clear"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "Currency",
              "name": "currency",
              "type": "address"
            },
            { "internalType": "uint256", "name": "amount", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "collectProtocolFees",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amountCollected",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct PoolKey",
              "name": "key",
              "type": "tuple",
              "components": [
                {
                  "internalType": "Currency",
                  "name": "currency0",
                  "type": "address"
                },
                {
                  "internalType": "Currency",
                  "name": "currency1",
                  "type": "address"
                },
                { "internalType": "uint24", "name": "fee", "type": "uint24" },
                {
                  "internalType": "int24",
                  "name": "tickSpacing",
                  "type": "int24"
                },
                {
                  "internalType": "contract IHooks",
                  "name": "hooks",
                  "type": "address"
                }
              ]
            },
            { "internalType": "uint256", "name": "amount0", "type": "uint256" },
            { "internalType": "uint256", "name": "amount1", "type": "uint256" },
            { "internalType": "bytes", "name": "hookData", "type": "bytes" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "donate",
          "outputs": [
            {
              "internalType": "BalanceDelta",
              "name": "delta",
              "type": "int256"
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "slot", "type": "bytes32" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "extsload",
          "outputs": [
            { "internalType": "bytes32", "name": "", "type": "bytes32" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "startSlot",
              "type": "bytes32"
            },
            { "internalType": "uint256", "name": "nSlots", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "extsload",
          "outputs": [
            { "internalType": "bytes32[]", "name": "", "type": "bytes32[]" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32[]",
              "name": "slots",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "extsload",
          "outputs": [
            { "internalType": "bytes32[]", "name": "", "type": "bytes32[]" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32[]",
              "name": "slots",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "exttload",
          "outputs": [
            { "internalType": "bytes32[]", "name": "", "type": "bytes32[]" }
          ]
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "slot", "type": "bytes32" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "exttload",
          "outputs": [
            { "internalType": "bytes32", "name": "", "type": "bytes32" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct PoolKey",
              "name": "key",
              "type": "tuple",
              "components": [
                {
                  "internalType": "Currency",
                  "name": "currency0",
                  "type": "address"
                },
                {
                  "internalType": "Currency",
                  "name": "currency1",
                  "type": "address"
                },
                { "internalType": "uint24", "name": "fee", "type": "uint24" },
                {
                  "internalType": "int24",
                  "name": "tickSpacing",
                  "type": "int24"
                },
                {
                  "internalType": "contract IHooks",
                  "name": "hooks",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "uint160",
              "name": "sqrtPriceX96",
              "type": "uint160"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize",
          "outputs": [
            { "internalType": "int24", "name": "tick", "type": "int24" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address" },
            { "internalType": "address", "name": "operator", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isOperator",
          "outputs": [
            { "internalType": "bool", "name": "isOperator", "type": "bool" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "id", "type": "uint256" },
            { "internalType": "uint256", "name": "amount", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [
            {
              "internalType": "struct PoolKey",
              "name": "key",
              "type": "tuple",
              "components": [
                {
                  "internalType": "Currency",
                  "name": "currency0",
                  "type": "address"
                },
                {
                  "internalType": "Currency",
                  "name": "currency1",
                  "type": "address"
                },
                { "internalType": "uint24", "name": "fee", "type": "uint24" },
                {
                  "internalType": "int24",
                  "name": "tickSpacing",
                  "type": "int24"
                },
                {
                  "internalType": "contract IHooks",
                  "name": "hooks",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "struct IPoolManager.ModifyLiquidityParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "int24",
                  "name": "tickLower",
                  "type": "int24"
                },
                {
                  "internalType": "int24",
                  "name": "tickUpper",
                  "type": "int24"
                },
                {
                  "internalType": "int256",
                  "name": "liquidityDelta",
                  "type": "int256"
                },
                { "internalType": "bytes32", "name": "salt", "type": "bytes32" }
              ]
            },
            { "internalType": "bytes", "name": "hookData", "type": "bytes" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "modifyLiquidity",
          "outputs": [
            {
              "internalType": "BalanceDelta",
              "name": "callerDelta",
              "type": "int256"
            },
            {
              "internalType": "BalanceDelta",
              "name": "feesAccrued",
              "type": "int256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "protocolFeeController",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "Currency",
              "name": "currency",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "protocolFeesAccrued",
          "outputs": [
            { "internalType": "uint256", "name": "amount", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            { "internalType": "bool", "name": "approved", "type": "bool" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOperator",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct PoolKey",
              "name": "key",
              "type": "tuple",
              "components": [
                {
                  "internalType": "Currency",
                  "name": "currency0",
                  "type": "address"
                },
                {
                  "internalType": "Currency",
                  "name": "currency1",
                  "type": "address"
                },
                { "internalType": "uint24", "name": "fee", "type": "uint24" },
                {
                  "internalType": "int24",
                  "name": "tickSpacing",
                  "type": "int24"
                },
                {
                  "internalType": "contract IHooks",
                  "name": "hooks",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "uint24",
              "name": "newProtocolFee",
              "type": "uint24"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setProtocolFee"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "controller",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setProtocolFeeController"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "settle",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "settleFor",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct PoolKey",
              "name": "key",
              "type": "tuple",
              "components": [
                {
                  "internalType": "Currency",
                  "name": "currency0",
                  "type": "address"
                },
                {
                  "internalType": "Currency",
                  "name": "currency1",
                  "type": "address"
                },
                { "internalType": "uint24", "name": "fee", "type": "uint24" },
                {
                  "internalType": "int24",
                  "name": "tickSpacing",
                  "type": "int24"
                },
                {
                  "internalType": "contract IHooks",
                  "name": "hooks",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "struct IPoolManager.SwapParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bool",
                  "name": "zeroForOne",
                  "type": "bool"
                },
                {
                  "internalType": "int256",
                  "name": "amountSpecified",
                  "type": "int256"
                },
                {
                  "internalType": "uint160",
                  "name": "sqrtPriceLimitX96",
                  "type": "uint160"
                }
              ]
            },
            { "internalType": "bytes", "name": "hookData", "type": "bytes" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "swap",
          "outputs": [
            {
              "internalType": "BalanceDelta",
              "name": "swapDelta",
              "type": "int256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "Currency",
              "name": "currency",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "sync"
        },
        {
          "inputs": [
            {
              "internalType": "Currency",
              "name": "currency",
              "type": "address"
            },
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "amount", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "take"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            { "internalType": "uint256", "name": "id", "type": "uint256" },
            { "internalType": "uint256", "name": "amount", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "sender", "type": "address" },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            { "internalType": "uint256", "name": "id", "type": "uint256" },
            { "internalType": "uint256", "name": "amount", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "newOwner", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            { "internalType": "bytes", "name": "data", "type": "bytes" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unlock",
          "outputs": [
            { "internalType": "bytes", "name": "result", "type": "bytes" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct PoolKey",
              "name": "key",
              "type": "tuple",
              "components": [
                {
                  "internalType": "Currency",
                  "name": "currency0",
                  "type": "address"
                },
                {
                  "internalType": "Currency",
                  "name": "currency1",
                  "type": "address"
                },
                { "internalType": "uint24", "name": "fee", "type": "uint24" },
                {
                  "internalType": "int24",
                  "name": "tickSpacing",
                  "type": "int24"
                },
                {
                  "internalType": "contract IHooks",
                  "name": "hooks",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "uint24",
              "name": "newDynamicLPFee",
              "type": "uint24"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateDynamicLPFee"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256,uint256)": {
            "params": {
              "amount": "The amount of the token.",
              "id": "The id of the token.",
              "spender": "The address of the spender."
            },
            "returns": { "_0": "bool True, always" }
          },
          "burn(address,uint256,uint256)": {
            "details": "The id is converted to a uint160 to correspond to a currency address If the upper 12 bytes are not 0, they will be 0-ed out",
            "params": {
              "amount": "The amount of currency to burn",
              "from": "The address to burn the tokens from",
              "id": "The currency address to burn from ERC6909s, as a uint256"
            }
          },
          "clear(address,uint256)": {
            "details": "This could be used to clear a balance that is considered dust. Additionally, the amount must be the exact positive balance. This is to enforce that the caller is aware of the amount being cleared."
          },
          "collectProtocolFees(address,address,uint256)": {
            "details": "This will revert if the contract is unlocked",
            "params": {
              "amount": "The amount of currency to withdraw",
              "currency": "The currency to withdraw",
              "recipient": "The address to receive the protocol fees"
            },
            "returns": {
              "amountCollected": "The amount of currency successfully withdrawn"
            }
          },
          "donate((address,address,uint24,int24,address),uint256,uint256,bytes)": {
            "details": "Calls to donate can be frontrun adding just-in-time liquidity, with the aim of receiving a portion donated funds. Donors should keep this in mind when designing donation mechanisms.This function donates to in-range LPs at slot0.tick. In certain edge-cases of the swap algorithm, the `sqrtPrice` of a pool can be at the lower boundary of tick `n`, but the `slot0.tick` of the pool is already `n - 1`. In this case a call to `donate` would donate to tick `n - 1` (slot0.tick) not tick `n` (getTickAtSqrtPrice(slot0.sqrtPriceX96)). Read the comments in `Pool.swap()` for more information about this.",
            "params": {
              "amount0": "The amount of currency0 to donate",
              "amount1": "The amount of currency1 to donate",
              "hookData": "The data to pass through to the donate hooks",
              "key": "The key of the pool to donate to"
            },
            "returns": {
              "delta": "BalanceDelta The delta of the caller after the donate"
            }
          },
          "extsload(bytes32)": {
            "params": { "slot": "Key of slot to sload" },
            "returns": { "_0": "The value of the slot as bytes32" }
          },
          "extsload(bytes32,uint256)": {
            "params": {
              "nSlots": "Number of slots to load into return value",
              "startSlot": "Key of slot to start sloading from"
            },
            "returns": { "_0": "List of loaded values." }
          },
          "extsload(bytes32[])": {
            "params": { "slots": "List of slots to SLOAD from." },
            "returns": { "_0": "List of loaded values." }
          },
          "exttload(bytes32)": {
            "params": { "slot": "Key of slot to tload" },
            "returns": { "_0": "The value of the slot as bytes32" }
          },
          "exttload(bytes32[])": {
            "params": { "slots": "List of slots to tload" },
            "returns": { "_0": "List of loaded values" }
          },
          "initialize((address,address,uint24,int24,address),uint160)": {
            "details": "A swap fee totaling MAX_SWAP_FEE (100%) makes exact output swaps impossible since the input is entirely consumed by the fee",
            "params": {
              "key": "The pool key for the pool to initialize",
              "sqrtPriceX96": "The initial square root price"
            },
            "returns": { "tick": "The initial tick of the pool" }
          },
          "mint(address,uint256,uint256)": {
            "details": "The id is converted to a uint160 to correspond to a currency address If the upper 12 bytes are not 0, they will be 0-ed out",
            "params": {
              "amount": "The amount of currency to mint",
              "id": "The currency address to mint to ERC6909s, as a uint256",
              "to": "The address to mint the tokens to"
            }
          },
          "modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
            "details": "Poke by calling with a zero liquidityDeltaNote that feesAccrued can be artificially inflated by a malicious actor and integrators should be careful using the value For pools with a single liquidity position, actors can donate to themselves to inflate feeGrowthGlobal (and consequently feesAccrued) atomically donating and collecting fees in the same unlockCallback may make the inflated value more extreme",
            "params": {
              "hookData": "The data to pass through to the add/removeLiquidity hooks",
              "key": "The pool to modify liquidity in",
              "params": "The parameters for modifying the liquidity"
            },
            "returns": {
              "callerDelta": "The balance delta of the caller of modifyLiquidity. This is the total of both principal, fee deltas, and hook deltas if applicable",
              "feesAccrued": "The balance delta of the fees generated in the liquidity range. Returned for informational purposes"
            }
          },
          "setOperator(address,bool)": {
            "params": {
              "approved": "The approval status.",
              "operator": "The address of the operator."
            },
            "returns": { "_0": "bool True, always" }
          },
          "setProtocolFee((address,address,uint24,int24,address),uint24)": {
            "params": {
              "key": "The key of the pool to set a protocol fee for",
              "newProtocolFee": "The fee to set"
            }
          },
          "setProtocolFeeController(address)": {
            "params": { "controller": "The new protocol fee controller" }
          },
          "settle()": { "returns": { "_0": "The amount of currency settled" } },
          "settleFor(address)": {
            "params": { "recipient": "The address to credit for the payment" },
            "returns": { "_0": "The amount of currency settled" }
          },
          "swap((address,address,uint24,int24,address),(bool,int256,uint160),bytes)": {
            "details": "Swapping on low liquidity pools may cause unexpected swap amounts when liquidity available is less than amountSpecified. Additionally note that if interacting with hooks that have the BEFORE_SWAP_RETURNS_DELTA_FLAG or AFTER_SWAP_RETURNS_DELTA_FLAG the hook may alter the swap input/output. Integrators should perform checks on the returned swapDelta.",
            "params": {
              "hookData": "The data to pass through to the swap hooks",
              "key": "The pool to swap in",
              "params": "The parameters for swapping"
            },
            "returns": {
              "swapDelta": "The balance delta of the address swapping"
            }
          },
          "sync(address)": {
            "details": "This MUST be called before any ERC20 tokens are sent into the contract, but can be skipped for native tokens because the amount to settle is determined by the sent value. However, if an ERC20 token has been synced and not settled, and the caller instead wants to settle native funds, this function can be called with the native currency to then be able to settle the native currency"
          },
          "take(address,address,uint256)": {
            "details": "Will revert if the requested amount is not available, consider using `mint` insteadCan also be used as a mechanism for free flash loans",
            "params": {
              "amount": "The amount of currency to withdraw",
              "currency": "The currency to withdraw from the pool manager",
              "to": "The address to withdraw to"
            }
          },
          "transfer(address,uint256,uint256)": {
            "params": {
              "amount": "The amount of the token.",
              "id": "The id of the token.",
              "receiver": "The address of the receiver."
            },
            "returns": {
              "_0": "bool True, always, unless the function reverts"
            }
          },
          "transferFrom(address,address,uint256,uint256)": {
            "params": {
              "amount": "The amount of the token.",
              "id": "The id of the token.",
              "receiver": "The address of the receiver.",
              "sender": "The address of the sender."
            },
            "returns": {
              "_0": "bool True, always, unless the function reverts"
            }
          },
          "unlock(bytes)": {
            "details": "The only functions callable without an unlocking are `initialize` and `updateDynamicLPFee`",
            "params": {
              "data": "Any data to pass to the callback, via `IUnlockCallback(msg.sender).unlockCallback(data)`"
            },
            "returns": {
              "result": "The data returned by the call to `IUnlockCallback(msg.sender).unlockCallback(data)`"
            }
          },
          "updateDynamicLPFee((address,address,uint24,int24,address),uint24)": {
            "details": "A swap fee totaling MAX_SWAP_FEE (100%) makes exact output swaps impossible since the input is entirely consumed by the fee",
            "params": {
              "key": "The key of the pool to update dynamic LP fees for",
              "newDynamicLPFee": "The new dynamic pool LP fee"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "allowance(address,address,uint256)": {
            "notice": "Spender allowance of an id."
          },
          "approve(address,uint256,uint256)": {
            "notice": "Approves an amount of an id to a spender."
          },
          "balanceOf(address,uint256)": { "notice": "Owner balance of an id." },
          "burn(address,uint256,uint256)": {
            "notice": "Called by the user to move value from ERC6909 balance"
          },
          "clear(address,uint256)": {
            "notice": "WARNING - Any currency that is cleared, will be non-retrievable, and locked in the contract permanently. A call to clear will zero out a positive balance WITHOUT a corresponding transfer."
          },
          "collectProtocolFees(address,address,uint256)": {
            "notice": "Collects the protocol fees for a given recipient and currency, returning the amount collected"
          },
          "donate((address,address,uint24,int24,address),uint256,uint256,bytes)": {
            "notice": "Donate the given currency amounts to the in-range liquidity providers of a pool"
          },
          "extsload(bytes32)": {
            "notice": "Called by external contracts to access granular pool state"
          },
          "extsload(bytes32,uint256)": {
            "notice": "Called by external contracts to access granular pool state"
          },
          "extsload(bytes32[])": {
            "notice": "Called by external contracts to access sparse pool state"
          },
          "exttload(bytes32)": {
            "notice": "Called by external contracts to access transient storage of the contract"
          },
          "exttload(bytes32[])": {
            "notice": "Called by external contracts to access sparse transient pool state"
          },
          "initialize((address,address,uint24,int24,address),uint160)": {
            "notice": "Initialize the state for a given pool ID"
          },
          "isOperator(address,address)": {
            "notice": "Checks if a spender is approved by an owner as an operator"
          },
          "mint(address,uint256,uint256)": {
            "notice": "Called by the user to move value into ERC6909 balance"
          },
          "modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
            "notice": "Modify the liquidity for the given pool"
          },
          "protocolFeeController()": {
            "notice": "Returns the current protocol fee controller address"
          },
          "protocolFeesAccrued(address)": {
            "notice": "Given a currency address, returns the protocol fees accrued in that currency"
          },
          "setOperator(address,bool)": {
            "notice": "Sets or removes an operator for the caller."
          },
          "setProtocolFee((address,address,uint24,int24,address),uint24)": {
            "notice": "Sets the protocol fee for the given pool"
          },
          "setProtocolFeeController(address)": {
            "notice": "Sets the protocol fee controller"
          },
          "settle()": { "notice": "Called by the user to pay what is owed" },
          "settleFor(address)": {
            "notice": "Called by the user to pay on behalf of another address"
          },
          "swap((address,address,uint24,int24,address),(bool,int256,uint160),bytes)": {
            "notice": "Swap against the given pool"
          },
          "sync(address)": {
            "notice": "Writes the current ERC20 balance of the specified currency to transient storage This is used to checkpoint balances for the manager and derive deltas for the caller."
          },
          "take(address,address,uint256)": {
            "notice": "Called by the user to net out some value owed to the user"
          },
          "transfer(address,uint256,uint256)": {
            "notice": "Transfers an amount of an id from the caller to a receiver."
          },
          "transferFrom(address,address,uint256,uint256)": {
            "notice": "Transfers an amount of an id from a sender to a receiver."
          },
          "unlock(bytes)": {
            "notice": "All interactions on the contract that account deltas require unlocking. A caller that calls `unlock` must implement `IUnlockCallback(msg.sender).unlockCallback(data)`, where they interact with the remaining functions on this contract."
          },
          "updateDynamicLPFee((address,address,uint24,int24,address),uint24)": {
            "notice": "Updates the pools lp fees for the a pool that has enabled dynamic lp fees."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@account-abstraction/=lib/account-abstraction/",
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "forge-std/=lib/forge-std/src/",
        "permit2/=lib/v4-periphery/lib/permit2/",
        "solmate/=lib/v4-core/lib/solmate/",
        "v4-core/=lib/v4-core/",
        "v4-periphery/=lib/v4-periphery/"
      ],
      "optimizer": { "enabled": true, "runs": 200 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": { "lib/v4-core/src/PoolManager.sol": "PoolManager" },
      "evmVersion": "cancun",
      "libraries": {}
    },
    "sources": {
      "lib/v4-core/lib/solmate/src/auth/Owned.sol": {
        "keccak256": "0xfedb27d14c508342c33eb067c9a02eabcdb0f9dcf93b04ded1001f580d12d0ea",
        "urls": [
          "bzz-raw://1ff52bbee698b9cf9e4574615e6550be0887ccf355f6571e23d6f25b332e79b4",
          "dweb:/ipfs/QmVorA2apojVRStzS7h8aFccR3Uv32G6HVtBtFHZrE7YXx"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/v4-core/src/ERC6909.sol": {
        "keccak256": "0x22476a1c183be1b547a509b3e6906abaccb6408375f798fce805ff7877aca09f",
        "urls": [
          "bzz-raw://e85580e1563ea0556705132fb6bd038ca4aa355749039923853ebcb76b7c84e6",
          "dweb:/ipfs/QmVoxPrbagRKpFdRWoaCSKmStYLZrhNFuedcuyGycSGR7q"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/ERC6909Claims.sol": {
        "keccak256": "0xf496ef3a5a9bf4f4aa2eec951dbeff09a01ef058bb9f64b1664cf46c9e85cd49",
        "urls": [
          "bzz-raw://2a0a97c359a7a4c526ba9fc4ceb20af8050f9cf7886ea7e1f38c9c10b4a3750c",
          "dweb:/ipfs/QmPy6pCQbvzCdJRqG1thHRSwEZoLBAaLo3KQnueL3wxb8i"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/Extsload.sol": {
        "keccak256": "0x784074bd04a1541c7c6ace074e30245746133fd37c3ba16b025dce394db986ce",
        "urls": [
          "bzz-raw://35f1f4fb306bf01e98b7eca012b85f3ab978b39fa5136193363e2519c4435e51",
          "dweb:/ipfs/QmeGrjGMt71dJymVhkEadh5CuCW5GxRqNEZLi5AJxvC5tU"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/Exttload.sol": {
        "keccak256": "0x769ee2733a08112c652274f4b972c45fb56cc46109f233b9a30f81561b15dd54",
        "urls": [
          "bzz-raw://dd19e88d50ae77c1ed5581baca1c75b3fb828d0b58cded90188d55c4e336266c",
          "dweb:/ipfs/Qmc8YM6Tfpwwa4qivHHzRxNdhZzdzGiD7VexWsDvkaQTxG"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/NoDelegateCall.sol": {
        "keccak256": "0xacb81aecb7c74c86650a035462dae38c313b4b7b5842e14b645f864f61da2b51",
        "urls": [
          "bzz-raw://363a0e15fc30ea68a5d52a78772facecde6433ea156e3ec2ce25068c97cd5ad6",
          "dweb:/ipfs/QmYhWaF3wH71SDx5TZr9qEXXQf5FYQvdjoo3B2qWiAbm18"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/PoolManager.sol": {
        "keccak256": "0x9a53702537a80de1af6a1db957203c2da597b72272b8eaff8a265712a182983f",
        "urls": [
          "bzz-raw://44d8c5d5540222a2cafcdf48465ccd546f7db32dce2cbcef5c4762324412f40a",
          "dweb:/ipfs/Qmd83DfRYTc55Rh1GnEsuFVv3ewiTPt9HaaZTtVAciURFe"
        ],
        "license": "BUSL-1.1"
      },
      "lib/v4-core/src/ProtocolFees.sol": {
        "keccak256": "0x81362ef1d19670b41cefc2b6f2dc0333b6743fe39a1929edd36bd9b6a1111755",
        "urls": [
          "bzz-raw://de483bbd8bf9a53b9644d7f9a6a6fe77ae527b755cf29e1db8725de89e70c7aa",
          "dweb:/ipfs/Qmex3PcgJGbYsuDNaMXc8mg5fW1DNaPGiNToPpAAzz6GEq"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/interfaces/IExtsload.sol": {
        "keccak256": "0x80b53ca4907d6f0088c3b931f2b72cad1dc4615a95094d96bd0fb8dff8d5ba43",
        "urls": [
          "bzz-raw://375c69148622aab7a3537d5fd37d373a8e9731022c8d87bdaee46233b0a99fe1",
          "dweb:/ipfs/QmXFjdoYRxsA5B1kyuxEXgNf3FBoL1zPvy26Qy8EtpdFRN"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/interfaces/IExttload.sol": {
        "keccak256": "0xc6b68283ebd8d1c789df536756726eed51c589134bb20821b236a0d22a135937",
        "urls": [
          "bzz-raw://294394f72dfc219689209f4130d85601dfd0d63c8d47578050d312db70f9b6c8",
          "dweb:/ipfs/QmTDMQ3oxCGHgEBU48a3Lp4S1rRjc8vVCxkhE5ZNej1bsY"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/interfaces/IHooks.sol": {
        "keccak256": "0x4c9571aed0c2b6ef11832545554fc11ffdb03746daaf5c73683c00600bfc7ec0",
        "urls": [
          "bzz-raw://e78b34b58ce9de91b91943b4f3cc3ce121d0b151e123e8a600ac5ef64d91db6c",
          "dweb:/ipfs/QmRkaQnPCYwLrXgbpGujJTx32PaZK63KSPJJV1XmnQuCMb"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/interfaces/IPoolManager.sol": {
        "keccak256": "0x3534f00531038e77ab8a7fc4d0a6e0993ee53fb7a396b1324ad917318ea46cea",
        "urls": [
          "bzz-raw://0a4a7e771828dc40848485b568a1cf514f553ace6653f4f4d1ad3f3e9cdb6c27",
          "dweb:/ipfs/QmTjzQ7KVYnrEWtxPER2E4MXzycgcznfzSDsZtd5turk5V"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/interfaces/IProtocolFees.sol": {
        "keccak256": "0x32a666e588a2f66334430357bb1e2424fe7eebeb98a3364b1dd16eb6ccca9848",
        "urls": [
          "bzz-raw://85751d302125881f72e5f8af051c2d5d9b1f606ebaea8ca7d04fccdd27cc252d",
          "dweb:/ipfs/QmeRwomeh9NWm6A6fgNA4KZPQZHPpdKsPQyYsHSFmvud7J"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/interfaces/callback/IUnlockCallback.sol": {
        "keccak256": "0x58c82f2bd9d7c097ed09bd0991fedc403b0ec270eb3d0158bfb095c06a03d719",
        "urls": [
          "bzz-raw://91168ca26a10980df2cdc3fbfe8ddf372c002b7ef19e3c59a0c9870d64198f1b",
          "dweb:/ipfs/QmUSpaM825vd1SwvF38esgbdLgYiPwefKaFERTWvUi6uSK"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/interfaces/external/IERC20Minimal.sol": {
        "keccak256": "0xeccadf1bf69ba2eb51f2fe4fa511bc7bb05bbd6b9f9a3cb8e5d83d9582613e0f",
        "urls": [
          "bzz-raw://118757369892687b99ef46ce28d6861f62c098285bd7687a4f17f7e44e5f81de",
          "dweb:/ipfs/QmUxqbYqQtcEwwFbb9e6BBMePEaSgN8C45v6RKubD4ib8d"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/interfaces/external/IERC6909Claims.sol": {
        "keccak256": "0xa586f345739e52b0488a0fe40b6e375cce67fdd25758408b0efcb5133ad96a48",
        "urls": [
          "bzz-raw://e8c557b7e52abdbbd82e415a1acc27921446a7fd090b7d4877e52be72619547f",
          "dweb:/ipfs/QmXE2KNPbXmGX8BQF3ei6zhzRTnhoTQg39XmqMnkhbr6QK"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/libraries/BitMath.sol": {
        "keccak256": "0x51b9be4f5c4fd3e80cbc9631a65244a2eb2be250b6b7f128a2035080e18aee8d",
        "urls": [
          "bzz-raw://fe98bbd5498e912146b9319827fc63621eb66ff55d5baae0fa02a7a972ab8d1e",
          "dweb:/ipfs/QmY5hCuyrtgsJtk4AavrxcvBkRrChfr4N6ZnhdC8roPpNi"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/libraries/CurrencyDelta.sol": {
        "keccak256": "0x80dbd898cf0f90c5c27192689b16c34edc765d6ab21b8358e3bb792c7fef238c",
        "urls": [
          "bzz-raw://107698da024313f132d9fe28deb920b5c03d14624889c3ce5720e588f03635bb",
          "dweb:/ipfs/QmQteUbhj5SsWbvSF6U8niBUSrETqVbEwULc8E7vS4Kbnn"
        ],
        "license": "BUSL-1.1"
      },
      "lib/v4-core/src/libraries/CurrencyReserves.sol": {
        "keccak256": "0x1576616129933fcdf3b684cea33cffd9c95e18fafbd2832a8c48ac3d8526d4c3",
        "urls": [
          "bzz-raw://33b050efb9b81803b18f562271e7cca2ec5362c4d505860d6419b4a345636725",
          "dweb:/ipfs/QmQtFtTwKZ5pFVGD2ENDUXvp7ECFvzqeCuJ1miJcUHdmiX"
        ],
        "license": "BUSL-1.1"
      },
      "lib/v4-core/src/libraries/CustomRevert.sol": {
        "keccak256": "0x111ed3031b6990c80a93ae35dde6b6ac0b7e6af471388fdd7461e91edda9b7de",
        "urls": [
          "bzz-raw://c9ea883c98d6ae1829160d0977bb5195761cfd5bc81692d0a941f45717f594cd",
          "dweb:/ipfs/QmZPwxzaeMNv536wzrAMrMswu7vMHuqPVpjcqL3YvCMoxt"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/libraries/FixedPoint128.sol": {
        "keccak256": "0xad236e10853f4b4b20a35a9bb52b857c4fc79874846b7e444e06ead7f2630542",
        "urls": [
          "bzz-raw://0de1f9a06520b1a689660943faa14fc0b8344ab41fab9e6012ea34bff4b9b3eb",
          "dweb:/ipfs/QmRNMPTyko7W6d6KxuTsnDBa9oZgDK4xiwRRq3H9ASTbwy"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/libraries/FixedPoint96.sol": {
        "keccak256": "0xef5c3fd41aee26bb12aa1c32873cfee88e67eddfe7c2b32283786265ac669741",
        "urls": [
          "bzz-raw://4de298d02f662a1c36c7be0a150f18c2a161408a5d3e48432e707efd01fac9a4",
          "dweb:/ipfs/QmSiM4oeMmLVKmAtJXz2feYkv4R9ZcyBpkTRW5Nhw5KDyJ"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/libraries/FullMath.sol": {
        "keccak256": "0x4fc73a00817193fd3cac1cc03d8167d21af97d75f1815a070ee31a90c702b4c2",
        "urls": [
          "bzz-raw://c3b2d66d36b1ad56b1ab6e2eb8a816740877b40b461c93f125e88621c8378e52",
          "dweb:/ipfs/QmPGvMZzKQvNiWKd8aRzzdW7oAizwrMgcMtnaworDkVHFC"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/libraries/Hooks.sol": {
        "keccak256": "0x27b1c3b8aa3d07d8e3123970695745929315685a5ffaa7342c3ba3582f37fecb",
        "urls": [
          "bzz-raw://fa3bb092dc205eaa1b9defc93e9bbad5f4c5c44e1c4aa531dfca2574c2aba9ba",
          "dweb:/ipfs/QmR1soxkepHNkbGxAMaK4XqhQ4VxWn69dewzGkQJNx5byM"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/libraries/LPFeeLibrary.sol": {
        "keccak256": "0xbf6914e01014e7c1044111feb7df7a3d96bb503b3da827ad8464b1955580d13b",
        "urls": [
          "bzz-raw://33823c20a91882c9aacdcbb02f0558c05209f4d5954aa6dd4fa17c95664db475",
          "dweb:/ipfs/QmR7owkFgpfztpp1QUg3ut3nw9iPVQqLGP4hzgmZtRUQ2J"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/libraries/LiquidityMath.sol": {
        "keccak256": "0x000ef2eadcc1eb7b2c18a77655f94e76e0e860f605783484657ef65fd6eda353",
        "urls": [
          "bzz-raw://a766b620a7a22798b43c6c1f23b5c6cff0ebf588deb89842bad05208d448cd99",
          "dweb:/ipfs/QmVKjaFJdzkqA3ey2Byum8iTCMssWVD8MmVC8rw62Tj5WD"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/libraries/Lock.sol": {
        "keccak256": "0x9338be4b5695f1da5f3d3f7a3eeaf7a356c1045458289586ac0cbe9cef77c6d5",
        "urls": [
          "bzz-raw://485ec42ed6155469d612a9a0c18068ebfbad74448792a338a435503de3ef1b2c",
          "dweb:/ipfs/QmVnnv5u74MYatfRmBgrcfFYQcsMAJMG9jQ6ju8UiydKNF"
        ],
        "license": "BUSL-1.1"
      },
      "lib/v4-core/src/libraries/NonzeroDeltaCount.sol": {
        "keccak256": "0x0666ebd5d3528d7d52c48538296367a4cff97a578cf13365c51983fae3219b87",
        "urls": [
          "bzz-raw://d27f1be3bd09d85c53d3e6a539dd6529ddd8b2b764ccb47fd7765fc81f9add59",
          "dweb:/ipfs/QmQdZujNXhKEXQBkKtF5jbdvo1yXMqPDUoBBaF9S5u3Kpm"
        ],
        "license": "BUSL-1.1"
      },
      "lib/v4-core/src/libraries/ParseBytes.sol": {
        "keccak256": "0x7533b13f53ee2c2c55500100b22ffd6e37e7523c27874edc98663d53a8672b15",
        "urls": [
          "bzz-raw://82449058634fde28a085f3c59a6a5f412550c02181590593fd84c3e8b329aa17",
          "dweb:/ipfs/Qmev4E9Au6SsE4wsArChCwfg94KhHc5gYsEsZUnjF5sRLa"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/libraries/Pool.sol": {
        "keccak256": "0xb8191707c5913f5e2f589cec5167e3fac4a5b86bd84f61fdba0fbe6a8ce8a3a0",
        "urls": [
          "bzz-raw://a609f9c365f05becf61877d9dc767e7825bce8c34607dbfc0f0437a71f6ff407",
          "dweb:/ipfs/QmThDUzLePs2Hbp6XTpRSHT67rdsjQLhdmS6krm8cpKSey"
        ],
        "license": "BUSL-1.1"
      },
      "lib/v4-core/src/libraries/Position.sol": {
        "keccak256": "0xddab2a831f1befb6abf5567e77c4582169ca8156cf69eb4f22d8e87f7226a3f9",
        "urls": [
          "bzz-raw://c79fe61b50f3b70cff503abfa6f5643fcbefb9b794855bee1019b1e6d9c083b2",
          "dweb:/ipfs/QmbKmYNQesaMz8bo1b7TMHQcAwaDd3eDPrE5pAdPPZTtk5"
        ],
        "license": "BUSL-1.1"
      },
      "lib/v4-core/src/libraries/ProtocolFeeLibrary.sol": {
        "keccak256": "0xf483001899229ab10f5a626fe1c5866134d9e965b48ce6cf55ce0d7f74f7d8ec",
        "urls": [
          "bzz-raw://6ba9211a7f69bbb44649c35211eb29d193c09032ec600064ef9d04b4625dd8ba",
          "dweb:/ipfs/QmQSjQvtguYgMJSkkKRhHjxasfX9xfTbrbcZ1QmjUVb787"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/libraries/SafeCast.sol": {
        "keccak256": "0x42c4a24f996a14d358be397b71f7ec9d7daf666aaec78002c63315a6ee67aa86",
        "urls": [
          "bzz-raw://c3db86e2ba3679105fc32edec656c70282e1fede6cab11217702443f6c26fa59",
          "dweb:/ipfs/QmX4yaaSPdKQzYNRsezjTvZKsubzS8JRTEGFD3fPpTTCcj"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/libraries/SqrtPriceMath.sol": {
        "keccak256": "0xf8079fe6e3460db495451d06b1705e18f1c4075c1af96a31ad313545f7082982",
        "urls": [
          "bzz-raw://582fc51546723a0a8acccf782f69b530bacf9b3ef929458e82569b7121f0b138",
          "dweb:/ipfs/QmSBXcmqZdFsM7M4sRaiyQAxykCeMNFKyKgBcwSMTw1bcF"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/libraries/SwapMath.sol": {
        "keccak256": "0x6baa782ae523269c079cc763639a9b91a25fcfa1743c049c76e43741ef494bd9",
        "urls": [
          "bzz-raw://035c337e62e05262a5bd5d3bc85bc9a383c1013001216b429f49cf1e129a0812",
          "dweb:/ipfs/QmU7s4h58Fh2A6mM8yeorZ2ygwEJMQw8zdZLLkHeDoSWxD"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/libraries/TickBitmap.sol": {
        "keccak256": "0x6779f89e28a0b4af6e09d518caf014b7e8fc627400f5561f86fed11635b1458a",
        "urls": [
          "bzz-raw://a64dee983106de3be3f968be94368c1e37592f5418aa2a39e8dd358d5a962b0d",
          "dweb:/ipfs/QmYuECZTiEeQVxDLYx6pBSSnVrg56Apw75bugQiM3FmGwy"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/libraries/TickMath.sol": {
        "keccak256": "0x4e1a11e154eb06106cb1c4598f06cca5f5ca16eaa33494ba2f0e74981123eca8",
        "urls": [
          "bzz-raw://a79a57f7b240783b045168d1c4f774ac1812caf8f9a83cb6959a86b0b07b6c70",
          "dweb:/ipfs/QmTb5kvxwDNW8jDuQaqdJ445cCFejNkUqEB17Bjo8UBiva"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/libraries/UnsafeMath.sol": {
        "keccak256": "0xa6e55e0a43a15df2df471d9972cd48f613d07c663ecb8bbeaf7623f6f99bcce4",
        "urls": [
          "bzz-raw://02ea6e13879fc5a5f35149a2f1cd8af3a1f0877ff69101dad53841d16f515572",
          "dweb:/ipfs/QmcpL4gdG6hL2w1wqs2Vw4J1EFCwBs9T1Qd4p16CtECQkn"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/types/BalanceDelta.sol": {
        "keccak256": "0xa719c8fe51e0a9524280178f19f6851bcc3b3b60e73618f3d60905d35ae5569f",
        "urls": [
          "bzz-raw://7436928dc9de35c6c7c5c636cb51adaf295cfd590da83b19a004ae33cbec9ef9",
          "dweb:/ipfs/QmRJ9yZkUpzk4433GX3LgVVL8jwpbSYSUwXcucKisf3v4H"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/types/BeforeSwapDelta.sol": {
        "keccak256": "0x2a774312d91285313d569da1a718c909655da5432310417692097a1d4dc83a78",
        "urls": [
          "bzz-raw://a2c7a0379955cff9c17ab9e61f95e42909aa5947c22740f86ce940d09856f782",
          "dweb:/ipfs/QmaAuo8UBYXsGrVuKh8iRoAAdqwtg1jDq515cW1ZRP5m9K"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/types/Currency.sol": {
        "keccak256": "0x4a0b84b282577ff6f8acf13ec9f4d32dbb9348748b49611d00e68bee96609c93",
        "urls": [
          "bzz-raw://45f9d62ab3d51b52957279e353853ba1547c3182c9a1e3d1846ada4a90263b01",
          "dweb:/ipfs/QmS8NG84ccQS1yXVD8cv3eKX7J1UKxuJhbUfHTQR2opKF5"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/types/PoolId.sol": {
        "keccak256": "0x308311916ea0f5c2fd878b6a2751eb223d170a69e33f601fae56dfe3c5d392af",
        "urls": [
          "bzz-raw://669c2cd7ac17690b5d8831e0bda72822376c3a04b36afed6d31df4d75fe60918",
          "dweb:/ipfs/QmT6EpkxqU8VF3WsgrZ66F3s1cCQRffR95z1HDYZz7ph6y"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/types/PoolKey.sol": {
        "keccak256": "0xf89856e0580d7a4856d3187a76858377ccee9d59702d230c338d84388221b786",
        "urls": [
          "bzz-raw://6f3118fa189025695c37fdf0bdd1190f085ad097484d3c88cf4c56d1db65f639",
          "dweb:/ipfs/QmamXpgtB8GV1CaFLvqefPWSoikLDhMk1yU4heBnVzU8gi"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/types/Slot0.sol": {
        "keccak256": "0x8b4912fac7e25ea680056748121113f902d56f8b2640f421d5c38d438db11c1b",
        "urls": [
          "bzz-raw://c19b1ff5b951fb54129268d2be37d82c8bb3ea6e29ac9bc78a8a37794fc082b8",
          "dweb:/ipfs/QmTAQ2mUoiT77hoWJAfn9pyoGy47qaevn45QHrbyovGt2C"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "id": 52
}
